<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Not late yet</title>
  
  <subtitle>社会喧嚣，工作枯燥，青春渐逝。幡然醒悟，重燃激情，即刻出发。</subtitle>
  <link href="https://www.notlate.net/atom.xml" rel="self"/>
  
  <link href="https://www.notlate.net/"/>
  <updated>2021-03-18T15:04:38.598Z</updated>
  <id>https://www.notlate.net/</id>
  
  <author>
    <name>ACDance</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深度学习推荐系统-总结02：美团技术团队精选博文</title>
    <link href="https://www.notlate.net/posts/a03121e1.html"/>
    <id>https://www.notlate.net/posts/a03121e1.html</id>
    <published>2021-03-11T06:04:41.000Z</published>
    <updated>2021-03-18T15:04:38.598Z</updated>
    
    <content type="html"><![CDATA[<h4 id="本文主要收藏美团技术团队博客在广告-搜索-推荐等相关领域的优秀博文与实践经验"><a class="markdownIt-Anchor" href="#本文主要收藏美团技术团队博客在广告-搜索-推荐等相关领域的优秀博文与实践经验"></a> 本文主要收藏“<a href="https://tech.meituan.com/">美团技术团队博客</a>”在广告、搜索、推荐等相关领域的优秀博文与实践经验。</h4><blockquote><h3 id="推荐"><a class="markdownIt-Anchor" href="#推荐"></a> 推荐</h3></blockquote><ul><li>2020.12.10 <a href="https://tech.meituan.com/2020/12/10/session-based-recommendation-icdm-neurec-workshop-2020.html">ICDM论文：探索跨会话信息感知的推荐模型</a></li><li>2020.08.27 <a href="https://tech.meituan.com/2020/08/27/kdd-cup-autograph-practice.html">KDD Cup 2020 AutoGraph比赛冠军技术方案及在美团的实践</a></li><li>2020.08.20 <a href="https://tech.meituan.com/2020/08/20/kdd-cup-debiasing-practice.html">KDD Cup 2020 Debiasing比赛冠军技术方案及在美团的实践</a></li><li>2019.02.21 <a href="https://tech.meituan.com/2019/02/21/meituan-delivery-eta-estimation-in-the-practice-of-deep-learning.html">深度学习在美团配送ETA预估中的探索与实践</a></li><li>2018.11.15 <a href="https://tech.meituan.com/2018/11/15/reinforcement-learning-in-mt-recommend-system.html">强化学习在美团“猜你喜欢”的实践</a></li><li>2018.03.29 <a href="https://tech.meituan.com/2018/03/29/recommend-dnn.html">美团“猜你喜欢”深度学习排序模型实践</a></li><li>2017.07.28 <a href="https://tech.meituan.com/2017/07/28/dl.html">深度学习在美团推荐平台排序中的运用</a></li><li>2017.06.16 <a href="https://tech.meituan.com/2017/06/16/travel-search-strategy.html">美团点评旅游搜索召回策略的演进</a></li><li>2017.03.24 <a href="https://tech.meituan.com/2017/03/24/travel-recsys.html">旅游推荐系统的演进</a></li><li>2016.12.09 <a href="https://tech.meituan.com/2016/12/09/feature-pipeline.html">外卖排序系统特征生产框架</a></li><li>2016.03.03 <a href="https://tech.meituan.com/2016/03/03/deep-understanding-of-ffm-principles-and-practices.html">深入FFM原理与实践</a></li><li>2015.01.22 <a href="https://tech.meituan.com/2015/01/22/mt-recommend-practice.html">美团推荐算法实践</a></li><li>2014.12.18 <a href="https://tech.meituan.com/2014/12/18/poi-category-recommendation-algorithm-based-on-machine-learning.html">基于机器学习方法的POI品类推荐算法</a></li></ul><blockquote><h3 id="搜索"><a class="markdownIt-Anchor" href="#搜索"></a> 搜索</h3></blockquote><ul><li>2020.09.27 <a href="https://tech.meituan.com/2020/09/27/kdd-cup-multimodalities-recall-02.html">KDD Cup 2020多模态召回比赛亚军方案与搜索业务应用</a></li><li>2020.09.27 <a href="https://tech.meituan.com/2020/09/27/kdd-cup-multimodalities-recall-03.html">KDD Cup 2020多模态召回比赛季军方案与搜索业务应用</a></li><li>2020.08.20 <a href="https://tech.meituan.com/2020/08/20/mt-bert-in-document.html">MT-BERT在文本检索任务中的实践</a></li><li>2020.07.23 <a href="https://tech.meituan.com/2020/07/23/ner-in-meituan-nlp.html">美团搜索中NER技术的探索与实践</a></li><li>2020.07.16 <a href="https://tech.meituan.com/2020/07/16/augur-in-meituan-nlp.html">智能搜索模型预估框架Augur的建设与实践</a></li><li>2020.07.09 <a href="https://tech.meituan.com/2020/07/09/bert-in-meituan-search.html">BERT在美团搜索核心排序的探索和实践</a></li><li>2020.04.16 <a href="https://tech.meituan.com/2020/04/16/transformer-in-meituan.html">Transformer 在美团搜索排序中的实践</a></li><li>2020.03.26 <a href="https://tech.meituan.com/2020/03/26/wsdm-2020-bert-lightgbm.html">WSDM Cup 2020检索排序评测任务第一名经验总结</a></li><li>2019.11.14 <a href="https://tech.meituan.com/2019/11/14/nlp-bert-practice.html">美团BERT的探索和实践</a></li><li>2019.01.10 <a href="https://tech.meituan.com/2019/01/10/deep-learning-in-meituan-hotel-search-engine.html">深度学习在搜索业务中的探索与实践</a></li><li>2015.12.07 <a href="https://tech.meituan.com/2015/12/07/rerank-solution-offline.html">美团O2O排序解决方案——线下篇</a></li><li>2015.11.26 <a href="https://tech.meituan.com/2015/11/16/meituan-search-rank.html">美团O2O排序解决方案——线上篇</a></li></ul><blockquote><h3 id="广告"><a class="markdownIt-Anchor" href="#广告"></a> 广告</h3></blockquote><ul><li>2019.11.28 <a href="https://tech.meituan.com/2019/11/28/advertising-performance-experiment-configuration-platform.html">美团点评效果广告实验配置平台的设计与实现</a></li><li>2019.03.14 <a href="https://tech.meituan.com/2019/03/14/information-flow-creative-optimization-practices.html">大众点评信息流基于文本生成的创意优化实践</a></li><li>2018.06.07 <a href="https://tech.meituan.com/2018/06/07/searchads-dnn.html">深度学习在美团搜索广告排序的应用实践</a></li><li>2018.05.11 <a href="https://tech.meituan.com/2018/05/11/adp-rtidx-ls.html">美团广告实时索引的设计与实现</a></li><li>2017.12.04 <a href="https://tech.meituan.com/2017/12/04/targeting-agentscore.html">美团点评联盟广告场景化定向排序机制</a></li><li>2017.05.05 <a href="https://tech.meituan.com/2017/05/05/mt-dsp.html">美团DSP广告策略实践</a></li></ul><blockquote><h3 id="知识图谱"><a class="markdownIt-Anchor" href="#知识图谱"></a> 知识图谱</h3></blockquote><ul><li>2020.12.03 <a href="https://tech.meituan.com/2020/12/03/cikm-2020-nlp.html">CIKM 2020 | 一文详解美团6篇精选论文</a></li><li>2019.01.17 <a href="https://tech.meituan.com/2019/01/17/dianping-search-deeplearning.html">大众点评搜索基于知识图谱的深度学习排序实践</a></li><li>2018.11.10 <a href="https://tech.meituan.com/2018/11/01/meituan-ai-nlp.html">美团大脑：知识图谱的建模方法及其应用</a></li></ul><blockquote><h3 id="工程实践"><a class="markdownIt-Anchor" href="#工程实践"></a> 工程实践</h3></blockquote><ul><li>2020.07.01 <a href="https://tech.meituan.com/2020/07/01/kv-squirrel-cellar.html">美团万亿级 KV 存储架构与实践</a></li><li>2020.05.28 <a href="https://tech.meituan.com/2020/05/28/peisong-a-b-test.html">美团配送A/B评估体系建设实践</a></li><li>2019.08.15 <a href="https://tech.meituan.com/2019/08/15/mtflexbox-automation-buried-point-exploration.html">MTFlexbox自动化埋点探索</a></li><li>2018.12.20 <a href="https://tech.meituan.com/2018/12/20/head-in-l2r.html">深入浅出排序学习：写给程序员的算法系统开发实践</a></li><li>2018.10.25 <a href="https://tech.meituan.com/2018/10/25/dl-system-in-nlu-and-speech.html">美团深度学习系统的工程实践</a></li><li>2018.10.18 <a href="https://tech.meituan.com/2018/10/18/meishi-data-flink.html">美团基于 Flink 的实时数仓建设实践</a></li><li>2018.07.27 <a href="https://tech.meituan.com/2018/07/27/redis-rehash-practice-optimization.html">美团针对Redis Rehash机制的探索和实践</a></li><li>2018.03.20 <a href="https://tech.meituan.com/2018/03/20/user-funnel-analysis-design-build.html">每天数百亿用户行为数据，美团点评怎么实现秒级转化分析？</a></li><li>2018.03.16 <a href="https://tech.meituan.com/2018/03/16/redis-high-concurrency-optimization.html">Redis 高负载下的中断优化</a></li><li>2018.01.26 <a href="https://tech.meituan.com/2018/01/26/realtime-data-measure.html">美团点评基于Storm的实时数据处理实践</a></li><li>2017.11.17 <a href="https://tech.meituan.com/2017/11/17/flink-benchmark.html">流计算框架 Flink 与 Storm 的性能对比</a></li><li>2017.04.21 <a href="https://tech.meituan.com/2017/04/21/mt-leaf.html">Leaf——美团点评分布式ID生成系统</a></li><li>2016.05.12 <a href="https://tech.meituan.com/2016/05/12/spark-tuning-pro.html">Spark性能优化指南——高级篇</a></li><li>2016.04.29 <a href="https://tech.meituan.com/2016/04/29/spark-tuning-basic.html">Spark性能优化指南——基础篇</a></li><li>2016.03.13 <a href="https://tech.meituan.com/2016/03/31/spark-in-meituan.html">Spark在美团的实践</a></li><li>2015.02.10 <a href="https://tech.meituan.com/2015/02/10/machinelearning-data-feature-process.html">机器学习中的数据清洗与特征处理综述</a></li></ul><blockquote><h3 id="本文会持续收集更新首发于个人小站notlatenet欢迎关注"><a class="markdownIt-Anchor" href="#本文会持续收集更新首发于个人小站notlatenet欢迎关注"></a> 本文会持续收集更新，首发于个人小站：<a href="https://notlate.net/posts/a03121e1.html">NotLate.net</a>，欢迎关注。</h3></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;本文主要收藏美团技术团队博客在广告-搜索-推荐等相关领域的优秀博文与实践经验&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#本文主要收藏美团技术团队博客在广告-搜索-推荐等相关领域的优秀博文与实践经验&quot;&gt;&lt;/a&gt; 本文主要收藏“&lt;a h</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="推荐系统" scheme="https://www.notlate.net/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="计算广告" scheme="https://www.notlate.net/tags/%E8%AE%A1%E7%AE%97%E5%B9%BF%E5%91%8A/"/>
    
    <category term="工程实践" scheme="https://www.notlate.net/tags/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/"/>
    
    <category term="知识图谱" scheme="https://www.notlate.net/tags/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-总结01：推荐算法发展里程碑</title>
    <link href="https://www.notlate.net/posts/7ed931fc.html"/>
    <id>https://www.notlate.net/posts/7ed931fc.html</id>
    <published>2021-03-08T06:47:31.000Z</published>
    <updated>2021-03-18T15:04:38.598Z</updated>
    
    <content type="html"><![CDATA[<p>推荐算法从传统方法到深度学习方法发展里程碑</p><table><thead><tr><th>时间</th><th>作者</th><th>技术名称</th><th>说明</th></tr></thead><tbody><tr><td>2003</td><td>Amazon</td><td>ItemCF(基于物品的协同过滤)</td><td>不仅让Amazon的推荐系统广为人知，更让协同过滤成为今后很长时间的研究热点和业界主流的推荐模型。</td></tr><tr><td>2006</td><td>Netflix</td><td>MF(矩阵分解)</td><td>在Netflix Prize Challenge中，以矩阵分解为主的推荐算法大放异彩，拉开了矩阵分解在业界流行的序幕。</td></tr><tr><td></td><td></td><td>LR(逻辑回归)</td><td>深度学习的基础性结构，能够融合多特征，成为了独立于协同过滤的推荐模型的另一个重要发展方向</td></tr><tr><td>2010</td><td>Rendle</td><td>FM</td><td>FM在2012~2014年前后，成为业界主流的推荐模型之一</td></tr><tr><td>2015</td><td>Yuchi Juan</td><td>FFM</td><td>基于FM提出的FFM在多项CRT预估大赛中夺魁，并被Criteo、美团等公司深度应用在推荐系统、CTR预估等领域</td></tr><tr><td>2014</td><td>Facebook</td><td>GBDT+LR</td><td>利用GBDT自动进行特征筛选和组合，解决了工程上应用LR的特征组合难度。</td></tr><tr><td>2017</td><td>阿里巴巴</td><td>LS-PLM</td><td>自动2012年起成为阿里巴巴主流推荐模型，直至2017年才公开，与三层神经网络及其相似，可以把它看成连接前后深度学习时代的节点。</td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>2015</td><td>澳大利亚国立大学</td><td>AutoRec</td><td>将自编码器的思想与协同过滤结合，提出了一种单隐层神经网络推荐模型</td></tr><tr><td>2016</td><td>微软</td><td>Deep Crossing</td><td>深度学习架构在推荐系统中的完整应用</td></tr><tr><td>2016</td><td>谷歌</td><td>Wide&amp;Deep</td><td>自提出至今一直在业界发挥着巨大影响力的模型，Wide部分具有逻辑回归的优点，Deep部分具有深度神经网络的优点。</td></tr><tr><td>2018</td><td>阿里巴巴</td><td>DIN</td><td>是一次基于实际业务观察的模型改进，提了业界非常知名的深度兴趣网络，把注意力机制引入深度学习推荐模型，用于捕捉用户兴趣。</td></tr><tr><td>2019</td><td>阿里巴巴</td><td>DIEN</td><td>兴趣进化网络，DIN的演化版本，引入序列模型，用于模拟用户兴趣进化过程。</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;推荐算法从传统方法到深度学习方法发展里程碑&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;作者&lt;/th&gt;
&lt;th&gt;技术名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2003&lt;/td</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="推荐系统" scheme="https://www.notlate.net/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="协同过滤" scheme="https://www.notlate.net/tags/%E5%8D%8F%E5%90%8C%E8%BF%87%E6%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>机器之心-2020年AI进展及2021年趋势关注重点笔记</title>
    <link href="https://www.notlate.net/posts/d837735f.html"/>
    <id>https://www.notlate.net/posts/d837735f.html</id>
    <published>2021-02-26T12:22:15.000Z</published>
    <updated>2021-03-18T15:04:38.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-人工智能技术总趋势"><a class="markdownIt-Anchor" href="#1-人工智能技术总趋势"></a> 1. 人工智能技术总趋势</h2><h3 id="无监督学习是未来技术突破的主要着力点"><a class="markdownIt-Anchor" href="#无监督学习是未来技术突破的主要着力点"></a> 无监督学习是未来技术突破的主要着力点</h3><p>在语言技术和视觉技术这两个人工智能感知层应用落地最成熟的两个技术领域，无监督学习都是被提及频率最高的技术发展趋势。NLP领域目前最成功的大规模预训练语言模型（BERT等）证明了无监督学习在自言语言处理类任务里的可行性与发展潜力，transformer体系结构已成为NLP任务的实际标准，开始扩展至最相关的语音技术领域，而计算机视觉领域相比NLP更早使用注意力机制，但对于trnasformer模型的应用仍然受到卷及网络结构本身的限制。<strong>由Google Brain团队开发的最新视觉transformer模型（ViT）已经在突破这种限制上作出了可行的尝试，通过对大量数据的预训练，该模型已经可以成功迁移运营在多个中小型CV数据及（如ImageNet、CIFAR-100/VTAB等）上并取得目前最先进的SOTA表现</strong>。</p><p>2018年的图领奖的共同获得者Geoffrey Hinton、Yann LeCun以及Yoshua Bengio几年的研究重点也一直放在无监督学习层面：<strong>Hinton近年来专注研究的胶囊网络的最新版本在无监督学习上找到了最合适发展方式；LeCun一致提倡的自监督学习方法则是一种“利用完整数据监督不完整数据修复”的特殊的无监督学习；而Bengio提倡的借鉴认知科学的符号推理相结合的方法同样需要研究先验知识如何降低数据的需求</strong>。三位业界巨擘都认识到无监督学习在解决深度学习缺乏场景数据和计算资源的问题上有巨大的可能性。诸多数据表明，无监督学习有利于解决目前人工智能技术的主要瓶颈之一：数据不足问题，与其希望管的少样本学习、模仿学习、自监督学习以及对比学习等都有着无限可能性。</p><h3 id="移动设备和iot设备开始承担更多aiml计算"><a class="markdownIt-Anchor" href="#移动设备和iot设备开始承担更多aiml计算"></a> 移动设备和IoT设备开始承担更多AI/ML计算</h3><p>随着移动智能手机和IoT设备的计算能力越来越强，用户和监督机构对数据隐私的保护越来越重视，同时移动网络5G的逐步部署落地，移动设备和IoT设备会进行更多的AI/ML的计算和训练。这使得人工智能离数据更近，离用户更近，也能更迅速地进行迭代升级。一方面，云计算发展依旧迅猛，并逐渐向边缘计算发展，助力物联网智能化；另一方面，AI芯片也主线走向云端、边缘端以及物联网设备终端，有实力的科技公司将AI算力打包成服务，既合理利用了自身多余的算力资源，又降低了不具备相关科研实力的中小企业可以以更低的成本使用到足够的资源，完成自身的AI开发与部署需求，这与近年来媒体讨论度颇高的无服务计算有着一致的思想理念。</p><h3 id="图神经网络-土深度学习-大规模图计算平台将有很大发展空间"><a class="markdownIt-Anchor" href="#图神经网络-土深度学习-大规模图计算平台将有很大发展空间"></a> 图神经网络、土深度学习、大规模图计算平台将有很大发展空间</h3><p>几年来，受社交网络、知识图谱以及生物信息学和神经科学中图形的重要性所驱动，将深度学习模型应用在不规则图结构的数据上逐渐成为了一种新兴趋势。这些基于图的神经网络（GNN）通常将神经网络模型应用在图中与点和边相关的特征上，传播运算结果并进行聚合，从而生成下一级的特征，目前已经在分类、嵌入、问答等多种不同的目标应用中取得最佳表现效果。2019~2020年，无论是在自然语言处理、计算机视觉、机器学习的相关学术会议上，图神经网络的相关论文均占据着不小比例。这种方法“<strong>将端到端学习与归纳推理相结合，业界普遍认为其有望解决深度学习无法处理的因果推理、可解释性等一系列瓶颈问题</strong>”。相比传统的文本、语音、图像数据格式，图结构是一种泛用性更强且更能代表现实世界真实情况的数据表示方式。<strong>随着知识图谱与推荐系统得到越来越广阔的应用，能够更切合相关数据表示的图神经网络深度学习未来大有可为</strong>。</p><h2 id="2-人类语言技术"><a class="markdownIt-Anchor" href="#2-人类语言技术"></a> 2. 人类语言技术</h2><h3 id="大规模预训练语言模型"><a class="markdownIt-Anchor" href="#大规模预训练语言模型"></a> 大规模预训练语言模型</h3><p>2018~2019年里，尤其是2019年，大规模预训练语言模型似乎成了NLP领域技术指标突破逃不开的技术方法。在ELMo之前，深度学习在自然语言处理的主要应用方向在于从词到句子级别的分布式表征，word2vec是此类方法的典型代表。虽然一时间<strong>预训练的词向量在诸多自然语言处理任务上取得了不错的进展，但词向量本身都是上下文无关的，也就是一个词的向量表示在不同语境中总是相同的，这就意味着词向量无法解决语言技术里很大的一个障碍，一词多义问题。因此研究人员们开始在具体的下游任务中基于词向量的序列来做编码，这种seq2seq端到端的思想迅速取代了word2vec的热潮，而谷歌在这个基础上研发出的自注意力机制模型transformer可算是这个思想的集大成者</strong>。也正是同一时间，来自华盛顿大学的研究者开发出了ELMo模型，通过语言模型来获得一个上下文相关的预训练表示，并通过定制成功的用在了多个不同的下游任务上取得领先的表现效果。而<strong>仅仅针对文本进行丰富的encoding尚不足以覆盖所有NLP下游任务，尤其是QA、阅读理解等包含问询关系等多种复杂模式的情况下，下游任务的网络需要更多不同的结构调整，同一个模型在多个不同任务、甚至同一任务不同数据集上的表现差别仍然有待提高，这也就促使了BERT的诞生</strong>。BERT类模型使用大规模语料数据采取更深程度的预训练，从而形成一个更为通用的模型基底。这比覆盖上下文语境含义的词向量更进一步，而涉及到下游任务时也仅需要定制一个非常轻量级的输出层而不需要对模型骨架做重大调整。</p><h2 id="3-计算机视觉"><a class="markdownIt-Anchor" href="#3-计算机视觉"></a> 3. 计算机视觉</h2><p>计算机视觉下游主要技术任务：人脸识别、物体识别、目标检测、风格迁移、姿态估计、语义分割、图像降噪等；</p><p>主要的模型方法：CNN、点云等；</p><h3 id="学界问卷情况摘录重点"><a class="markdownIt-Anchor" href="#学界问卷情况摘录重点"></a> 学界问卷情况（摘录重点）</h3><p><strong>图像处理与生成领域</strong>：较为成熟的部分为图像降噪、图像增强、图像超分辨率等技术任务，而图像生成被认为还是停留在“工程化验证其广泛使用的可行性以及解决规划化及成本等工程问题的阶段”，仍需要充分理解图像生成内在机制，优化参数控制能力。目前图像处理与生成的速度、泛化性、鲁棒性是瓶颈，以及用户对图像生成还不可控。</p><p><strong>图像分割领域</strong>：专家认为其实时性、边缘锐化性扔有待提高，与多任务、多模态相结合也可以产生新的研究成果。</p><p><strong>三维重建、三维推理领域</strong>：比点云模型在专家问卷中的得分更高一点，专家认为目前整个计算机视觉领域往三维视觉、机器人控制方面靠拢。3D视觉数据量大，数据结构无需不均匀，建模精度以及建模速度是主要的瓶颈。三维视觉的成本是否能够达到2D图像的技术量级，如何解决工程应用问题实现大规模应用同样是值得探索的方向。</p><p><strong>视频理解领域</strong>：基本技术有待突破，近期内看不到跨越语义鸿沟的捷径，也许需要等待新的人工智能框架的到来，目前视频方面相关数据缺少标注且视频相比图像计算量过大，存在冗余信息，如何处理这些冗余信息以及如何高效利用复杂信息是一些视频理解的关键问题，实时性、视频理解的颗粒度需要重点考虑，图像和视频生成模型也会有不少突破的技术方向。</p><h2 id="4-机器学习"><a class="markdownIt-Anchor" href="#4-机器学习"></a> 4. 机器学习</h2><p>机器学习的六大主要技术领域：深度学习、强化学习、迁移学习、元学习、联邦学习和自动化机器学习。</p><h3 id="生成对抗网络的技术性突破"><a class="markdownIt-Anchor" href="#生成对抗网络的技术性突破"></a> 生成对抗网络的技术性突破</h3><p>生成对抗网络（GAN）与2014年被提出，并广泛应用于计算机视觉领域，例如图片生成等任务。GAN被美国《麻省理工科技评论》评为2018年“全球十大突破性技术”。截止2020年，GAN已有几百种变形，影响力较大的有2018年提出的BigGAN、SNGAN和AttnGAN，以及2019年提出的AutoGAN、StyleGAN等。2019年英伟达发布了StyleGAN2，这项能“混淆显示和虚拟界限”的技术被社区认为帮助解决AI社区面临的难题，如抓握式机器臂和自动驾驶。</p><h3 id="多模态技术的崛起"><a class="markdownIt-Anchor" href="#多模态技术的崛起"></a> 多模态技术的崛起</h3><p>随着深度学习技术的发展，不同的研究人员在进行特征识别时，会加上更多模态的特征，这也推动了多模态学习的发展。如在内容理解任务中，可看到自2019年起，CDG广告、CSIG音视频、IEG内容推荐、PCG信息流、TEG书评广告推荐和AI平台部团队、WXG看一看团队都有融合多模态特征进行内容理解需求。微软AI明星产品小冰不仅会作诗，还会唱歌作曲、阅读两宋、撰写新闻等，多模态识别技术正是小冰越来越像人一样沟通表达的关键之一。多模态技术同样也在视频网站、电商物流、自动驾驶等领域得到广泛应用。如爱奇艺退出的“只看TA”功能，优酷视频正在使用的视频帧、人脸帧的图向量检索，都离不开多模态识别技术的支持；京东淘宝等电商平台的“拍照购”、“拍立淘”的搜索技术背后也都是在计算机视觉技术下，使用了图像、文本和高层语义属性等多模态下的信息融合，才实现高精度的“以图搜图”功能；百度提出的“多模态深度语义理解”，则让AI实现了从“看清听清”到“看懂听懂”的进化。</p><h2 id="5-数据智能技术"><a class="markdownIt-Anchor" href="#5-数据智能技术"></a> 5. 数据智能技术</h2><h3 id="知识图谱快速发展模型-框架-数据集涌现"><a class="markdownIt-Anchor" href="#知识图谱快速发展模型-框架-数据集涌现"></a> 知识图谱：快速发展，模型、框架、数据集涌现</h3><p>知识图谱作为一个相对年轻的技术领域，仍然处在发展期，各种知识表征模型和框架、知识图谱开放数据集层出不穷。2019年是知识图谱相关技术飞速发展的一年，世界顶级NLP大会ACL一次性收录了超30篇高质量知识图谱类论文，其中对于关系向量和图神经网络的论述将对知识图谱中关系补全、推理决策和认知计算都带来长足发展。作为集大数据和人工智能于一身的综合技术，知识图谱在人工智能浪潮中将迎来更多发展。</p><h3 id="信息检索和推荐系统深度学习带来突破相关市场更加繁荣"><a class="markdownIt-Anchor" href="#信息检索和推荐系统深度学习带来突破相关市场更加繁荣"></a> 信息检索和推荐系统：深度学习带来突破，相关市场更加繁荣</h3><p>信息检索和推荐系统的进步来源于深度学习技术的进步，无论是GAN、RNN等神经网络模型的应用，还是排序算法、优化算法的创新，信息检索和推荐系统发展的显著特征是，深度学习将发挥越来越重要的作用。近五年来信息检索的发展得益于自然语言处理和知识图谱的突破；推荐系统则越来越受到企业和市场的重视，推荐算法在视频网站、短视频平台、社交平台发挥着更加重要的角色，市场的繁荣又反哺着相关技术的创新突破。</p><h2 id="6-前沿智能技术"><a class="markdownIt-Anchor" href="#6-前沿智能技术"></a> 6. 前沿智能技术</h2><h3 id="敏感技术领域的相关规章制度-法律法规愈发完善"><a class="markdownIt-Anchor" href="#敏感技术领域的相关规章制度-法律法规愈发完善"></a> 敏感技术领域的相关规章制度、法律法规愈发完善</h3><p>自lan Goodfellow在2015年的ICLR会议上以熊猫与长臂猿分类的例子对生成对抗样本方法和相关知识进行论述以后，<strong>深度学习下个神经网络算法的安全性和鲁棒性越发收到研究界的重视</strong>。2016年特斯拉手气自动驾驶致死车祸发生；同年DeepMind与OpenAI两大机构都针对人工智能安全方面的缺陷和挑战问题发表了相关论文；欧盟会议投票通过了史上最严格的数据保护法案GDPR。此后人工智能安全逐渐成为一个相对独立的新兴研究领域，各国政府和相关生态也纷纷发布相应的标准和规则，AI安全的研究开始与各项AI技术进步共同发展，相互促进。</p><h2 id="7-技术领域大事件"><a class="markdownIt-Anchor" href="#7-技术领域大事件"></a> 7. 技术领域大事件</h2><h3 id="1-人类语言技术"><a class="markdownIt-Anchor" href="#1-人类语言技术"></a> 1. 人类语言技术</h3><ul><li>2015 稀有词汇翻译方法Subword Units诞生</li><li>2015 Christopher D. Manning提出全局和局部注意力机制</li><li>2016 问答数据集SQuAD</li><li>2016 Facebook AI Reasearch开发出快速文本分类器FastText</li><li>2016 Parikh等在自然语言中使用attention机制。</li><li>2016 GNMT</li><li>2016 Quirk等第一次提出应用远程监督跨句子关系抽取</li><li>2017 Vaswani等人提出了基于注意力机制的google transformer</li><li>2017 OpenNMT</li><li>2018 M.E.Peters，M.Neumann等人提出ELMo（Embeddings from Language Models）</li><li>2018 OpenAI提出可迁移至多种NLP任务的通用模型GPT，结合了Transformer和无监督预训练，开启了预训练结合transformer模型的篇章</li><li>2018 Google提出并开源了基于双向Transformer的大规模预训练语言模型BERT，该预训练模型能高效抽取文本信息并应用于各种NLP任务，该研究凭借预训练模型刷新了11项NLP任务的当前最优性能记录。</li><li>2018 问答数据集SQuAD 2.0</li><li>2018 GLUE</li><li>2018 Understanding Back-Translation at Scale</li><li>2018 NAACL2018最佳论文《Deep contextualized word representations》提出了一种进行深度语境化词表征，可对词使用的复杂特征（如句法和语义）和词使用在语言语境中的变化进行建模（即对多义词进行建模）</li><li>2019 CMU与Google的研究者提出了一种泛化的自回归预训练语言模型XLNet，融合了当时最优自回归模型Transformer-XL的思路，克服了BERT本身一些先天缺陷，并在多个自然语言任务上取得了SOTA表现。</li><li>2019 Transformer-XL</li><li>2019 SuperGLUE</li><li>2019 谷歌提出预训练模型T5，参数量达到了110亿，再次刷新Glue榜单，成为全新的NLP SOTA预训练模型</li><li>2019 百度正式发布ERNIE 2.0，16项中英文任务超越BERT、XLNet，刷新SOTA。</li><li>2019 OpenAI推出了GPT模型的升级版，号称“史上最强通用NLP模型”的GPT-2，并与2019年11越开源公开了其最完整的15亿参数模型。</li><li>2019 RoBERTa（Robustly Optimized BERT Pretraining Approach）</li><li>2019 ALBERT：A Lite BERT For Self-Supervised Learning Of Language Representations</li><li>2019 HuggingFace Transformer Library</li><li>2019 DistilBERT</li><li>2019 TinyBERT</li><li>2019 英伟达语音识别模型Jasper</li><li>2020 谷歌开源语言可解释性工具LIT</li><li>2020 CMU &amp; Google Brain提出收个与任务无关的轻量级预训练模型MobileBERT</li><li>2020 AllenNLP 1.0</li><li>2020 谷歌推出了NLP系列“芝麻街”的新成员Big Bird</li><li>2020 对话智能新高度：百度发布超大规模开放域对话生成网络PLATO-2</li><li>2020 哈佛、FAIR提出基于残差能量模型的文本生成</li><li>2020 微软发布通用文档理解预训练模型LayoutLM</li><li>2020 CLUECorpus2020：当前最大的开源中文语料库以及高质量中文预训练模型集合</li><li>2020 微软发布自然语言理解的多任务工具包MT-DNN</li><li>2020 微软发布Turing-NLG，史上最大的NLG模型</li><li>2020 HuggingFace文本Tokenizer项目</li><li>2020 OpenAI推出最新的预训练语言模型GPT-3，具有1750亿参数，堪称史上最大的AI模型</li><li>2020 覆盖40种语言：谷歌发布多语言、多任务NLP新基准XTREME</li><li>2020 ELECTRA（Efficiently Learning an Encoder that Classified Token Replacements Accurately</li><li>2020 GPT API</li></ul><h3 id="2-计算机视觉"><a class="markdownIt-Anchor" href="#2-计算机视觉"></a> 2. 计算机视觉</h3><ul><li>2015 在Google Brain工作的基础山个，蒙特利尔大学的eYoshua Bengio对模型加入了attention（注意力机制），使解码器在生成语言的时候，能聚焦到图像上某一块区域的重点，这种机制的加入使得该模型的能力更加强大，在Flickr8k，Flickr30k和MS COCO上取得了历史最佳成绩。</li><li>2015 He等学者提出了ResNet</li><li>2015 Google 提出了FaceNet，同样是人脸识别领域的分水岭性工作</li><li>2015 Parkhi等人提出了Deep Face Recognition</li><li>2015 Olaf等提出了U-Net</li><li>2016 Liang-Chieh Chen等人提出了DeepLab</li><li>2016 Single-shot detection（SSD）被提出</li><li>2016 FAIR实验室提出了Feature Pyramid Networks for Object Detection</li><li>2016 Scott等人开发了一种新的GAN架构，以有效的桥接文本和图像建模之间的步骤</li><li>2017 Peng Wang等人提出了VQA-machine</li><li>2017 英伟达Jun-Yan Zhu等人提出了图像迁移算法CycleGAN</li><li>2018 DeepMind带来的BigGAN创造性的将正交正则化的思想引入GAN</li><li>2019 Adobe提出新型超分辨率方法：用神经网络迁移参照图像纹理</li><li>2019 谷歌公布大型图像数据集Image V5，同时宣布即将开展开放图像挑战</li><li>2019 英伟达的Ming-yu Liu等人提出了一种少样本无监督的图像到图像转换方法</li><li>2019 李飞飞等人提出Auto-DeepLab：自动搜索图像语义分割架构</li><li>2019 谷歌发布EfficientNet新架构，全面超越传统卷积神经网络</li><li>2020 源于Facebook AI的RegNet超越EfficientNet，在GPU上实现了5倍加速</li></ul><h3 id="3-机器学习"><a class="markdownIt-Anchor" href="#3-机器学习"></a> 3. 机器学习</h3><h4 id="1通用机器学习"><a class="markdownIt-Anchor" href="#1通用机器学习"></a> （1）通用机器学习</h4><ul><li>2015 微软ResNet图像识别准确率超越人类</li><li>2017 Facebook提出目标实力分割框架Mask R-CNN，该架构较传统方法操作更简单、更灵活</li><li>2017 研究人员首次提出基于深度学习的Transformer编码解码结构</li><li>2018 Google AI十月发布的BERT论文，提出了一种深度双向Transformer模型，刷新了11种NLP任务的最佳表现</li><li>2018 英伟达发布Video-to-Video（vid2vid）合成论文，模型合成视频效果惊人</li><li>2018 华盛顿大学的Joseph Redmon等发布目标检测模型YoloV3</li><li>2018 Google 提出并开源了基于双向Transformer的大规模预训练语言模型BERT，改与训练模型能高效抽取文本信息并应用于各种NLP任务，该研究凭借预训练模型刷新了11项NLP任务的当前最优性能记录。</li><li>2019 哈佛大学和OpenAI发现“深度二次下降”的有趣现象，增大模型的参数规模，有一个区域会观察到loss反而会上升。</li><li>2019 DeepMind提出新型端到端神经网络架构PrediNet</li><li>2019 谷歌开源缩放模型EfficientNets：ImageNet准确率创纪录，效率提升10倍</li><li>2019 Google AI和Carnegie Mellon大学发布Transformer-XL</li></ul><h4 id="2-生成对抗网络gan"><a class="markdownIt-Anchor" href="#2-生成对抗网络gan"></a> （2） 生成对抗网络（GAN）</h4><ul><li>2015 Radford等人提出DCGAN，后成为很多GAN家族网络的基础</li><li>2017 Arjovsky等人提出WGAN</li><li>2017 Min Lin针对判别器和生成器训练过程中不平衡的问题，提出了softmax GAN</li><li>2017 Kim等人提出一种能够自动学习并发现跨域关系的生成对抗网络-DiscoGAN</li><li>2017 Jun-Yan Zhu等人提出CycleGAN</li><li>2018 DeepMind提出BigGAN，用于图像合成</li><li>2019 Xingyu Gong等人提出AutoGAN，自动搜索生成对抗网络的机构。</li><li>2019 Ian Goodfello等人将注意力机制引入GAN</li><li>2019 DeepMind提出“史上最强非GAN生成器” VQ-VAE-2</li><li>2019 英伟达提出新的GAN生成器架构-StyleGAN，也被称为GAN2.0</li><li>2019 清华团队首次实现量子GAN，只用1个量子比特，准确率98.8%</li></ul><h4 id="3强化学习rl"><a class="markdownIt-Anchor" href="#3强化学习rl"></a> （3）强化学习（RL）</h4><ul><li>2016 UC Berkeley发表了深度强化学习应用在机器人技术的论文。最近几年在深度强化学习领域，与UC Berkeley合作紧密的OpenAI公司和DeepMind公司两者成为行业引领者</li><li>2016 DeepMind发布AlphaGo，成为深度强化学习应用的著名案例</li><li>2016 Voloymyr Mnih等提出并行式的深度强化学习（A3C），在多数Atari游戏学习中胜出。</li><li>2016 Barret等发表论文《Neural Architecture Search With Reinforcement Learning》将强化学习应用于神经架构搜索</li><li>2017 DeepMind公司发布AlphaZero论文，进阶版的AlphaZero算法将围棋领域扩展到国际象棋、日本象棋领域，且无需人类专业知识就能击败各自领域的世界冠军。</li><li>2018 DeepMind在Nature Neuroscience发表新论文提出了一种新型的元强化学习算法</li><li>2018 OpenAI Five在Dota2游戏上战胜了优秀的人类玩家</li><li>2019 DeepMind在《Nature》杂志发表了AlphaStar的最新研究进展，展示了AI在没有任何游戏限制的情况下已经达到星际争霸2人类对战天梯的顶级水平，在Battle.net上的排名已经超越了99.8%的活跃玩家</li><li>2020 DeepMind发布分布式强化学习框架Acme，智能体并行性加强</li><li>2020 DeepMind推出Agent57，在所有雅达利游戏上超越人类玩家</li><li>2020 深度强化学习智能体在赛车游戏中一展超人表现</li></ul><h4 id="4automl"><a class="markdownIt-Anchor" href="#4automl"></a> （4）AutoML</h4><ul><li>2017 微软发布自动机器学习工具Neural Network Intelligence</li><li>2018 谷歌开源AdaNet，可集成学习的AutoML</li><li>2018 Texas A&amp;M大学的DATA实验室和社区贡献者开发了Auto-Keras</li><li>2018 通过在AutoML中结合进化算法执行架构搜索，谷歌开发出了当前最佳的图像分类模型AmoebaNet</li><li>2019  Xingyu Gong等人提出AutoGAN，自动搜索生成对抗网络的机构。</li><li>2019 何恺明组提出新型网络设计范式，能够充分结合手工设计和神经架构搜索的优势</li></ul><h4 id="5半监督"><a class="markdownIt-Anchor" href="#5半监督"></a> （5）半监督</h4><ul><li>2015 Rasmus等提出半监督ladderNet</li><li>2016 Tim等人将生成对抗网络应用在半监督学习上</li><li>2018 难打和第四范式提出Auto-SSL使半监督学习自动化</li><li>2018 Sebastian等将半监督学习和迁移学习相结合</li><li>2018 阿里提出应用LocalizedGAN进行半监督训练</li><li>2019 李飞飞团队提出一种补全视觉信息库的半监督方法</li></ul><h4 id="6无监督"><a class="markdownIt-Anchor" href="#6无监督"></a> （6）无监督</h4><ul><li>2015 Radford提出非监督式的DCGANs</li><li>2018 FAIR提出用聚类方法结合卷积网络，实现无监督端到端图像分类</li><li>2018 Facebook在EMNLP2018上的论文《Phrase-Based &amp; Neural Unsupervised Machine Translation》利用跨字嵌入（Cross Word Embedding），提升了高达11BLEU</li><li>2018 发布无监督语言翻译模型，向完全无监督词对齐再进一步</li><li>2019 DeepMind最新发布神经网络MONet无监督分割大法，为游戏而生</li><li>2019 来自UCLA与Google Brain的研究者提出了一种无监督的生成模型Self-supervised GAN，它将对抗训练与自监督学习相结合</li><li>2019 斯坦福AI研究院在论文《Uncertainty Autoencoders: Learning Compressed Representations via Variational Infomation Maximization》提出新的无监督表示学习框架</li><li>2018 DeepMind在论文《Are Labels Required for Improving Adversarial Robustness？》提出无监督对抗训练只需10%的CIFAR10标签便可获得SOTA稳健精度</li><li>2019 CapsNet的作者Hinton等联合牛津大学的研究者提出了胶囊网络的改进版本–堆栈式胶囊自编码器。这种胶囊自编码器可以无监督地学习图像中的特征，并在无监督分类任务取得最佳或接近最佳的表现。这也是胶囊网络第一次在无监督领域取得新的突破。</li></ul><h4 id="7迁移学习"><a class="markdownIt-Anchor" href="#7迁移学习"></a> （7）迁移学习</h4><ul><li>2015 Junlin Hu等人提出深度度量迁移学习</li><li>2017 杨强团队提出传递迁移学习</li><li>2017 迁移学习领域的新方向，与在线、增量学习结合</li><li>2018 提出一种新的终身学习框架</li><li>2018 Cybernetics提出一个通用的迁移学习框架，对不同的domain进行不同的特征变换</li><li>2019 Chen Qu等人基于迁移学习进行深度文本匹配</li><li>2019 Prithviraj等人提出利用知识图谱迁移学习来优化深度强化学习在文字冒险类游戏方面的表现</li><li>2019 Q. Shi等人将迁移学习应用在高光谱图像分类上</li><li>2020 D.Xi等人提出基于分类注意网络的领域自适应深度情感分析</li></ul><h4 id="8元学习meta-learning"><a class="markdownIt-Anchor" href="#8元学习meta-learning"></a> （8）元学习（Meta Learning）</h4><ul><li>2016 Jane X Wang等人提出了深度元强化学习</li><li>2017 Chelsea等人提出与模型无关的元学习（model-agnostic meta-learning，MAML）</li><li>2018 Jiatao Gu等人在2018年提出的一项研究建议引入的模型不可知元学习算法（MAML），用于低资源神经机器翻译（NMT）</li><li>2018 Chengxiang Yin等人提出ADML(ADversarial Meta-Learner)，用对抗性样本优化模型的初始化对抗性设定。</li><li>2019 Zhaojiang Lin等人提出用模型不可知原算法（MAML）进行不需人工描述的，仅需少量对话样本就可以学习对话的系统</li><li>2019 Kyle等人开发了一种无监督元学习方法，显示地优化了从少量数据学习各种任务的能力，开启了无需进行显示任务描述的元学习大门</li><li>2019 伯克利大学人工智能实验室提出在线元学习，弥补了元学习缺乏持续学习的缺陷。</li><li>2019 Facebook人工智能实验室对元学习中近似嵌套优化问题解决方案的通用模式进行了形式化。</li><li>2019 伯克利AI研究院提出新的元强化学习算法</li></ul><h4 id="9联邦学习"><a class="markdownIt-Anchor" href="#9联邦学习"></a> （9）联邦学习</h4><ul><li>2016 谷歌的McMahan等人发表首篇联邦学习论文，介绍了联邦学习的基础理念</li><li>2018 英特尔与宾夕法尼亚大学生物医学图像计算与分析中心（CBICA）发表研究成果，是联邦学习在医学领域的第一个概念验证性实际应用</li><li>2019 微众银行开源其首个联邦学习工业级技术框架FATE（Federated AI Technology Enabler），FATE支持联邦学习架构体系与各种机器学习算法的安全计算，实现了基于同态加密和多方计算（MPC）的安全计算协议，能够帮助多个组织机构在符合数据安全和政府法规前提下，有效和协作地进行数据使用和联合建模</li><li>2019 Yang Q.等人发表论文介绍联邦学习基本架构，定义了三大联邦学习类别以及模型架构</li><li>2019 谷歌发表论文描述基于TensorFlow构建的全球首个产品级联邦学习系统</li><li>2020 联邦学习国际标准草案完成，正式标准预计年中出台</li><li>2020 获IEEE全票通过，首个联邦学习国际标准将正式推行</li></ul><h3 id="4-数据智能技术"><a class="markdownIt-Anchor" href="#4-数据智能技术"></a> 4. 数据智能技术</h3><h4 id="1大数据"><a class="markdownIt-Anchor" href="#1大数据"></a> （1）大数据</h4><ul><li>2015 Murtaza整合了从业者和学者的定义，对大数据进行了综合描述</li><li>2016 Nada等提出了大数据，分析和决策（B-DAD）框架</li><li>2016 大数据“十三五”规划出台</li><li>2019 清华大学人工智能研究院成立大数据智能研究中心</li><li>2019 阿里巴巴内部版本Blink正式开源</li><li>2019 Databricks公司推出了自己的统一分析平台（Unified Analytics Platform），目标是使客户在一个系统里解决尽可能多的数据需求</li><li>2020 100多所高校新增人工智能专业，教育部2019年度普通高等学校本科专业备案和审批结果公布</li><li>2020 人工智能和大数据在疫情防控中大显身手</li><li>2020 MIT宣布永久下架包含种族和性别歧视标签图像的Tiny Images数据集</li><li>2020 美国白宫发布首个AI年度报告</li><li></li></ul><h4 id="2数据挖掘"><a class="markdownIt-Anchor" href="#2数据挖掘"></a> （2）数据挖掘</h4><ul><li>2016 机器学习开始兴起，数据科学在机器学习领域已经根深蒂固，深度学习苗头出现</li><li>2017 华人学者叶艳芳博士《HinDroid: An Intelligent Android Malware Detection System Based on Structured Heterogeneous Infomation Network》获KDD 2017最佳论文</li><li>2018 《Adversarial Attacks on Neural Networks for Graph Data》获得KDD 2018最佳论文</li><li>2018 华人博士Kun Dong的《Network Density of States》获得KDD 2019 最佳论文</li><li>2020 周志华等人提出可微XGBoost算法sGBM，速度提升、准确率更胜一筹</li></ul><h4 id="3知识表征知识图谱"><a class="markdownIt-Anchor" href="#3知识表征知识图谱"></a> （3）知识表征&amp;知识图谱</h4><ul><li>2015 Mitchell等人提出never-ending learning（NELL），通过不断地阅读获取知识，并不断提升学习知识的能力以及利用所学知识进行推理等逻辑思维</li><li>2016 Lisa等人发表论文《Towards a Definition of Knowledge Graphs》详述了知识图谱的定义</li><li>2017 国内哆嗦高效发起cnSchema.org项目，旨在利用社区力量维护开放域知识图谱的Schema标准</li><li>2017 清华大学开源只是表示学习平台OpenKE</li><li>2018 Shib等人提出了HyTE模型，不仅能够利用时间导向进行知识图谱图推理，还能够为那些缺失时间注释的事实预测temporal scopes。</li><li>2018 Muhao等人考虑到多语言知识图谱中具有对实体的文字性描述，提出一种基于嵌入（Embedding）的策略-多语言知识图谱嵌入（KGEM）。</li><li>2019 清华大学和华为诺亚方舟实验室联合发表了一项研究，将知识图谱中的多信息实体（informative entity）可以作为外部知识改善语言表征。该研究结合大规模语料库和知识图谱训练出增强版的语言表征模型（ERNIE），性能媲美当前最优的BERT模型</li><li>2019 Junheng Hao等人提出JOIE，联合知识图谱实例和本体概念的通用表示学习</li><li>2019 OwnThink平台在Github上开源了史上最大规模1.4亿中文知识图谱</li><li>2019 微软核心业务即将上线Project Cortex: AI知识图谱大幅提升企业效率</li><li>2020 OpenKG组织先后发布多个新冠知识图谱开放数据集</li></ul><h4 id="4信息检索"><a class="markdownIt-Anchor" href="#4信息检索"></a> （4）信息检索</h4><ul><li>2017 汪军等人提出IRGAN首次将GAN应用到信息检索任务上</li><li>2018 卡内基美隆大学和谷歌大脑的研究者提出QANet</li><li>2018 来自微软Bing的研究院在KDD 2018上发表了论文《Recurrent Binary Embedding for GPU-Enabled Exhustive Retrieval from Billion-Scale Semantic Vectors》，提出了能够生成紧凑语义表征的“循环二分嵌入（RBE）”，这些表征可存储在GPU上，RBE使得十亿级的检索能够实时进行</li><li>2019 EMNLP最佳论文《Specializing Word Embeddings (for Parsing) by Information Bottleneck》对预训练词嵌入上使用变差信息瓶颈（Variational Infomation  Bottleneck）提出了新颖应用</li></ul><h4 id="5推荐系统"><a class="markdownIt-Anchor" href="#5推荐系统"></a> （5）推荐系统</h4><ul><li>2015 郭贵兵等人创建了推荐系统开源项目LibRec - 一个领先的基于jav阿德推荐系统算法库</li><li>2016 Youtube发表论文，将深度神经网络应用推荐系统中，实现了从大规模可选的推荐内容中找到最有可能的推荐结果</li><li>2016 基于推荐的短视频App抖音推出并引爆社交网络</li><li>2016 第三方检测机构易观发布了一个具有“里程碑意义”的数据：“资讯信息分发市场算法推送的内容将超过50%”</li><li>2016 Benigno等人提出了一种易于处理的方法NADE(Neural Autoregressive Distribution Estimation)，以对源数据的真是分布进行近似计算，并且可以再几个试验性数据集中产生最一流的推荐精度（与其他基于深度学习的推荐模型相比）</li><li>2017 V.Boginad等人提出了一个RNN模型结合停留时间（用户花在某个推荐条目上的时间）提升基于会话的推荐系统在电子商务数据集（Yoochoose）上的推荐准确度</li><li>2018 Tran等人发表基于用户评级历史的深度学习技术，提出了一个注意力群体推荐模型来解决群体推荐问题，第一个将Attention机制应用到群体推荐中</li><li>2018 DK Chae等人提出CFGAN: 一种基于GAN的协同过滤推荐框架，提供了一种通过GAN来进行推荐任务的新思路</li><li>2018 Criteo人工智能实验室的Stephen等提出因果嵌入的推荐方法获得RecSys 2018最佳长论文</li><li>2019 RecSys 2019最佳论文《Are We Really Making Much Progress? A Worrying Analysis of Recent Neural Recommendation Approaches》认为现有现有DNN-based推荐算法带来的基本上都是伪提升</li><li>2019 微软开源Recommenders：企业级可扩展推荐系统实践指南</li><li>2019 SIGIR 2019最佳论文《Variance Reduction in Gradient Exploration for Online Learning to Rank》介绍了一种降低Online Learning to Rank优化算法中方差的工作</li><li>2019 Eugene等人提出了一种名为SLATE-Q的Q-Learning算法，讲一个slate的推荐序列分解成多个items，计算长期收益LTV（Long-term Value），将长期收益加入排序多目标中进行建模优化推荐。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-人工智能技术总趋势&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-人工智能技术总趋势&quot;&gt;&lt;/a&gt; 1. 人工智能技术总趋势&lt;/h2&gt;
&lt;h3 id=&quot;无监督学习是未来技术突破的主要着力点&quot;&gt;&lt;a class=&quot;markdownI</summary>
      
    
    
    
    <category term="人工智能" scheme="https://www.notlate.net/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="人工智能" scheme="https://www.notlate.net/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="发展趋势" scheme="https://www.notlate.net/tags/%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>智源研究院-2020年AI进展及2021年趋势关注重点笔记</title>
    <link href="https://www.notlate.net/posts/6cc588ae.html"/>
    <id>https://www.notlate.net/posts/6cc588ae.html</id>
    <published>2021-02-24T13:36:22.000Z</published>
    <updated>2021-03-18T15:04:38.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-google与facebook全新无监督表征学习算法"><a class="markdownIt-Anchor" href="#1-google与facebook全新无监督表征学习算法"></a> 1. Google与Facebook全新无监督表征学习算法</h2><p>2020年初，Google和Facebook分别提出SimCLR和MoCo两个算法，均能够在无标注的数据上学习图像数据表征。两个算法背后的框架都是<strong>对比学习（contrastive learning）</strong>。</p><p>对比学习的核心训练信号是图片的“可区分性”。模型需要区分两个输入是来自于同一图片的不同视角，还是来自完全不同的两张图片。这个任务不需要人类标注，因此可以使用大量无标签数据进行训练。尽管Google和Facebook的两个工作对很多训练的细节问题进行了不同的处理，但是他们都表明，无监督学习模型可以接近甚至达到有监督模型的效果。</p><p>MoCo论文链接：<a href="https://arxiv.org/pdf/1911.05722.pdf">https://arxiv.org/pdf/1911.05722.pdf</a></p><p>MoCo代码链接：<a href="https://github.com/facebookresearch/moco">https://github.com/facebookresearch/moco</a></p><p>SimCLR论文链接：<a href="https://arxiv.org/abs/2002.05709">https://arxiv.org/abs/2002.05709</a></p><p>SimCLR代码链接：<a href="https://github.com/google-research/simclr">https://github.com/google-research/simclr</a></p><p>SimCLR Google AI Blog地址：<a href="https://ai.googleblog.com/2020/04/advancing-self-supervised-and-semi.html">https://ai.googleblog.com/2020/04/advancing-self-supervised-and-semi.html</a></p><p><img src="https://1.bp.blogspot.com/--vH4PKpE9Yo/Xo4a2BYervI/AAAAAAAAFpM/vaFDwPXOyAokAC8Xh852DzOgEs22NhbXwCLcBGAsYHQ/s1600/image4.gif" alt="SimCLR框架的说明" /></p><h2 id="2-深度学习理论迎来整合与突破"><a class="markdownIt-Anchor" href="#2-深度学习理论迎来整合与突破"></a> 2. 深度学习理论迎来整合与突破</h2><p>深度学习是当前人工智能领域最受关注的方法，在各类监督和非监督学习任务上获得了巨大成功，不仅大幅超越了传统机器学习算法，而且在某些特定的应用场景中，已经接近甚至达到了人类的水平。然而，研究者迄今对深度学习成功背后的根本原因仍然知之甚少，对其为何表现出比传统机器学习方法更优越的性能尚未建立完整的理论解释。这一重大理论缺陷背后蕴藏着深度学习科研科学性与可重复性的危机，制约着以深度学习为代表的主流人工智能技术的发展。</p><p>人工智能的发展历史，统计学习理论的建立和完善不仅为支持向量机（SVM）、核方法（Kernel Methods）等机器学习算法。与传统统计模型和机器学习算法相比，深度神经网络具有多个显著特点，如<strong>具有多层复合结构</strong>、<strong>过参数化导致的不可识别性</strong>、<strong>优化问题高维非凸</strong>等。此外，深度神经网络的训练通常采用<strong>随机梯度下降</strong>、<strong>随机失活</strong>、<strong>批标准化</strong>等具有隐士正则化效果的策略。这些与传统模型和算法截然不同的特点，使得对深度神经网络进行严格的理论分析异常困难，需要从数学、统计和计算的不同角度，以及表示能力、泛化能力、算法收敛性和稳定性等多个侧面，对现有的统计学习理论进行再思考、整合与重构。</p><p>近几年，深度学习理论研究的主要进展集中在<strong>浅层无穷宽网络</strong>的理论分析以及对**“双下降”**现象的理论解释两方面。对于两层无穷宽网络的，可以用近似网络参数分布的平均场理论和刻画参数演化动力学的神经正切核理论进行分析。这些理论较好地描述了浅层网络的性质，但对理解宽度受限的深度网络帮助不大，无法说明深度网络相对传统核方法的优越性。另一研究热点“双下降”现象则表明，深度网络等过参数化模型或许并不完全遵循经典的“偏差-方差权衡”，为理解正则化在深度学习泛化理论中扮演的关键角色提供了新的视角。</p><p>深度学习理论能否取得根本性突破，关键在于发现和建立联系各个理论的桥梁，融合与发展来自基础学、概率统计、数值计算等各个数学分支的理论工具。这些理论创新将有望提升对深度学习的理解，从浅层网络和局部性质向深度网络和全局性质不断深化和拓展，并整合与完善统计学、机器学习和数据科学的理论框架，为下一代人工智能提供强大的理论指引和方法学驱动。</p><h2 id="3-机器学习向分布式隐私保护方向演进"><a class="markdownIt-Anchor" href="#3-机器学习向分布式隐私保护方向演进"></a> 3. 机器学习向分布式隐私保护方向演进</h2><p>近年来，数据隐私保护逐渐成为各界关注的热点问题。在保护数据隐私的限制下，多机构联合进行机器学习模型训练需要密码学、分布式系统以及人工智能等多学科交叉的指导。当前热门的联邦学习能够解决一部分隐私保护的问题，但在计算性能、高可用性、可编程性、可证明安全性等领域，目前仍然存在诸多技术及工程难题，需要研究人员去攻破。</p><p>分布式隐私保护机器学习系统的计算性能非常重要，而常见系统的计算性能主要受限于（同态）密码学计算，包括加密、解密、密码加/乘等。而机器学习算法的特点是在张量（tensor）上操作，批次加密、并行加密会带来较大的性能提升；同时新硬件（FPGA、GPU），新（同态）加密算法的引入，也会带来极大的性能提升。</p><p>分布式隐私保护机器学习主要面向地理分布场景，在公网不稳定连接环境下如何进行高可用的机器学习模型训练，需要算法设计和系统设计两方面努力。在算法设计中，需要引入异步/半异步更新机制；在系统设计中需要探索更新备份与重发机制，保证高可用模型训练与预测。</p><h2 id="4-基于因果学习的信息检索模型与系统成为重要发展方向"><a class="markdownIt-Anchor" href="#4-基于因果学习的信息检索模型与系统成为重要发展方向"></a> 4. 基于因果学习的信息检索模型与系统成为重要发展方向</h2><p>信息检索领域目前亟待解决从海量检索数据中有效挖掘变量间因果关系的问题。探索兼具数据关联分析能力及因果推断能力的智能信息检索模型，实现可推理、可迁移、可解释的智能信息检索系统，已成为智能信息检索领域的重要发展方向。</p><p>因果学习通过反事实世界的模拟，推断变量间的因果关系，解决样本的有偏问题及结果的可解释性问题。一方面，可通过在抽象层面上对世界进行模拟来想象潜在行为会导致的结果；另一方面，可通过模拟当前世界存在的事件来推断出原因。同时，它也需要解决面向信息检索的预训练问题，帮助信息检索系统间的高效迁移能力。</p><p>对于用户数据纠偏、排序公平性、离线模型评价等信息检索中的挑战性问题，反事实框架下的因果学习将提供可靠的解决方案。这需要从因果关系的定义和表达、处理变量的设置与选择、反事实方法的建模与求解等方面深入探究。同时需要汲取经济学、统计学、公共管理等众多领域对因果推断的研究成果，并结合强化学习、无偏学习、持续学习等机器学习前沿研究的最新进展进行突破。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-google与facebook全新无监督表征学习算法&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-google与facebook全新无监督表征学习算法&quot;&gt;&lt;/a&gt; 1. Google与Facebook全新无监督表征学习算法&lt;/</summary>
      
    
    
    
    <category term="人工智能" scheme="https://www.notlate.net/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="人工智能" scheme="https://www.notlate.net/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="发展趋势" scheme="https://www.notlate.net/tags/%E5%8F%91%E5%B1%95%E8%B6%8B%E5%8A%BF/"/>
    
  </entry>
  
  <entry>
    <title>GNN笔记01-基础原理与应用</title>
    <link href="https://www.notlate.net/posts/a08c2ad5.html"/>
    <id>https://www.notlate.net/posts/a08c2ad5.html</id>
    <published>2021-02-04T06:30:40.000Z</published>
    <updated>2021-03-18T15:04:38.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-gnn技术发展时间轴"><a class="markdownIt-Anchor" href="#1-gnn技术发展时间轴"></a> 1. GNN技术发展时间轴</h2><pre class="mermaid">graph LRA[基于RNN/CNN技术演进]-.-A1>Graph Neural Network-2005]----->A2>Gated Graph Neural Network-2016]--->DB[基于图谱理论发展]-...-B1>Spectral Networks-2014]--->B2>ChebyNet-2016]-->B3>Graph Conv Network-2017]-->DC[基于图形学基础发展]-....-C1>Geodesic CNN-2015]-->C2>Anisotropic CNN/Diffusion CNN-2016]--->DD>Neural Message Passing-2017]-->E>FeaStNet/GraphSAGE-2018]-->F>至今]</pre><h3 id="1-gnn技术与传统graph理论研究的融合"><a class="markdownIt-Anchor" href="#1-gnn技术与传统graph理论研究的融合"></a> 1. GNN技术与传统Graph理论研究的融合</h3><ol><li><p>Weisfeiler-Lehman Test</p></li><li><p>Longest/Shortest cycle diameter</p></li><li><p>Coloring problem</p></li></ol><h3 id="2-现有gnn框架的花式改进"><a class="markdownIt-Anchor" href="#2-现有gnn框架的花式改进"></a> 2. 现有GNN框架的花式改进</h3><ol><li><p>Attention Strategy</p></li><li><p>Heterogeneous（Node，edge）</p></li><li><p>Hyper-Graph</p></li><li><p>Dynamic Graph</p></li></ol><h3 id="3-gnn在各个领域的花式应用"><a class="markdownIt-Anchor" href="#3-gnn在各个领域的花式应用"></a> 3. GNN在各个领域的花式应用</h3><ol><li>Social Network</li><li>Biology/Chemistry</li><li>Image + NLP</li><li>Embedding Representation<ul><li>EDA</li><li>Program structure</li><li>Relationship Infer</li><li>其他包含<strong>关系信息</strong>的应用</li></ul></li></ol><h2 id="2-gnn基础原理"><a class="markdownIt-Anchor" href="#2-gnn基础原理"></a> 2. GNN基础原理</h2><h3 id="1-deep-learning-based-gnn"><a class="markdownIt-Anchor" href="#1-deep-learning-based-gnn"></a> 1. Deep learning based GNN</h3><h3 id="2-spatial-based-gnn"><a class="markdownIt-Anchor" href="#2-spatial-based-gnn"></a> 2. Spatial-based GNN</h3><p>论文：<a href="https://arxiv.org/abs/1706.02216">Inductive representation learning on large graphs</a></p><h4 id="message-passing-phase"><a class="markdownIt-Anchor" href="#message-passing-phase"></a> Message Passing Phase</h4><p>Message function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mi>t</mi></msub><mo>:</mo><msubsup><mi>m</mi><mi>v</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msub><mo>∑</mo><mrow><mi>u</mi><mo>∈</mo><mi>N</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></msub><msub><mi>M</mi><mi>t</mi></msub><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>v</mi><mi>t</mi></msubsup><mo separator="true">,</mo><msubsup><mi>h</mi><mi>u</mi><mi>t</mi></msubsup><mo separator="true">,</mo><msub><mi>e</mi><mrow><mi>u</mi><mi>v</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_t: m^{t+1}_{v}=\sum_{u\in N(v)}M_t(h^{t}_v,h^{t}_u,e_{uv})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.268266em;vertical-align:-0.47471em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.22528999999999993em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mrel mtight">∈</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.47471em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">u</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">M_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: permutation invariant(sum, mean)</li><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>e</mi><mrow><mi>u</mi><mi>v</mi></mrow></msub></mrow><annotation encoding="application/x-tex">e_{uv}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 可以拓展为复杂的edge update function</li></ul><p>Vertex update function <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>t</mi></msub><mo>:</mo><msubsup><mi>h</mi><mi>v</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo>=</mo><msub><mi>U</mi><mi>t</mi></msub><mo stretchy="false">(</mo><msubsup><mi>h</mi><mi>v</mi><mi>t</mi></msubsup><mo separator="true">,</mo><msubsup><mi>m</mi><mi>v</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">U_t: h^{t+1}_v = U_t(h^{t}_v, m^{t+1}_v)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>U</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">U_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>: 也称为集合方程，可省略或复杂化，eg: concat</li></ul><p>Message passing是迭代过程，迭代次数越多，则覆盖的graph局部信息越多，但是由于mesage function的定义，面临over smoothing的问题</p><ul><li>为了解决over smoothing，研究出了多种edge drop, sampling, pooling等技术；</li><li>GNN迭代次数的增加，计算量、内存成倍增长，因此解决超大graph是很有难度的。</li></ul><h4 id="an-readout-function-r-to-make-predictions-on-nodes-or-whole-graph"><a class="markdownIt-Anchor" href="#an-readout-function-r-to-make-predictions-on-nodes-or-whole-graph"></a> An readout function R to make predictions on nodes or whole graph</h4><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>R</mi><mo stretchy="false">(</mo><mrow><msubsup><mi>h</mi><mi>v</mi><mi>T</mi></msubsup><mi mathvariant="normal">∣</mi><mi>v</mi><mo>∈</mo><mi>G</mi></mrow><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y}=R({h^{T}_v | v\in G})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathdefault">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">G</span></span><span class="mclose">)</span></span></span></span></p><p>对node/edge计算Embedding时，可省略readout function</p><h3 id="3-spectral-based-gnn"><a class="markdownIt-Anchor" href="#3-spectral-based-gnn"></a> 3. Spectral-based GNN</h3><p>论文：<a href="https://arxiv.org/abs/1609.02907">Semi-Supervised Classification with Graph Convolutional Networks</a></p><h4 id="use-spectral-graph-theory-to-design-localized-convolutional-filters-on-graph"><a class="markdownIt-Anchor" href="#use-spectral-graph-theory-to-design-localized-convolutional-filters-on-graph"></a> Use spectral graph theory to design localized convolutional filters on graph.</h4><h4 id="generalize-cnn-filter-concepts-from-low-dimensional-regular-grids-to-high-dimensional-irregular-domains"><a class="markdownIt-Anchor" href="#generalize-cnn-filter-concepts-from-low-dimensional-regular-grids-to-high-dimensional-irregular-domains"></a> Generalize CNN filter concepts from low-dimensional regular grids to high-dimensional irregular domains.</h4><p>Localized convolutional filters</p><pre class="mermaid">graph LRA[Spectral Network]-->B[ChebNet]-->C[GCN]</pre><ul><li>Spectral Network: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>θ</mi><mi>k</mi></msub><msup><mi>L</mi><mi>k</mi></msup><mo separator="true">,</mo><mi>L</mi><mo>=</mo><msub><mi>I</mi><mi>N</mi></msub><mo>−</mo><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mi>A</mi><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo>=</mo><mi>U</mi><mi mathvariant="normal">Λ</mi><msup><mi>U</mi><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">g_\theta(L)=\sum^{K-1}_{k=0} \theta_k L^k, L=I_N-D^{-1/2} A D^{-1/2} = U \Lambda U^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord">Λ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></li><li>ChebNet: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>θ</mi><mi>k</mi></msub><msub><mi>T</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>L</mi><mo stretchy="true">~</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_\theta(L)=\sum^{K-1}_{k=0} \theta_k T_k (\widetilde{L})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>GCN: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>θ</mi><mo stretchy="false">(</mo><msub><mi>I</mi><mi>N</mi></msub><mo>+</mo><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mi>A</mi><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>K</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>λ</mi><mrow><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">g_\theta(A)=\theta(I_N+D^{-1/2} A D^{-1/2}), K=2,\lambda_{max}=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">A</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span></li></ul><p>Layer Propagation model</p><ul><li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">)</mo><mi>x</mi><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>K</mi><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>θ</mi><mi>k</mi></msub><msub><mi>T</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mover accent="true"><mi>L</mi><mo stretchy="true">~</mo></mover><mo stretchy="false">)</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y=g_\theta(L) x=\sum^{K-1}_{k=0} \theta_k T_k (\widetilde{L}) x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">L</span><span class="mclose">)</span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2809409999999999em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.94333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span><span class="svg-align" style="width:calc(100% - 0.05556em);margin-left:0.05556em;top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width='100%' height='0.26em' viewBox='0 0 600 260' preserveAspectRatio='none'><path d='M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z'/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault">x</span></span></span></span></li></ul><p>Drawback</p><ul><li>Spectral filter coefficients与对应的的graph是相互依赖的，无法在graph间迁移</li><li>无法保证spectral domain的local feature在spatial domain是一致的：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>g</mi><mi>θ</mi></msub><mo>∗</mo><mi>x</mi><mo>=</mo><mi>U</mi><msub><mi>g</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi mathvariant="normal">Λ</mi><mo stretchy="false">)</mo><msup><mi>U</mi><mi>T</mi></msup><mi>x</mi></mrow><annotation encoding="application/x-tex">g_\theta * x = U g_\theta (\Lambda) U^{T} x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6597200000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">Λ</span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span><span class="mord mathdefault">x</span></span></span></span></li></ul><h2 id="3-gnn-理论探索"><a class="markdownIt-Anchor" href="#3-gnn-理论探索"></a> 3. GNN 理论探索</h2><h3 id="weisfeiler-lehman-testgraph-isomorphic-test-graph-ab-permutation-function-π使得aππb"><a class="markdownIt-Anchor" href="#weisfeiler-lehman-testgraph-isomorphic-test-graph-ab-permutation-function-π使得aππb"></a> Weisfeiler-Lehman Test(graph isomorphic test): [graph A,B permutation function π，使得Aπ=πB]</h3><ul><li>论文：<a href="https://postersession.ai/poster/invariant-and-equivariant-graph-networks/">Invariant and Equivariant Graph Networks</a></li><li>1 dimensional Weisfeiler-Lehman graph (GIN GNN)</li><li>K dimensional Weisfeiler-Lehman graph (3WL GNN - rank2 tensor)</li><li>Weisfeiler-Lehman GNN随order增加，计算量成指数增加<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>−</mo><mo>&gt;</mo><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)-&gt;O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">n</span><span class="mclose">)</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，难以batch training</li><li>多项式时间内无法求解（Babai算法可以做到quasi-polynomial time）</li></ul><h3 id="研究图的性质"><a class="markdownIt-Anchor" href="#研究图的性质"></a> 研究图的性质</h3><ul><li>论文：<a href="https://ojs.aaai.org//index.php/AAAI/article/view/4384">Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks</a></li><li>Graph function: trace, diagonal, maximal singular vector</li></ul><h3 id="研究图结构学习的invariance-equivariance"><a class="markdownIt-Anchor" href="#研究图结构学习的invariance-equivariance"></a> 研究图结构学习的Invariance &amp; equivariance</h3><ul><li>论文：<a href="https://proceedings.neurips.cc/paper/2019/file/3a24b25a7b092a252166a1641ae953e7-Paper.pdf">Provably Powerful Graph Networks</a></li><li>CNNs: translation invariance(image label is invariance to a translation of the input image)</li><li>Group Equivariant Neural Network(3D shape and spherical functions: rotation, reflection)</li></ul><h3 id="研究graph-isomorphism-testing与invariantequivariance-function-approximation的统一"><a class="markdownIt-Anchor" href="#研究graph-isomorphism-testing与invariantequivariance-function-approximation的统一"></a> 研究graph isomorphism testing与invariant/equivariance function approximation的统一</h3><ul><li>论文：<a href="https://papers.nips.cc/paper/2019/file/71ee911dd06428a96c143a0b135041a4-Paper.pdf">On the equivalence between graph isomorphism testing and function approximation with GNNs</a></li><li>将graph特性的基础探究与Deep learning based GNN model技术结果</li><li>提高计算效率和学习能力</li></ul><h2 id="4-gnn应用"><a class="markdownIt-Anchor" href="#4-gnn应用"></a> 4. GNN应用</h2><h3 id="relationship-prediction"><a class="markdownIt-Anchor" href="#relationship-prediction"></a> Relationship Prediction</h3><ul><li>论文：<a href="https://openaccess.thecvf.com/content_ECCV_2018/papers/Siyuan_Qi_Learning_Human-Object_Interactions_ECCV_2018_paper.pdf">Learning Human-Object Interactions by Graph Parsing Neural Networks</a></li><li>给定一组人和物的候选目标，可能存在多种人-物，人-人，物-物的关系组合；</li><li>关系类型：粗略的可分为空间关系（状态）、时序关系（动态）、动作关系、社会关系等；</li><li>包含技术：目标检测/分割，自然语言处理，图像标注：行为预测/行动，图像-&gt;检测-&gt;关系预测-&gt;分类/自然语言描述/行动；</li><li>可根据实际应用调整GNN的模型设计：着重Link relation(edge information)的表达</li><li>应用场景：社会关系分类（相册分类）；预测人的行动（行人检测）；预测物体行动（车辆检测）</li><li>DataSet: HICO-DET, V-COCO, MS-COCO, bAbl, CLEVR, PISC(people in Social Context), PIPA(people in Photo Album Relation)</li></ul><h4 id="netlist-feature-representation-for-chip-placement"><a class="markdownIt-Anchor" href="#netlist-feature-representation-for-chip-placement"></a> Netlist Feature Representation for Chip Placement</h4><p>GNN模型已经广泛的应用在抓取电路网表的内在结构特征的应用中。</p><ul><li><p>论文：<a href="https://arxiv.org/pdf/2004.10746.pdf">Chip Placement with Deep Reinforcement Learning</a></p></li><li><p>结合宏模块的物理特征参数，相关体系结构的特征参数，对网表功能模块的划分、数据流关系建立特征表达；</p></li><li><p>作为后续布局算法的输入信息，学习求解不同网表的物理布局方式；</p></li><li><p>泛化：实现不同配置之间的物理布局的高效迁移，降低布局实现的时间代价；</p></li><li><p>近年在DAC，ICCAD等EDA等会中，GNN已经广泛的出现在各种论文，workshop中；</p></li></ul><h4 id="program-structure-representation"><a class="markdownIt-Anchor" href="#program-structure-representation"></a> Program Structure Representation</h4><p>Designed for capturing the <strong>syntax and semantic information</strong> from the <strong>program abstract syntax tree</strong> and the <strong>control and data flow graph</strong>.</p><ul><li><p>论文：Deep Program Structure Modeling Through Multi-Relational Graph-based Learning</p></li><li><p>论文：<a href="https://mlforsystems.org/assets/papers/neurips2020/program_cummins_2020.pdf">Program Graphs for Machine Learning</a></p></li><li><p>Multi level  program structure建模: heterogeneous device mapping, GPU thread coarsening, loop vectorization, code vulnerability detection</p></li><li><p>Multi-relationship: data flow, control flow, call-flow and etc…</p></li><li><p>Heterogeneous Mapping, Thread Coarsening, Loop Vectorization, Vulnerability Detection, Dead Code Elimination, Global Code Motion, etc…</p></li></ul><h4 id="基于machine-learning的编译器优化"><a class="markdownIt-Anchor" href="#基于machine-learning的编译器优化"></a> 基于Machine Learning的编译器优化</h4><ul><li><p>背景：给定计算图的情况下，需采用人工/机器学习的方式做出最优决策，编译生成高效代码，这个过程可以转化为图优化问题（graph optimization problems），现有的方法依赖硬件在环的方式，对编译结果评估。当计算图越大，评估约耗时。因此，学习一种可泛化的local advantage functions用于编译器优化，引导在未知计算图进行搜索最优编译选项；</p></li><li><p>思路：</p><ul><li><p>learn single node advantage functions from existing graphs and use the learned model to guide exploration on new graphs for improving sample efficiency</p></li><li><p>single node advantage functions：（GNN model， GraphSAGE）</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>v</mi></msub><mo>=</mo><mi>k</mi><mo separator="true">;</mo><msub><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><msup><mi>v</mi><mo>−</mo></msup></msub><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>v</mi></msub><mo>=</mo><mi>k</mi><mo separator="true">,</mo><msub><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><msup><mi>v</mi><mo>−</mo></msup></msub><mo separator="true">;</mo><mi>G</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>v</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mover accent="true"><mi>y</mi><mo>⃗</mo></mover><msup><mi>v</mi><mo>−</mo></msup></msub><mo separator="true">;</mo><mi>G</mi><mo separator="true">,</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(y_v = k; \vec{y}_{v^{-}},G,X)=cost(y_v=k,\vec{y}_{v^{-}};G,X) - cost(y_v=1,\vec{y}_{v^{-}};G,X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.341865em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.341865em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">c</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.341865em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></p></li></ul></li></ul><ul><li><p>实验：operation fusion task (Tensorflow-XLA compiler): binary decision(eg. fuse)</p></li><li><p>数据集：Gibbs sampling on given computation graph</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>v</mi></msub><mo>=</mo><mi>k</mi><mi mathvariant="normal">∣</mi><mover accent="true"><msub><mi>y</mi><msup><mi>v</mi><mo>−</mo></msup></msub><mo stretchy="true">^</mo></mover><mo stretchy="false">)</mo><mo>∝</mo><mfrac><msup><mi>e</mi><mrow><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>v</mi></msub><mo>=</mo><mi>k</mi><mi mathvariant="normal">∣</mi><mover accent="true"><msub><mi>y</mi><msup><mi>v</mi><mo>−</mo></msup></msub><mo stretchy="true">^</mo></mover><mo stretchy="false">)</mo></mrow></msup><mi>τ</mi></mfrac></mrow><annotation encoding="application/x-tex">p(y_v = k | \widehat{ y_{v^{-}} }) \propto \frac{e^{-cost(y_v = k | \widehat{ y_{v^{-}} })}}{\tau}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.341865em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.45569em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.11069em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.023842857142857em;"><span style="top:-3.0238428571428573em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">t</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.23056em;"><span style="top:-2.3em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mtight">∣</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.67056em;"><span style="top:-2.5em;"><span class="pstrut" style="height:2.5em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.03588em;margin-right:0.1em;"><span class="pstrut" style="height:2.8773299999999997em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8773299999999999em;"><span style="top:-2.87733em;margin-right:0.1em;"><span class="pstrut" style="height:2.58333em;"></span><span class="mord mtight"><span class="mord mtight">−</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.53253em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.93056em;"><span class="pstrut" style="height:2.5em;"></span><span class="mtight" style="height:0.24em;"><svg width='100%' height='0.24em' viewBox='0 0 1062 239' preserveAspectRatio='none'><path d='M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.53253em;"><span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p></li><li><p>探索：</p><ul><li>对于未知computation graph，无法做到精确的逐节点的性能cost估计，因此只能作为牵引；</li><li>在搜索过程中使用local advantage function的方式是很灵活的，论文中只是使用预测结果对待处理的节点做重要性排序，给出指导（使用的非常保守，主要是估计结果不一定准确）</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-gnn技术发展时间轴&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-gnn技术发展时间轴&quot;&gt;&lt;/a&gt; 1. GNN技术发展时间轴&lt;/h2&gt;
&lt;pre class=&quot;mermaid&quot;&gt;graph LR
A[基于RNN/CNN技术演</summary>
      
    
    
    
    <category term="论文笔记" scheme="https://www.notlate.net/categories/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="GNN" scheme="https://www.notlate.net/tags/GNN/"/>
    
  </entry>
  
  <entry>
    <title>论文笔记001：Mixture of Experts</title>
    <link href="https://www.notlate.net/posts/405685a.html"/>
    <id>https://www.notlate.net/posts/405685a.html</id>
    <published>2021-01-05T16:24:40.000Z</published>
    <updated>2021-03-18T15:04:38.498Z</updated>
    
    
    
    
    <category term="论文笔记" scheme="https://www.notlate.net/categories/%E8%AE%BA%E6%96%87%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="推荐系统" scheme="https://www.notlate.net/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="MMoE" scheme="https://www.notlate.net/tags/MMoE/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记13：探究业界主流的推荐系统解决方案</title>
    <link href="https://www.notlate.net/posts/2c4e9dc8.html"/>
    <id>https://www.notlate.net/posts/2c4e9dc8.html</id>
    <published>2021-01-05T15:24:40.000Z</published>
    <updated>2021-03-18T15:04:38.598Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-facebook的深度学习推荐系统"><a class="markdownIt-Anchor" href="#1-facebook的深度学习推荐系统"></a> 1. Facebook的深度学习推荐系统</h3><p>2014年，Facebook发表了广告推荐系统论文GBDT+LR。严格意义上讲，这并不属于深度学习的范畴，但在当时，这种方式进行特征的自动组合和筛选，开启了特征工程模型化、自动化的新阶段。并且其在2014年就采用的在线学习、在线数据整合、负样本降采样等技术至今仍具有极强的工程意义。</p><p>2019年Facebook又发布了最新的深度学习模型DLRM（<a href="https://arxiv.org/abs/1906.00091">Deep Learning Recommender Model</a>），采用经典的深度学习模型架构，基于CPU+GPU平台完成模型训练，是业界经典的深度学习推荐系统尝试。</p><h4 id="1应用"><a class="markdownIt-Anchor" href="#1应用"></a> （1）应用</h4><p>Facebook的广告推荐系统是一个标准的CTR预估场景，输入用户（User）、广告（Ad）、上下文（Context）相关特征，预测CTR，然后再使用CTR进行广告排序和推荐。</p><p>由于Facebook其他模块需要利用CTR计算广告出价、投资回报率（ROI）等预估值，因此CTR模型的预估值应该是一个具有物理意义的精准的CTR，而不是仅仅输出一个广告排序。同时Facebook也介绍了输出值与实际值的CTR矫正的方法。</p><h4 id="2gbdtlr预估模型"><a class="markdownIt-Anchor" href="#2gbdtlr预估模型"></a> （2）GBDT+LR预估模型</h4><p>参考本系列的相关笔记-《<a href="https://notlate.net/posts/d6641ee8.html#5-gbdtlr">08-传统推荐算法发展汇总</a>》</p><h5 id="1实时数据流架构"><a class="markdownIt-Anchor" href="#1实时数据流架构"></a> ①实时数据流架构</h5><p>为了实现模型的准实时训练和特征的准实时更新，Facebook在上述论文中提出了其基于Scribe（由Facebook开发并开源的日志收集系统）构建的实时数据流架构，被称为Online Data Joiner（在线数据整合）模块，该模块与其他模块的关系图如下：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210315221558537.png" alt="" /></p><p>Online Data Joiner模块最重要的作用是：准实时的把来自不同数据流的数据整合起来，形成训练样本，并最终与点击数据（标签）进行整合，形成完整的有标签样本。在整个过程中，需要注意的点如下：</p><p><strong>Waiting window（数据等待窗口）的设定</strong></p><p>waiting window就是在物品曝光后，要等多久才能够判定这个曝光行为产生了点击。如果窗口过大，则数据实时性受影响；如果过小，则会有一部分点击数据统计不全。这个设置是需要工程不断调优找到最佳的，少量点击数据丢失也是不可避免的。</p><p><strong>分布式架构与全局统一的Action ID（行为ID）</strong></p><p>为了实现分布式架构下曝光记录与点击记录的整合，Facebook除了为每个行为建立全局统一的Request ID，还建立了HashQueue用于缓存曝光记录。在缓存队列中的曝光记录，如果在Waiting Window过期后还没有匹配到点击记录，就会被作为负样本。</p><p><strong>数据流保护机制</strong></p><p>论文中，Facebook专门提到了Online Data Joiner的保护机制，因为该模块若因为某些异常而失效，比如点击数据流由于Action ID的bug无法与曝光数据流进行正确联结，那么所有的样本都会认定为负样本。同时，由于模型采用实时训练和服务，所以模型准确度会很快受到影响，后果非常严重。保护机制则是专门设立异常检测机制，<strong>一旦发现实时样本流的数据分布发生变化</strong>，会立即切断在线学习的过程，防止线上问题发生。</p><h5 id="2-降采样"><a class="markdownIt-Anchor" href="#2-降采样"></a> ② 降采样</h5><p>为了控制数据规模，降低训练开销，Facebook时间了两种降采样方法：Uniform subsampling（均匀采样）和Negative down sampling（负样本降采样）。均匀采样是对所有样本进行无差别的随机抽样，其试验了1%、10%、50%、100%四个采样频率，从下图可以看出，当采样频率为10%的时候，相比全量数据训练的模型，模型损失仅仅上升了1%，因此是一个比较合适的平衡工程和理论最优的选择。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210315223329853.png" alt="不同降采样频率下的模型损失" /></p><p>负采样方法则是保留全量正样本，对负样本进行降采样。除了提高训练效率，负样本还直接解决了正负样本不平衡的问题，Facebook经验性的选择了从0.0001到0.1的福采样频率，效果图如下：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210315223640593.png" alt="不同负采样频率下的模型损失" /></p><p>可以看到当负采样频率为0.025时，模型损失最小，甚至小于0.1的频率，论文中未给出解释。在实际应用中，Facebook采用了0.025的负采样频率。</p><h5 id="3-模型矫正"><a class="markdownIt-Anchor" href="#3-模型矫正"></a> ③ 模型矫正</h5><p>负采样带来的问题是CTR预估值得漂移：假设真实CTR是0.1%，进行0.01的负采样之后，CTR会攀升到10%左右。前文也提到了，Facebook的业务背景要求其计算出的CTR需要是具有物理意义的精准的CTR，为了进行准确的竞价和ROI估计，进行负采样后的CTR需要矫正，公式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi><mo>=</mo><mfrac><mi>p</mi><mrow><mi>p</mi><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>p</mi><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">q = \frac{p}{p + (1-p) / w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04356em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">q</span></span></span></span>是校正后的CTR，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>是模型预估的CTR，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>是负采样频率。</p><h5 id="4-工程实践"><a class="markdownIt-Anchor" href="#4-工程实践"></a> ④ 工程实践</h5><ul><li>特征工程模型化</li><li>模型复杂性和实效性的权衡</li><li>用数据验证Idea</li></ul><h4 id="3dlrm预估模型"><a class="markdownIt-Anchor" href="#3dlrm预估模型"></a> （3）DLRM预估模型</h4><p>DLRM是一次彻底的应用深度学习方法的尝试。</p><h5 id="1-模型结构"><a class="markdownIt-Anchor" href="#1-模型结构"></a> ① 模型结构</h5><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210315225609790.png" alt="DLRM模型结构图" /></p><p>如果所示，各层作用如下：</p><p><strong>特征工程</strong>：所有的特征分为两类：一类是将类别、id类特征用one-hot编码生成稀疏特征（sparse features）；另外一类是数值型的连续特征（dense features）。</p><p><strong>Embedding层</strong>：把稀疏特征转换成<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>维Embedding向量；连续性特征连接成一个特征向量之后输入黄色的MLP，被转换成同样<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>维向量。</p><p><strong>神经网络层(NNs)</strong>：Embedding层上边的三角形，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>维的Embedding向量有可能进一步通过神经网络层处理，但是这个过程是选择性的，根据实际场景评估决定的。</p><p><strong>特征交互层(Interactions)</strong>：把之前的Embedding向量两两做内积操作，再和连续型特征对应的特征向量连接，输入后续MLP。目的是让特征之间做充分的交叉组合之后，再进入MLP做最终的目标拟合。</p><p><strong>目标拟合层</strong>：最上层的三角形，表示一个全连接的MLP，最后一层使用softmax函数输出点击率。</p><p>综上分析，模型结构并不复杂，也没有注意力机制、序列模型、强化学习等思想，是一个非常标准的工业界深度学习推荐模型。简单的模型结构在海量的数据背景下也可以发挥出不俗的作用。</p><h5 id="2-并行训练方法"><a class="markdownIt-Anchor" href="#2-并行训练方法"></a> ② 并行训练方法</h5><p>由于Facebook的数据量非常大，模型训练必然要并行化。DLRM融合使用了模型并行和数据并行的方案：</p><p>对Embedding部分采用了模型并行，可以减轻内存瓶颈问题。在一个设备上仅保存一部分Embedding层参数，每个设备进行并行mini batch梯度更新，仅更新自己节点上的部分Embedding参数。</p><p>对MLP部分（两个NNs层）采用了数据并行，可以并行前向和反向传播。每个设备已有全部模型参数，利用部分数据计算梯度，再利用全量规约（AllReduce）的方法汇总所有梯度进行参数更新。</p><h4 id="4总结"><a class="markdownIt-Anchor" href="#4总结"></a> （4）总结</h4><p>无论是GBDT+LR还是DLRM，Facebook的技术选择总是偏工业化，简单直接，以解决问题为主。虽然从学术角度看模型创新性不足，但从业者可以从中借鉴到非常多的工程实践经验。如果公司刚开始从传统机器学习模型转到深度学习模型，则完全可以采用DLRM作为标准实现。</p><h3 id="2-airbnb基于embedding的实时搜索推荐系统"><a class="markdownIt-Anchor" href="#2-airbnb基于embedding的实时搜索推荐系统"></a> 2. Airbnb基于Embedding的实时搜索推荐系统</h3><p>2018年KDD的最佳论文《<a href="https://raw.githubusercontent.com/murufeng/awesome-papers/master/Embedding/%5BAirbnb%20Embedding%5D%20Real-time%20Personalization%20using%20Embeddings%20for%20Search%20Ranking%20at%20Airbnb%20(Airbnb%202018).pdf">Real-time Personalization using Embeddings for Search Ranking at Airbnb</a>》介绍了Airbnb把Embedding技术应用于搜索推荐的实践。</p><p>Embedding技术两大作用：1）将稀疏特征转换成稠密特征；2）能够对物品语义特征进行编码，通过计算相似度进行相似物品搜索。</p><h4 id="1应用场景"><a class="markdownIt-Anchor" href="#1应用场景"></a> （1）应用场景</h4><p>Airbnb是一家短租网站，提供房主和短租客的中介平台。租客输入地点、价位、关键词等信息后，Airbnb给出房源的搜索推荐列表。对于列表，有以下集中交互方式：</p><ul><li>租客点击（Click）房源</li><li>租客立即预定（Instant Book）房源</li><li>租客发出预定请求（Booking Request），房主有可能拒绝（Reject）、同意（Accept）或者不响应（No Response）租客的预定请求。</li></ul><p>针对以上交互数据，Airbnb构建了实时搜索排序模型。为了捕捉用户兴趣，Airbnb<strong>没有</strong>将用户历史数据中的<strong>点击房源id序列</strong>（clicked listing ids）或者<strong>预定房源id序列</strong>（booked listing ids）直接输入排序模型，而是先对<em>租客</em>和<em>房源</em><strong>分别进行Embedding</strong>，利用Embedding结果构建出诸多特征，作为排序模型的输入。</p><p>Airbnb分别对用户的“短期”和“长期”兴趣进行编码，生成了两种Embedding。<strong>短期兴趣目的</strong>是进行房源的相似推荐和session（会话）内的实时个性化推荐。<strong>长期兴趣目的</strong>是在最终的推荐结果中照顾到用户之前的预定偏好，推荐更容易被用户预订的个性化房源。</p><h4 id="2基于短期兴趣的房源embedding方法"><a class="markdownIt-Anchor" href="#2基于短期兴趣的房源embedding方法"></a> （2）基于短期兴趣的房源Embedding方法</h4><p>Airbnb利用session内点击数据对房源进行Embedding，捕捉用户在一次搜索过程中的短期兴趣。那session内点击数据怎么获取呢？就是用户在一次搜索过程中点击的房源序列，这个序列需要满足2个条件：1）只有在房源详情页停留超过30秒才算序列中的一个数据点；2）如果用户超过30分钟没有动作，那么序列结束。</p><p>获取到由点击房源组成的序列后，就可以用Item2vec方法，把这些序列当成“句子”一样的样本，进行Embedding训练。Airbnb使用的是Word2vec的跳词（Skip-gram）模型，修改目标函数拟合Airbnb的业务目标。修改点如下：</p><p>① 在原始目标函数基础上，针对Airbnb的业务特点，希望把预定信息引入Embedding，目的是使得Airbnb的搜索列表和相似列表更倾向于推荐之前预定成功的Session中的房源。基于此想法，Airbnb把会话点击序列分成两类：1）最终产生预定行为的称为预定会话，会话只有最后一个房源是被预订房源；2）否则称为探索性会话。为了把预定行为引入目标函数，强假设这个被预定房源与滑动窗口的中心房源相关。</p><p>② 为了更好的发现同一市场内部房源的差异性，Airbnb加入了另外一组负样本，在同一市场的房源集合中随机抽样，获得一组新的负样本，并加入目标函数。</p><p>训练过程：使用负采样方法。</p><p>冷启动方案：如果有新的房源确实Embedding向量，就找附近的3个同样类型、相似价格的房源向量进行平均得到。</p><h4 id="3基于长期兴趣的用户embedding和房源embedding"><a class="markdownIt-Anchor" href="#3基于长期兴趣的用户embedding和房源embedding"></a> （3）基于长期兴趣的用户Embedding和房源Embedding</h4><p>基于短期兴趣的Embedding没有包含用户的长期兴趣信息。为了解决这种问题，Airbnb使用了预定会话序列。假设用户<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>在过去1年依次预定过5个房源，那么预定会话就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>s</mi><mi>j</mi></msub><mo>=</mo><mo stretchy="false">(</mo><msub><mi>l</mi><mrow><mi>j</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>j</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>j</mi><mn>3</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>j</mi><mn>4</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>j</mi><mn>5</mn></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_j = (l_{j1}, l_{j2}, l_{j3}, l_{j4}, l_{j5})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。但是却不能和点击会话一样直接进行训练，因为这类预定数据是非常稀疏的，原因如下：</p><p>① 预定行为的总体数量本身远远小于点击行为</p><p>② 单一用户的预定行为很少，大量用户在过去1年甚至只预定过1个房源，导致很多预定会话序列长度仅仅为1</p><p>③ 大部分房源被预定的次数也很少，Word2vec训练需要物品至少出现5~10次，但是大量房源被预定的次数少于5词，根本无法训练出有效的Embedding。</p><p>Airbnb的解决方案是：<strong>基于某些属性规则做相似用户和相似房源的聚合</strong>。</p><p>首先定义用户和房源的各种属性，比如用户属性有设备类型、是否填写简介、是否有头像照片、历史订阅次数等；房源属性有国家、类型、价格等。根据这些属性就可以用聚合数据的方式生成新的预定序列（booking session sequence）。直接用用户属性代替原来的user id，生成一个由所有该用户属性预定历史组成的预定序列。</p><p>得到用户属性的预定序列后，如何得到用户属性和房源属性的Embedding呢？为了让user type Embedding和listing type Embedding在同一个向量空间中生成，Airbnb采用的方式如下：</p><p>对于某一user id按时间排序的booking session(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>l</mi><mn>2</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>l</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">l_1, l_2,...,l_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)，用（user_type, listing_type）组成的元组替换原来的listing item，原序列就变成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>1</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>2</mn></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>2</mn></mrow></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>M</mi></mrow></msub><mo separator="true">,</mo><msub><mi>l</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mi>M</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">((u_{type1}, l_{type1}), (u_{type2}, l_{type2}), ..., (u_{typeM}, l_{typeM}))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>，这里的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">l_{type1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>指的是房源<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对应的房源属性，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">u_{type1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>指的是该用户在预订房源<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">l_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>时的用户属性，用于用户的user_type会随着时间变化，所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">u_{type1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mrow><mi>t</mi><mi>y</mi><mi>p</mi><mi>e</mi><mn>2</mn></mrow></msub></mrow><annotation encoding="application/x-tex">u_{type2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight">e</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>也不一定相同。</p><p>那如何训练呢？由于序列是元组组成的，如何确定“中心词（central item）”呢？Airbnb在论文中没有描述技术细节，《深度学习推荐系统》一书中给出了最接近论文原文的训练方式。</p><p>Airbnb分别给出了训练user type Embedding和listing type Embedding时，滑动窗口内“中心词”分别是user type(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>u</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">u_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)和listing type(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>l</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">l_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)时的目标函数如下：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210316220721793.png" alt="" /></p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210316220752313.png" alt="" /></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mrow><mi>b</mi><mi>o</mi><mi>o</mi><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">D_{book}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是中心词附近的用户属性和房源属性的集合，所以在训练过程中，用户属性和房源属性完全是被同等对待的，这两个目标函数也是完全一样的。可以认为训练时就是把元组扁平化了，把用户属性和房源属性当做完全相同的词去训练Embedding，这种方式自然保证了二者在同一个向量空间中生成。</p><h4 id="4搜索词的embedding"><a class="markdownIt-Anchor" href="#4搜索词的embedding"></a> （4）搜索词的Embedding</h4><p>Airbnb还在其搜索推荐系统中对搜索词进行了Embedding，方法与用户Embedding类似，把搜索词和房源置于同一向量空间进行Embedding，再通过二者之间的余弦相似度进行排序。</p><h4 id="5实时搜索排序模型和特征工程"><a class="markdownIt-Anchor" href="#5实时搜索排序模型和特征工程"></a> （5）实时搜索排序模型和特征工程</h4><p>Airbnb没有直接把Embedding相似度排名当做搜索结果，而是基于Embedding得到了不同的用户房源相关特征（user-listing pair feature），然后输入搜索排序模型，得到最终的排序结果。Airbnb基于Embedding生成了如下特征：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210316221851360.png" alt="Airbnb基于用户和房源Embedding生成的特征" /></p><p>最后一项UserTypeListingTypeSim指的是用户属性和房源属性的相似度，这一项特征是基于长期兴趣Embedding计算得到的，其余的都是短期兴趣Embedding。</p><p>实时性则主要体现在EmbClickSim（最近点击房源的相似度）和EmbLastLongClickSim（最后点击房源的相似度）这两项特征，使得在用户点击浏览的过程中就可以得到实时反馈，搜索结果也可以实时地根据用户的点击行为进行改变。</p><p>Airbnb采用的搜索排序模型是一个支持Pairwise Lambda Rank的GBDT模型。</p><h3 id="3-youtube深度学习视频推荐系统"><a class="markdownIt-Anchor" href="#3-youtube深度学习视频推荐系统"></a> 3. YouTube深度学习视频推荐系统</h3><p>2016年，YouTube发表了深度学习推荐系统论文《<a href="https://dl.acm.org/doi/10.1145/2959100.2959190">Deep Neural Networks for YouTube Recommendations</a>》，虽然内容不算新颖，但是其方案却成为推荐系统业界最经典的深度学习架构之一。无论是经典的架构，还是技术细节等工程实践经验，都是收益颇多，值得多读几遍。</p><h4 id="1应用场景-2"><a class="markdownIt-Anchor" href="#1应用场景-2"></a> （1）应用场景</h4><p>① YouTube 的内容都是用户上传的自制视频，种类风格繁多，头部效应没那么明显；</p><p>② YouTube 的视频基数巨大，用户难以发现喜欢的内容</p><p>由于以上特点，YouTube非常适合使用深度学习推荐系统。</p><h4 id="2推荐系统整体架构"><a class="markdownIt-Anchor" href="#2推荐系统整体架构"></a> （2）推荐系统整体架构</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/47c0fa06ffc18912b027fe920ac30905.jpg" alt="YouTube在2016年发布的推荐系统架构" style="zoom:33%;" /><p>为了对海量的视频进行快速、准确的排序，YouTube 也采用了经典的召回层 + 排序层的两级推荐系统架构。</p><p><strong>第一级是用候选集生成模型（Candidate Generation Model）完成候选视频的快速筛选。把候选视频集合从百万降到几百量级，这就相当于经典架构中的召回层。</strong></p><p><strong>第二级是用排序模型（Ranking Model）完成几百个候选视频的精排，这相当于经典架构中的排序层。</strong></p><h5 id="1-候选集生成模型"><a class="markdownIt-Anchor" href="#1-候选集生成模型"></a> ① 候选集生成模型</h5><img src="https://gitee.com/acdance/img/raw/master/blogs/6968873184cf93194aa476398c2e35cf.jpg" alt="候选集生成模型结构图" style="zoom:33%;" /><p>最底层是输入层，输入的特征包括用户历史观看视频的 Embedding 向量，以及搜索词的 Embedding 向量。<strong>YouTube利用用户的观看序列和搜索序列，采用Item2vec方法预训练生成Embedding</strong>。当然也完全可以用 Embedding 跟模型在一起 End2End 训练的方式来训练模型。</p><p>除了视频和搜索词 Embedding 向量，特征向量中还包括用户的地理位置 Embedding、年龄、性别等特征。<strong>对于样本年龄这个特征，YouTube 不仅使用了原始特征值，还把经过平方处理的特征值也作为一个新的特征输入模型，这个操作是为了挖掘特性的非线性信息</strong>。这种对连续型特征的处理方式不仅限于平方，其他诸如开方、Log、指数等操作都可以用于挖掘特性的非线性信息。</p><p>所有特征使用concat连接起来后送入MLP进行训练，最后输出层使用<strong>softmax函数</strong>，预测的是用户会点击哪个视频。假设YouTube上有100万个视频，那么sofmax就有100万个输出，用于表示用户对所有视频的点击概率，因此模型的最终输出就是一个在所有候选视频上的概率分布。<strong>目的是为了更好、更快地进行线上服务</strong>。接下来看下线上服务是怎么做的。</p><h5 id="2-候选集生成模型的线上服务方法"><a class="markdownIt-Anchor" href="#2-候选集生成模型的线上服务方法"></a> ② 候选集生成模型的线上服务方法</h5><img src="https://gitee.com/acdance/img/raw/master/blogs/e9a20bc7260296e09078509e3f42df69.jpg"  style="zoom:33%;" alt="候选集生成模型在线服务局部图"/><p>候选集生成模型架构图左上角的模型服务方法与实际的训练方法完全不同。在线上服务过程中，YouTube 并没有直接采用训练时的模型进行预测，而是采用了一种最近邻搜索的方法。为什么呢？</p><p><strong>因为候选集生成模型可以得到全量的用户和视频的Embedding，服务时通过Embedding最近邻搜索的方法可以大大提高在线服务效率。因为只需要把所有的用户和视频Embedding存到特征数据库就行了</strong>。</p><p>视频Embedding是怎么得到的呢？架构图中从softmax向模型服务模块画了个箭头，用于代表视频 Embedding 向量的生成。<strong>此处的softmax层指的是激活函数是softmax的全连接层</strong>。全连接层的权重是m x n的矩阵，其中m指的是最后一层带ReLU激活函数的全连接层的权重维度，n指的是分类（YouTube所有视频）的总数。因此所有视频 Embedding就是这个m x n维矩阵的各列向量。这个思想参考的是Word2vec的词向量生成方法。</p><p>用户Embedding又是怎么得到的呢？因为输入的特征向量都是与用户相关的特征，一个物品和场景特征都没有，所以<strong>最后一层带ReLU层的输出向量就可以当作该用户u的Embedding向量</strong>。待模型训练完成后，逐个输入所有用户的特征向量，就得到了所有用户的Embedding向量，之后就可以预存到线上的特征数据库中了。</p><p>在预测某用户的视频候选集时，先从特征数据库中查询用户的 Embedding 向量，再在视频 Embedding 向量空间中，利用局部敏感哈希等方法搜索该用户 Embedding 向量的 K 近邻，这样就可以快速得到 K 个候选视频集合。这就是整个候选集生成模型的训练原理和服务过程。</p><h5 id="3-排序模型"><a class="markdownIt-Anchor" href="#3-排序模型"></a> ③ 排序模型</h5><p>通过候选集生成模型，已经得到了几百个候选视频的集合了，下一步就是<strong>利用排序模型进行精排序</strong>。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/28e0acbb64760670ee94d015025da81a.jpg" alt="YouTube的深度学习排序模型的架构" style="zoom:33%;" /><p>排序模型的网络结构与候选集生成模型在结构上看起来没有太大区别，它们都遵循 Embedding+MLP 的模型架构。但是观察其细节，特别是<strong>输入层和输出层的部分</strong>，它们跟候选集生成模型区别很大。先看下输入特征：</p><table><thead><tr><th>序号</th><th>原文特征名称</th><th>含义</th></tr></thead><tbody><tr><td>1</td><td>impression video ID embedding</td><td>当前候选视频的 Embedding</td></tr><tr><td>2</td><td>watched video IDs average embedding</td><td>用户观看过的最后 N 个视频 Embedding 的平均值</td></tr><tr><td>3</td><td>language embedding</td><td>用户语言的 Embedding 和当前候选视频语言的 Embedding</td></tr><tr><td>4</td><td><strong>time since last watch</strong></td><td>表示用户上次观看同频道视频距今的时间</td></tr><tr><td>5</td><td><strong>#previous impressions</strong></td><td>该视频已经被曝光给该用户的次数</td></tr></tbody></table><p>前3个特征的含义很好理解，重点看下第4和第5个。</p><p>第 4 个特征是用户观看同类视频的间隔时间。如果从用户的角度出发，假如某用户刚看过“DOTA比赛经典回顾”这个频道的视频，那他很大概率会继续看这个频道的其他视频，该特征就可以很好地捕捉到这一用户行为。</p><p>第 5 个特征说的是这个视频已经曝光给该用户的次数。如果一个视频已经曝光给了用户 10 次，都没有被点击，那大概率用户对这个视频不感兴趣。所以<strong>previous impressions</strong>这个特征的引入就可以很好地捕捉到用户这样的行为习惯，避免让同一个视频对同一用户进行持续的无效曝光，尽量增加用户看到新视频的可能性。</p><p>把这 5 类特征连接起来之后，再经过MLP进行充分的特征交叉，最后经过Weighted LR输出。需要注意：<strong>排序模型的输出层与召回模型有所不同。主要是：召回模型输出层的激活函数是softmax，预测的是用户“会点击哪个模型”；而排序模型的输出层激活函数是weighted logistic regression（加权逻辑回归），预测的是用户“要不要点击当前视频”。</strong></p><p><strong>其实根本原因是YouTube想要更精确地预测用户的观看时长，因为观看时长才是 YouTube 最看中的商业指标，而使用加权逻辑回归可以实现这样的目标</strong>。就是在加权逻辑回归的训练中，为每个样本设置一个权重，代表这个样本的重要程度。为了预估观看时长，可以<strong>把正样本的权重设置为用户观看这个视频的时长</strong>。换个角度考虑就是观看时长<strong>长</strong>的样本被预测的为正样本的概率更高，这个概率与观看时长成正比，所以得到的预测结果可以认为是观看时长。</p><h5 id="4-排序模型服务方法"><a class="markdownIt-Anchor" href="#4-排序模型服务方法"></a> ④ 排序模型服务方法</h5><p>服务时采用的函数形式是：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>e</mi><mrow><mi>W</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow></msup></mrow><annotation encoding="application/x-tex">e^{Wx + b}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">W</span><span class="mord mathdefault mtight">x</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">b</span></span></span></span></span></span></span></span></span></span></span></span>，和训练的加权逻辑回归又不一样，这也能表示用户观看时长吗？逻辑回归如果还没有清晰的认识，可以看下《<a href="https://hichenway.blog.csdn.net/article/details/82285156">Logistic回归中的Logit函数和sigmoid函数</a>》。</p><p>线性回归解决的是回归问题，也就是用直线拟合数据，因此其值域是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mi mathvariant="normal">，</mi><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\infty，+\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span>，形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>y</mi><mo>=</mo><msup><mi mathvariant="bold-italic">W</mi><mi>T</mi></msup><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">y = \boldsymbol{W}^T \cdot x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.917341em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span></span></p><p>逻辑回归应用于分类问题时，因变量y的值只有0和1，连续的线性模型无法拟合，因此需要选择一个比较合适的激活函数：能够把值域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mi mathvariant="normal">，</mi><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\infty，+\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span><strong>连续且单调</strong>地映射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。先来看个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">logit</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\operatorname{logit}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">i</span><span class="mord mathrm">t</span></span></span></span></span>函数的公式和图像：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">logit</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">{\operatorname {logit} (p)=\log \left({\frac {p}{1-p}}\right)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">i</span><span class="mord mathrm">t</span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></span></p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/350px-Logit.svg-20210317160522280.png" alt="logit函数图像" /></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{p}{1-p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.228608em;vertical-align:-0.481108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7475em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathdefault mtight">p</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.481108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>就是事件发生的<strong>几率</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Odds</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Odds}(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">O</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span><span class="mord mathrm">s</span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，也就是一个事件发生的概率（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>）与不发生的概率（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">1-p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>）比值。可以看到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">logit</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\operatorname{logit}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">i</span><span class="mord mathrm">t</span></span></span></span></span>函数可以把值域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0, 1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span><strong>连续且单调</strong>地映射到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mi mathvariant="normal">，</mi><mo>+</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\infty，+\infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mord cjk_fallback">，</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span>。那么令<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">logit</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\operatorname{logit}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">o</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">i</span><span class="mord mathrm">t</span></span></span></span></span>函数等于线性回归函数，近似得到如下等式（把<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>log</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span>看成是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>ln</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\ln</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mop">ln</span></span></span></span>）：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mspace width="2em"/><mspace width="2em"/><mi>log</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac><mo fence="true">)</mo></mrow><mo>=</mo><msup><mi mathvariant="bold-italic">W</mi><mi>T</mi></msup><mo>⋅</mo><mi>x</mi><mspace linebreak="newline"></mspace><mo>=</mo><mo>&gt;</mo><mfrac><mi>p</mi><mrow><mn>1</mn><mo>−</mo><mi>p</mi></mrow></mfrac><mo>=</mo><msup><mi>e</mi><mrow><msup><mi mathvariant="bold-italic">W</mi><mi>T</mi></msup><mo>⋅</mo><mi>x</mi></mrow></msup><mspace linebreak="newline"></mspace><mo>=</mo><mo>&gt;</mo><mi>p</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><msup><mi mathvariant="bold-italic">W</mi><mi>T</mi></msup><mo>⋅</mo><mi>x</mi></mrow></msup></mrow></mfrac><mspace linebreak="newline"></mspace><mo>=</mo><mo>&gt;</mo><mi>p</mi><mo>=</mo><mi mathvariant="normal">sigmoid</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\qquad \qquad \log \left({\frac {p}{1-p}}\right) = \boldsymbol{W}^T \cdot x \\=&gt; \frac{p}{1-p} = e^{\boldsymbol{W}^T \cdot x} \\=&gt; p = \frac{1}{1 + e^{- \boldsymbol{W}^T \cdot x}} \\=&gt; p = \operatorname {sigmoid} (x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:2em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.917341em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.917341em;"><span style="top:-3.1390100000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.056365em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.056365em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.158712em;vertical-align:-0.837272em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.246058em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.863942em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord boldsymbol mtight" style="margin-right:0.15972em;">W</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8213457142857143em;"><span style="top:-2.833252857142857em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.837272em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">i</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">i</span><span class="mord mathrm">d</span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p>这就推导出了逻辑回归的函数式。再回过头来看下YouTube使用的服务函数式，可以发现计算的就是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Odds</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Odds}(p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">O</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span><span class="mord mathrm">s</span></span><span class="mopen">(</span><span class="mord mathdefault">p</span><span class="mclose">)</span></span></span></span>，也就是某个视频被点击的几率。但是训练的时候，目标不是预测视频观看时长吗？这要从YouTube的训练方式寻找答案：加权逻辑回归在训练时，需要给样本指定权重<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，<strong>对于正样本来说，权重设置为观看时长，对于负样本来说，权重指定为1</strong>。因此样本发生的几率会变成原来的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>倍：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Odds</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>w</mi><mi>i</mi></msub><mtext> </mtext><mi>p</mi></mrow><mrow><mn>1</mn><mo>−</mo><msub><mi>w</mi><mi>i</mi></msub><mtext> </mtext><mi>p</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">\operatorname{Odds}(i) = \frac{w_i \ p}{1 - w_i \ p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">O</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span><span class="mord mathrm">s</span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>由于在推荐场景中，用户点击率<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>往往是一个很小的值，因此上式通过不严谨的简化得到下式：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Odds</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msub><mi>w</mi><mi>i</mi></msub><mtext> </mtext><mi>p</mi></mrow><mrow><mn>1</mn><mo>−</mo><msub><mi>w</mi><mi>i</mi></msub><mtext> </mtext><mi>p</mi></mrow></mfrac><mo>≈</mo><msub><mi>w</mi><mi>i</mi></msub><mtext> </mtext><mi>p</mi><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{Odds}(i) = \frac{w_i \ p}{1 - w_i \ p} ≈ w_i \ p = E(w_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">O</span><span class="mord mathrm">d</span><span class="mord mathrm">d</span><span class="mord mathrm">s</span></span><span class="mopen">(</span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.988em;vertical-align:-0.8804400000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是用户观看时长，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span></span></span></span>是打开的概率，因此乘积就是观看时长的期望。</p><h4 id="3训练和测试样本的处理"><a class="markdownIt-Anchor" href="#3训练和测试样本的处理"></a> （3）训练和测试样本的处理</h4><p>① 候选集生成模型训练时，输出是所有视频个数，数量非常庞大，因此YouTube采用了Word2vec中用的负采样训练方法。</p><p>② 在训练集的预处理过程中，YouTube没有采用原始的用户日志，而是对每个用户提出等量的样本，是为了减少高度活跃的用户对模型损失的过度影响。因为这会使得模型更倾向于活跃用户，而忽略了长尾用户。</p><p>③ 在处理测试集时，YouTube没有采用经典的随机留一法（random holdout），而是选择用户最近一次观看的行为，是为了避免引入未来信息（future information）。</p><p>④ 如何处理用户对新视频的偏好呢？在特征中引入了Example Age，含义是<strong>训练样本产生的时刻距离当前时刻的时间</strong>，单位是小时。模型服务时，这个特征直接设置为0。YouTube通过实验验证了Example Age的重要性。</p><h4 id="4问答经典"><a class="markdownIt-Anchor" href="#4问答经典"></a> （4）问答经典</h4><p>① 请问召回模型中，输入层已经有了视频的预训练的Embedding向量，最后softmax 的参数也会作为视频的embedding向量。一开始不是都有了视频的Embedding向量了吗？最后ANN的为什么只用训练视频向量，而不用预训练的呢？</p><ul><li>因为只有最后的视频Embedding是跟用户Embedding在一个向量空间内。预训练和Embedding和最后relu层生成的user Embedding没有直接关系。</li></ul><p>② YouTube 的排序模型和候选集生成模型，都使用了平均池化这一操作，来把用户的历史观看视频整合起来。你能想到更好的方法来改进这个操作吗？</p><ul><li>在召回层，对用户历史观看的序列，按照时间衰减因子，对用户观看Embedding序列进行加权求平均，加强最近观看视频的影响力</li><li>在排序层，可以加入注意力机制，类似DIN模型中，计算候选Embedding与用户行为序列中视频Embedding的权重，然后在进行加权求平均，得到用户行为序列的Embedding</li></ul><p>③ 之前讲Embedding近邻搜索，需要用户Embedding和物品Embedding在同一向量空间。那么在召回层relu中提取的用户Embedding和softmax提取的物品Embedding，是在同一向量空间的，为什么？</p><ul><li>relu隐藏层的输出是用户向量，正好是softmax层的输入x，根据前向计算wi*x+b计算得到了物品i 节点值，这里的wi也就能代表物品向量了。也就是说由用户向量参与计算生成了最后的物品向量，跟前面利用电影向量 sum pooling出用户向量逻辑一致。所以他们在同一向量空间。</li></ul><p>④ 实际 Weighted LR 具体训练过程吗，比如 videoid1 labels=1 weights=15 , 实际中是把这个样本 重复抽样weights 次，放入训练样本吗，还是更改LR 的loss？</p><ul><li>两种方式都可以。有一些细微的差别，但我觉得无伤大雅，选一种就行。</li></ul><p>⑤ 为什么不一开始就使用item2vec训练视频embedding，平均为用户的embedding呢？是因为维度对不上还是因为不在同一个向量空间?而且这时候输入的视频embedding可以finetune的。</p><ul><li>做法上当然是可以的，YouTube仅仅是把所有的模型结构都画在这里，至于怎么实现，说实话那是每个人自己的事情。个人而言，候选集生成模型的输入用户embedding完全可以像你说的一样预训练生成，没有一点问题。</li></ul><h3 id="4-pinterest应用图神经网络"><a class="markdownIt-Anchor" href="#4-pinterest应用图神经网络"></a> 4. Pinterest应用图神经网络</h3><h4 id="1简介"><a class="markdownIt-Anchor" href="#1简介"></a> （1）简介</h4><p>DeepWalk、Node2Vec 这些非常实用的 Graph Embedding 方法。但是技术的发展永无止境，最近两年，GNN（Graph Nerual Netwrok，图神经网络）毫无疑问是最火热、最流行的基于图结构数据的建模方法。严格一点来说，图神经网络指的就是可以直接处理图结构数据的神经网络模型。</p><p>在诸多 GNN 的解决方案中，著名的社交电商巨头 Pinterest 对于 GraphSAGE 的实现和落地又是最为成功的，在业界的影响力也最大</p><h4 id="2搭桥还是平推"><a class="markdownIt-Anchor" href="#2搭桥还是平推"></a> （2）搭桥还是平推？</h4><h5 id="1-deep-walk-node2vec与gnn之间的关系"><a class="markdownIt-Anchor" href="#1-deep-walk-node2vec与gnn之间的关系"></a> ① Deep Walk、Node2Vec与GNN之间的关系。</h5><p>Deep Walk、Node2Vec没有直接处理图结构的数据，而是走了一个取巧的方式，先把图结构数据通过随机游走采样，转换成了序列数据，然后再 用诸如 Word2vec 这类序列数据 Embedding 的方法生成最终的 Graph Embedding。就是<strong>面对一个复杂问题时，我们不直接解决它，而是“搭一座桥”，通过这座桥把这个复杂问题转换成一个简单问题，因为对于简单问题，我们有非常丰富的处理手段</strong>。这样一来，这个复杂问题也就能简单地解决了。显然，基于随机游走的 Graph Embedding 方法就是这样一种“搭桥”的解决方案。</p><p>GNN 是一种平推解决图结构数据问题的方法，它直接输入图结构的数据，产生节点的 Embedding 或者推荐结果。</p><h4 id="3graphsage的主要步骤"><a class="markdownIt-Anchor" href="#3graphsage的主要步骤"></a> （3）GraphSAGE的主要步骤</h4><p>GraphSAGE 的全称叫做 Graph Sample and Aggregate，翻译过来叫“图采样和聚集方法”。其实这个名称就很好地解释了它运行的过程，就是先“采样”、再“聚集”。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/c1d474d94b5d1dd56591ef55d58d5d25.jpeg" alt="GraphSAGE的主要过程" style="zoom:33%;" /><p>GraphSAGE 的过程如上图所示，主要可以分为 3 步：</p><ol><li>在整体的图数据上，从某一个中心节点开始采样，得到一个 k 阶的子图，示意图中给出的示例是一个二阶子图；</li><li>有了这个二阶子图，我们可以先利用 GNN 把二阶的邻接点聚合成一阶的邻接点（图 1-2 中绿色的部分），再把一阶的邻接点聚合成这个中心节点（图 1-2 中蓝色的部分）；</li><li>有了聚合好的这个中心节点的 Embedding，我们就可以去完成一个预测任务，比如这个中心节点的标签是被点击的电影，那我们就可以让这个 GNN 完成一个点击率预估任务。</li></ol><h4 id="4graphsage是怎么工作的"><a class="markdownIt-Anchor" href="#4graphsage是怎么工作的"></a> （4）GraphSAGE是怎么工作的</h4><img src="2c4791fe07870eef1d4bcb6abe71e9b3.jpeg"  style="zoom:33%;" /><p>首先，我们要利用 MovieLens 的数据得到电影间的关系图，这个关系图可以是用用户行为生成。它也可以是像生成知识图谱一样来生成。比如，两部电影拥有同一个演员就可以建立一条边，拥有相同的风格也可以建立一条边，规则我们可以自己定。</p><p>在这个由电影作为节点的关系图上，我们随机选择一个中心节点。比如，我们选择了玩具总动员（Toy Story）作为中心节点，这时再向外进行二阶的邻接点采样，就能生成一个树形的样本。</p><p>经过多次采样之后，我们会拥有一批这样的子图样本。这时，我们就可以把这些样本输入 GNN 中进行训练了。这个 GNN 既可以预测中心节点的标签，比如点击或未点击，也可以单纯训练中心节点的 Embedding 就够了。</p><h4 id="5graphsage模型结构"><a class="markdownIt-Anchor" href="#5graphsage模型结构"></a> （5）GraphSAGE模型结构</h4><p>GraphSAGE 的模型结构到底怎么样？它到底是怎么把一个 k 阶的子图放到 GNN 中去训练，然后生成中心节点的 Embedding 的呢？以二阶GraphSAGE为例：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/e8d640076241bd415da8b782f8c256c0.jpg"  style="zoom:25%;" /><p>上图中处理的样本是一个以点 A 为中心节点的二阶子图，从左到右我们可以看到，点 A 的一阶邻接点包括点 B、点 C 和点 D，从点 B、C、D 再扩散一阶，可以看到点 B 的邻接点是点 A 和点 C，点 C 的邻接点是 A、B、E、F，而点 D 的邻接点是点 A。</p><p>清楚了样本的结构，我们再从右到左来看一看 GraphSAGE 的训练过程。这个 GNN 的输入是二阶邻接点的 Embedding，二阶邻接点的 Embedding 通过一个叫 CONVOLVE 的操作生成了一阶邻接点的 Embedding，然后一阶邻接点的 Embedding 再通过这个 CONVOLVE 的操作生成了目标中心节点的 Embedding，至此完成了整个训练。</p><p><strong>这个 CONVOLVE 操作是由两个步骤组成的：第一步叫 Aggregate 操作，就是图 4 中 gamma 符号代表的操作，它把点 A 的三个邻接点 Embedding 进行了聚合，生成了一个 Embedding hN(A)；第二步，我们再把 hN(A) 与点 A 上一轮训练中的 Embedding hA 连接起来，然后通过一个全联接层生成点 A 新的 Embedding。</strong></p><p>Aggregate 操作我们也不陌生，它其实就是把多个 Embedding 聚合成一个 Embedding 的操作。</p><h4 id="6graphsage的预测目标"><a class="markdownIt-Anchor" href="#6graphsage的预测目标"></a> （6）GraphSAGE的预测目标</h4><p>要知道预测样本标签这个事情是一个典型的有监督学习任务，而生成节点的 Embedding 又是一个无监督学习任务。那 GraphSAGE 是怎么做到既可以进行有监督学习，又能进行无监督学习的呢？要想让 GraphSAGE 做到这一点，关键就看你怎么设计它的输出层了。</p><p>我们先来说说有监督的情况，为了预测中心节点附带的标签，比如这个标签是点击或未点击，我们就需要让 GraphSAGE 的输出层是一个 Logistic Regression 这样的二分类模型，这个输出层的输入，就是我们之前通过 GNN 学到的中心节点 Embedding，输出当然就是预测标签的概率了。这样，GraphSAGE 就可以完成有监督学习的任务了。</p><p>而对于无监督学习，那就更简单了。这是因为，我们的输出层就完全可以仿照Word2vec 输出层的设计，用一个 softmax 当作输出层，预测的是每个点的 ID。这样一来，每个点 ID 对应的 softmax 输出层向量就是这个点的 Embedding，这就和 word2vec 的原理完全一致了。</p><h4 id="7graphsage-在-pinterest-推荐系统中的应用"><a class="markdownIt-Anchor" href="#7graphsage-在-pinterest-推荐系统中的应用"></a> （7）GraphSAGE 在 Pinterest 推荐系统中的应用</h4><p>Pinterest 这个网站的主要功能是为用户提供各种商品的浏览、推荐、收藏的服务，那么所谓的 Pin 这个动作，其实就是你收藏了一个商品到自己的收藏夹。因此，所有的 Pin 操作就连接起了用户、商品和收藏夹，共同构成了一个它们之间的关系图。PinSAGE 就是在这个图上训练并得到每个商品的 Embedding 的。</p><img src="9c694cc8c041c237e541d64d9e370684.jpg" alt="PinSAGE在Pinterest上应用的例子" style="zoom:33%;" /><p>我们先看图 5 左边的例子，因为它给出的是一个种子发芽的图片，我们就推测它应该是一个卖绿植或者绿植种子的商家。接下来，我们再来判断左边通过四种不同算法找到的相似图片是不是合理。其中，PinSAGE 是 Pinterest 实际用于推荐系统中的算法，其他三个 Visual、Annot、Pixie 都是效果测试中的对比算法。</p><p>我们看到通过第一个算法 Visual 找到的图片，虽然看上去和原来的图片比较相似，但前两个图片居然都是食品照片，这显然不相关。第二个算法 Annot 中的树木，以及第三个算法 Pixie 中的辣椒和西兰花，显然都跟绿植种子有很遥远的差距。相比之下，PinSAGE 找到的图片就很合理了，它找到的全都是种子发芽或者培育绿植的图片，这就非常合乎用户的逻辑了。</p><p>要知道，<strong>在 PinSAGE 应用的构成中，它没有直接分析图片内容，而只是把图片当作一个节点，利用节点和周围节点的关系生成的图片 Embedding</strong>。因此，这个例子可以说明，PinSAGE 某种程度上理解了图片的语义信息，而这些语义信息正是埋藏在 Pinterest 的商品关系图中。可见，PinSAGE 起到了多么神奇的数据挖掘的作用。</p><h3 id="5-flink实现实时推荐"><a class="markdownIt-Anchor" href="#5-flink实现实时推荐"></a> 5. Flink实现实时推荐</h3><h4 id="1为什么实时性是影响推荐系统效果的关键因素"><a class="markdownIt-Anchor" href="#1为什么实时性是影响推荐系统效果的关键因素"></a> （1）为什么实时性是影响推荐系统效果的关键因素？</h4><p>推荐系统只有拥有实时抓住用户新兴趣点的能力，才能让你的用户“离不开你”。</p><h4 id="2什么是批流一体的数据处理体系"><a class="markdownIt-Anchor" href="#2什么是批流一体的数据处理体系"></a> （2）什么是批流一体的数据处理体系？</h4><p>无论是数据的预处理，还是特征工程，大部分是在 Spark 平台上完成的。Spark 平台的特点是，它处理的数据都是已经落盘的数据。也就是说，这些数据要么是在硬盘上，要么是在分布式的文件系统上，然后才会被批量地载入到 Spark 平台上进行运算处理，这种批量处理大数据的架构就叫做批处理大数据架构。批处理架构图：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/153c832b255ce750537698fc5866a878.jpg"  style="zoom:33%;" /><p>但批处理架构的特点就是慢，数据从产生到落盘，再到被 Spark 平台重新读取处理，往往要经历几十分钟甚至几小时的延迟。我们能不能在数据产生之后就立马处理它，而不是等到它落盘后再重新处理它呢？当然是可以的，这种在数据产生后就直接对数据流进行处理的架构，就叫做流处理大数据架构。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/dc38fbc4e98fc348a3a6bd58d2bc51b1.jpg"  style="zoom:33%;" /><p>从流处理架构示意图中可以看到，它和批处理大数据架构相比，不仅用流处理平台替换掉了分布式批处理 Map Reduce 计算平台，而且在数据源与计算平台之间，也不再有存储系统这一层。这就大大提高了数据处理的速度，让数据的延迟可以降低到几分钟级别，甚至一分钟以内，这也让实时推荐成为了可能。</p><p>但是，流处理平台也不是十全十美的。由于流处理平台是对数据流进行直接处理，它没有办法进行长时间段的历史数据的全量处理，<strong>这就让流处理平台无法应用在历史特征的提取，模型的训练样本生成这样非常重要的领域。</strong></p><p>那是不是说，根本就没有能够同时具有批处理、流处理优势的解决方案吗？<strong>当然是有的，这就是我们在一开始说的，批流一体的大数据架构，其中最有代表性的就是 Flink。批流一体的大数据架构最重要的特点，就是在流处理架构的基础上添加了数据重播的功能</strong>。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/7c6a35831867bfyy3140b619616d7c7b.jpg" style="zoom:33%;" /><p>数据重播指的是在数据落盘之后，还可以利用流处理平台同样的代码，进行落盘数据的处理，这就相当于进行了一遍重播。这样不就实现了离线环境下的数据批处理了吗？而且由于流处理和批处理使用的是一套代码，因此完美保证了代码维护的一致性，是近乎完美的数据流解决方案。</p><h4 id="3flink-是如何处理数据流的"><a class="markdownIt-Anchor" href="#3flink-是如何处理数据流的"></a> （3）Flink 是如何处理数据流的？</h4><p>Flink 中两个最重要的概念，数据流（DataStream）和窗口（Window）。数据流其实就是消息队列，从网站、APP 这些客户端中产生的数据，被发送到服务器端的时候，就是一个数据消息队列，而流处理平台就是要对这个消息队列进行实时处理。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/2151181244e9b21b03029333294f9515.jpg" style="zoom:33%;" /><p>Flink 会怎么处理这个消息队列里的数据呢？答案很简单，就是随着时间的流失，按照时间窗口来依次处理每个时间窗口内的数据。除了固定窗口以外，Flink 还提供了多种不同的窗口类型，滑动窗口（Sliding Window）也是我们经常会用到的。</p><h3 id="6-阿里巴巴是如何迭代更新推荐模型的"><a class="markdownIt-Anchor" href="#6-阿里巴巴是如何迭代更新推荐模型的"></a> 6. 阿里巴巴是如何迭代更新推荐模型的？</h3><p>阿里巴巴的业务场景大家非常熟悉，在<a href="https://notlate.net/posts/d6641ee8.html">传统算法</a>部分，介绍了其LS-PLM的工作原理；在<a href="https://notlate.net/posts/e066db0.html">深度学习算法部分</a>，介绍了DIN和DIEN。因此在本节主要介绍下其迭代更新思路。</p><pre class="mermaid">graph LRA((推荐系统))-->B(LS-PLM,2012)-->C(基础深度学习模型,2016)-->D(DIN,2017)-->E(DIEN,2018)-->F(MIMN,2019)-->G((推荐系统主模型))A-->X(多模态建模CMN,2018)-->Y(多目标建模ESMM,2018)-->Z((独立问题通用模型))</pre><h4 id="1基础深度学习模型"><a class="markdownIt-Anchor" href="#1基础深度学习模型"></a> （1）基础深度学习模型</h4><p>基于经典的Embedding+MLP深度学习模型架构，将用户历史Embedding简单的通过加和池化操作叠加，再与其他用户特征、广告特征、场景特征连接后输入上层神经网络进行训练。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210317225354324.png" alt="基础深度学习模型结构图" /></p><h4 id="2din模型"><a class="markdownIt-Anchor" href="#2din模型"></a> （2）DIN模型</h4><p>利用注意力机制替换基础模型的Sum Pooling操作，根据候选广告和用户历史行为之间的关系确定每个历史行为的权重。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/edd028f815ef3577553ffe045f042330.jpg" alt="DIN模型结构图" style="zoom:50%;" /><h4 id="3dien模型"><a class="markdownIt-Anchor" href="#3dien模型"></a> （3）DIEN模型</h4><p>在DIN基础上，进一步改进对用户行为历史的建模，使用序列模型在用户行为历史之上抽取用户兴趣并模拟用户兴趣的演化过程。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/56c93e11aa3503852c37cd18db740da0.jpg" alt="DIEN模型结构图" style="zoom:33%;" /><h4 id="4mimn模型"><a class="markdownIt-Anchor" href="#4mimn模型"></a> （4）MIMN模型</h4><p>在DIEN模型基础上，将用户的兴趣细分为不同兴趣通道，进一步模拟用户在不同兴趣通道上的演化进程，生成不同兴趣通道的记忆向量，再利用注意力机制作用于多层神经网络，<a href="https://arxiv.org/pdf/1905.09248.pdf">论文地址</a>。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210317225833218.png" alt="MIMN模型结构图" /></p><p>对于DIEN和MIMN这种带有序列结构的模型来说，推断过程要串行，因此无法被并行加速，使得模型服务的延迟率居高不下。阿里是如何解决这类问题的呢？在MIMN的论文中公开了解决方案。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210318220325422.png" alt="阿里巴巴两种实时模型服务架构" /></p><p>上图展示了两种不同的模型服务架构，主要区别在于红框中对于实时用户行为事件的处理方法不同，具体如下：</p><h5 id="1-用户兴趣表达模块"><a class="markdownIt-Anchor" href="#1-用户兴趣表达模块"></a> ① 用户兴趣表达模块</h5><p>B架构把A架构的“用户行为特征（User Behavior Features）在线数据库”替换成了“用户兴趣表达（User Interest Representation）在线数据库”。无论是DIEN还是MIMN，它们表达用户兴趣的最终形式都是兴趣Embedding向量。如果在线获取的是<strong>用户行为特征序列</strong>，那么<strong>实时预测服务器</strong>（Real-Time Prediction Server）就需要执行复杂的序列模型推理以生成<strong>用户兴趣向量</strong>。若在线获取的直接就是用户兴趣向量，那么实时预测服务直接推理MLP部分就可以了，可以大大降低预测的延时（因为MLP的层数相比序列模型要少很多，而且可以并行计算）。</p><h5 id="2-用户兴趣中心模块"><a class="markdownIt-Anchor" href="#2-用户兴趣中心模块"></a> ② 用户兴趣中心模块</h5><p>B架构增加了用户兴趣中心模块（User Interest Center，UIC）用于把用户行为序列生成用户兴趣向量，对DIEN和MIMN来说，UIC运行着生成用户兴趣向量的部分模型（在A架构中这部分模型是在实时预测服务器中的）。与此同时，实时用户行为事件（realtime user behavior event）的更新方式也发生了变化：在A架构中，一个新的用户行为事件发生时，该事件会被插入用户行为特征数据库中；在B架构中，新的用户行为事件则会出发UIC的更新逻辑，UIC利用该事件更新对应用户的兴趣向量。</p><p>除此之外的模块作用基本一致，接下来看下离线部分和在线部分的运行逻辑：</p><h5 id="3-离线运行逻辑"><a class="markdownIt-Anchor" href="#3-离线运行逻辑"></a> ③ 离线运行逻辑</h5><p>学习模块（Learner）定期利用系统日志（Logs）训练兵更新模型（Model），模型更新之后，新模型在A架构中被直接部署在实时预测服务器中，而B架构则对模型进行拆分，生成用户兴趣向量部分部署在UIC，其余部分部署在实时预测服务器。</p><h5 id="4-在线运行逻辑"><a class="markdownIt-Anchor" href="#4-在线运行逻辑"></a> ④ 在线运行逻辑</h5><p>1）流量请求（traffic request）中带着<strong>用户ID</strong>(User ID)和<strong>待排序的候选商品ID</strong>(Ad ID)信息达到服务器。</p><p>2）实时预测服务器根据用户ID和候选商品ID获取<strong>用户和商品特征（Ad Features）</strong>，用户特征具体包括用户的<strong>人口属性特征（User Demography Features）<strong>和</strong>用户行为特征</strong>（A架构）或<strong>用户兴趣表达向量</strong>（B架构）。</p><p>3）实时预测服务器利用用户和商品特征进行排序并返回结果。</p><p>B架构中对模型的拆解效果如何呢？阿里巴巴公开的数据是：每个服务节点在500QPS的压力下，DIEN模型的预测时间从200ms降至19ms，效果非常显著。</p><p>从本质上看，A架构采用了端到端的部署方案，B架构采用了Embedding+轻量级线上模型的部署方案。</p><h4 id="5其他方向"><a class="markdownIt-Anchor" href="#5其他方向"></a> （5）其他方向</h4><p>阿里团队还在很多方向上都做了研究。比如说，同时处理 CTR 预估和 CVR 预估问题的多目标优化模型 ESMM（Entire Space Multi-Task Model），基于用户会话进行会话内推荐的 DSIN（Deep Session Interest Network ），可以在线快速排序的轻量级深度推荐模型 COLD(Computing power cost-aware Online and Lightweight Deep pre-ranking system) 等等。</p><h3 id="7-美团是如何在推荐系统中落地强化学习的"><a class="markdownIt-Anchor" href="#7-美团是如何在推荐系统中落地强化学习的"></a> 7. 美团是如何在推荐系统中落地强化学习的?</h3><p>强化学习在推荐系统中落地会有一个难点：因为强化学习涉及离线模型训练、线上服务、数据收集、实时模型更新等几乎推荐系统的所有工程环节，所以强化学习整个落地过程的工程量非常大，需要多团队紧密合作才能实现。大家可以学习一下美团的成功实践：<a href="https://tech.meituan.com/2018/11/15/reinforcement-learning-in-mt-recommend-system.html">强化学习在美团“猜你喜欢”的实践</a></p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/2c4e9dc8.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-facebook的深度学习推荐系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-facebook的深度学习推荐系统&quot;&gt;&lt;/a&gt; 1. Facebook的深度学习推荐系统&lt;/h3&gt;
&lt;p&gt;2014年，Facebook发表了广告推</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="业界主流" scheme="https://www.notlate.net/tags/%E4%B8%9A%E7%95%8C%E4%B8%BB%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记12：模型评估</title>
    <link href="https://www.notlate.net/posts/9f710c67.html"/>
    <id>https://www.notlate.net/posts/9f710c67.html</id>
    <published>2021-01-05T14:28:20.000Z</published>
    <updated>2021-03-18T15:04:38.586Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-离线评估"><a class="markdownIt-Anchor" href="#1-离线评估"></a> 1. 离线评估</h3><h4 id="1介绍"><a class="markdownIt-Anchor" href="#1介绍"></a> （1）介绍</h4><p>离线评估是最常用、最基本的。顾名思义就是：我们将模型部署于线上环境之前，在离线环境下进行的评估。由于不用部署到生产环境，“离线评估”没有线上部署的工程风险，也不会浪费宝贵的线上流量资源，而且具有测试时间短，可多组并行，以及能够利用丰富的线下计算资源等诸多优点。</p><h4 id="2评估方法"><a class="markdownIt-Anchor" href="#2评估方法"></a> （2）评估方法</h4><h5 id="1-holdout-检验"><a class="markdownIt-Anchor" href="#1-holdout-检验"></a> ① Holdout 检验。</h5><p>最基础，最常用的离线评估方法，它将原始的样本集合随机划分为<strong>训练集</strong>和<strong>测试集</strong>两部分，所以 Holdout 检验的关键词就是“随机”。</p><p>缺点：评估的结果有一定随机性。且样本比较少时，训练集会进一步减小，往往会影响模型的训练效果。</p><h5 id="2-交叉检验"><a class="markdownIt-Anchor" href="#2-交叉检验"></a> ② 交叉检验</h5><p>将全部样本划分成 k 个大小相等的样本子集，然后依次遍历这 k 个子集，每次把当前遍历到的子集作为验证集，其余所有的子集作为训练集，这样依次进行 k 次模型的训练和评估。最后，我们再将所有 k 次评估指标的平均值作为最终的评估指标。在我们的实践中，k 经常取 10，也就是依次进行 10 次检验然后取指标均值。</p><p>缺点：当样本规模比较小时，将样本集进行划分会让训练集进一步减小，这往往会影响模型的训练效果。</p><h5 id="3-自助法不太常用"><a class="markdownIt-Anchor" href="#3-自助法不太常用"></a> ③ 自助法（不太常用）</h5><p><strong>基于自助采样的检验方法</strong>，它的主要过程是：对于总数为 n 的样本集合，我们先进行 n 次有放回地随机抽样，得到大小为 n 的训练集。在 n 次采样过程中，有的样本会被重复采样，有的样本没有被抽出过，我们再将这些没有被抽出的样本作为验证集进行模型验证，这就是自助法的验证过程。</p><p>缺点：改变了原有数据的分布，有可能让模型产生一定程度的偏差。</p><h5 id="4-时间切割"><a class="markdownIt-Anchor" href="#4-时间切割"></a> ④ 时间切割</h5><p>防止“信息穿越”导致的模型作弊现象发生，我们一般会使用时间切割的方案去划分训练集和测试集。比如，你一共处理了 30 天的样本，从第 25 天末开始切割，前 25 天的样本作为训练集，后 5 天的样本作为测试集，这样我们就从根源上切断了引入“未来信息”的可能。</p><p>缺点：整个评估过程是静态的，模型不会随着评估的进行而更新，这显然是不符合事实的</p><h5 id="5-离线replay"><a class="markdownIt-Anchor" href="#5-离线replay"></a> ⑤ 离线Replay</h5><p>在离线状态下对线上更新过程进行仿真，让整个评估过程“动”起来。业界把这样离线仿真式的评估方式叫做离线 Replay。</p><p>Replay 评估的过程更接近于真实的线上环境，因为它在线下还原了模型在线上的更新、预估过程。这也让 Replay 方法的评估结果更加权威可信，毕竟，我们最终的目标是让模型在线上产生更好的效果。</p><h4 id="3总结"><a class="markdownIt-Anchor" href="#3总结"></a> （3）总结</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117172459000.png" alt="离线评估方法比较" style="zoom:50%;" /><h4 id="4经典问答"><a class="markdownIt-Anchor" href="#4经典问答"></a> （4）经典问答</h4><p>① 离线 Replay 和增强学习有什么相似之处吗？它们两个还有什么更深层次的关系吗？</p><ul><li>离线Replay和RL都是动态更新模型的，都需要不断的测试和再训练模型。增强学习(如DRN)是通过不断接受反馈，在线更新模型的，所以评估方法不能引入未来信息，</li><li>简单的时间切割评估方法又不能模拟模型的更新频率，所以离线Replay是增强学习的唯一离线评估方法。</li></ul><h3 id="2-评估指标"><a class="markdownIt-Anchor" href="#2-评估指标"></a> 2. 评估指标</h3><p>为了更明白的描述各个指标，预定义如下标识：</p><pre class="mermaid">graph LRA[总样本:含正负样本]-->B[经过分类器计算得到概率]B-->|概率>=阈值| C1[判定为正]B-->|概率< 阈值| C2[判定为负]C1-->|实际正样本,预测正确| TP[TP:判定为正,分类正确]C1-->|实际负样本,预测错误| FP[FP:判定为正,分类错误]C2-->|实际负样本,预测正确| TN[TN:判定为负,分类正确]C2-->|实际正样本,预测错误| FN[FN:判定为负,分类错误]</pre><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210315155746765.png" alt="预定义表示" /></p><p>关于以上TP、FP、FN、TN四组表示，大家应该可以总结出规律，其中第一个字母的<strong>T和F</strong>分别表示分类结果<strong>正确和错误</strong>；第二个字母P和N分别表示判定为<strong>正和负样本</strong>。</p><h4 id="1低阶评估指标"><a class="markdownIt-Anchor" href="#1低阶评估指标"></a> （1）低阶评估指标</h4><p>对于低阶评估指标来说，准确率、精确率与召回率、对数损失、均方根误差，这四个指标在推荐模型评估中最常用。</p><h5 id="1-准确率"><a class="markdownIt-Anchor" href="#1-准确率"></a> ① 准确率：</h5><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">准</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">绿</mi><mi mathvariant="normal">色</mi><mi mathvariant="normal">对</mi><mi mathvariant="normal">角</mi><mi mathvariant="normal">块</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><mo>+</mo><mi>T</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">总</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi></mrow></msub></mrow></mfrac><mo>∗</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">准确率 = \frac{(TP + TN)_{分类结果正确的样本(圆形图中绿色对角块)}}{(TP + FP + FN + TN)_{总样本}} * 100 \%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">准</span><span class="mord cjk_fallback">确</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4312em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4951999999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">总</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7451999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">结</span><span class="mord cjk_fallback mtight">果</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">绿</span><span class="mord cjk_fallback mtight">色</span><span class="mord cjk_fallback mtight">对</span><span class="mord cjk_fallback mtight">角</span><span class="mord cjk_fallback mtight">块</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></span></p><p>缺点：当不同类别的样本比例非常不均衡的时候，占比大的类别往往成为影响准确率的最主要因素。比如，负样本占 99%，那么分类器把所有样本都预测为负样本也可以获得 99% 的准确率。</p><h5 id="2-精确率与召回率"><a class="markdownIt-Anchor" href="#2-精确率与召回率"></a> ② 精确率与召回率：</h5><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">精</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">纵</mi><mi mathvariant="normal">轴</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac><mo>∗</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">精确率 = \frac{TP_{分类结果正确的正样本(圆形图中左上角)}}{(TP + FP)_{分类为正的样本(圆形图中的左半球，纵轴方向)}} * 100\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">精</span><span class="mord cjk_fallback">确</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4697299999999998em;vertical-align:-1.0412em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4285299999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">为</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mord cjk_fallback mtight">，</span><span class="mord cjk_fallback mtight">纵</span><span class="mord cjk_fallback mtight">轴</span><span class="mord cjk_fallback mtight">方</span><span class="mord cjk_fallback mtight">向</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7451999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">结</span><span class="mord cjk_fallback mtight">果</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0412em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">召</mi><mi mathvariant="normal">回</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">北</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">横</mi><mi mathvariant="normal">轴</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac><mo>∗</mo><mn>100</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">召回率=\frac{TP_{分类结果正确的正样本(圆形图中左上角)}}{(TP + FN)_{真实的正样本(圆形图中的北半球，横轴方向)}} * 100 \%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">召</span><span class="mord cjk_fallback">回</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4697299999999998em;vertical-align:-1.0412em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4285299999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">北</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mord cjk_fallback mtight">，</span><span class="mord cjk_fallback mtight">横</span><span class="mord cjk_fallback mtight">轴</span><span class="mord cjk_fallback mtight">方</span><span class="mord cjk_fallback mtight">向</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7451999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">结</span><span class="mord cjk_fallback mtight">果</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0412em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">%</span></span></span></span></span></p><ul><li><p>在推荐列表中，通常没有一个确定的阈值来把预测结果直接判定为正样本或负样本，而是采用 **Top N 排序结果的精确率（Precision@N）和召回率（Recall@N）**来衡量排序模型的性能。具体操作，就是认为模型排序的前 N 个结果就是模型判定的正样本，然后分别计算 Precision@N 和 Recall@N。</p></li><li><p>精确率和召回率其实是矛盾统一的一对指标，可以使用<strong>F1-score</strong>综合地反映精确率和召回率的高低。 F1-score的定义是精确率和召回率的<strong>调和平均值</strong>。</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mn>1</mn><mo>=</mo><mfrac><mrow><mn>2</mn><mo separator="true">⋅</mo><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo separator="true">⋅</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow><mrow><mi>P</mi><mi>r</mi><mi>e</mi><mi>c</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>o</mi><mi>n</mi><mo>+</mo><mi>R</mi><mi>e</mi><mi>c</mi><mi>a</mi><mi>l</mi><mi>l</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">F1=\frac{2 · Precision · Recall}{Precision + Recall}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">i</span><span class="mord mathdefault">s</span><span class="mord mathdefault">i</span><span class="mord mathdefault">o</span><span class="mord mathdefault">n</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault">e</span><span class="mord mathdefault">c</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li></ul><h5 id="3-对数损失"><a class="markdownIt-Anchor" href="#3-对数损失"></a> ③ 对数损失</h5><p>二分类和多分类模型的 Logloss 其实就是我们之前讲过的逻辑回归和 Softmax 模型的损失函数，而大量深度学习模型的输出层正是逻辑回归或 Softmax，因此，采用 Logloss 作为评估指标能够非常直观地反映模型损失函数的变化。所以在训练模型的过程中，我们在每一轮训练中都会输出 Logloss，来观察模型的收敛情况。</p><p>二分类对数损失函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mo stretchy="false">[</mo><msub><mi>y</mi><mi>i</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><msub><mi>p</mi><mi>i</mi></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">-\frac{1}{N} \sum^N_{i=1} [y_i log{p_i} + (1-y_i) log(1-p_i)]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord"><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></p><p>多分类对数损失函数：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>−</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><mo stretchy="false">[</mo><msub><mi>y</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mtext> </mtext><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo stretchy="false">)</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">-\frac{1}{N} \sum^N_{i=1} \sum^M_{j=1} [y_{i,j} \ log(p_{i,j})]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.417049em;vertical-align:-0.43581800000000004em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">]</span></span></span></span></p><h5 id="4-均方根误差"><a class="markdownIt-Anchor" href="#4-均方根误差"></a> ④ 均方根误差</h5><p>准确率、精确率、召回率、LogLoss 都是针对分类模型指定的指标。除了这种分类模型外，还有回归模型。它是用来预测一个连续值，比如预测某个用户对某个电影会打多少分，这就是一个回归模型。最常用的评估指标就是<strong>均方根误差（RMSE，Root Mean Square Error）</strong>。公式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mi>M</mi><mi>S</mi><mi>E</mi><mo>=</mo><msqrt><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mi>N</mi></mfrac></msqrt></mrow><annotation encoding="application/x-tex">RMSE=\sqrt \frac{\sum^N_{i=1} (y_i - \hat{y_i})^2}{N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.04em;vertical-align:-0.9136544999999998em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.1263455em;"><span class="svg-align" style="top:-5em;"><span class="pstrut" style="height:5em;"></span><span class="mord" style="padding-left:1em;"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span style="top:-4.0863455em;"><span class="pstrut" style="height:5em;"></span><span class="hide-tail" style="min-width:1.02em;height:3.08em;"><svg width='400em' height='3.08em' viewBox='0 0 400000 3240' preserveAspectRatio='xMinYMin slice'><path d='M473,2793c339.3,-1799.3,509.3,-2700,510,-2702c3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606zM1001 80H400000v40H1017z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9136544999999998em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个样本点的真实值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>是第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个样本点的预测值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>是样本个数。那么均方根误差越小，当然就证明这个回归模型预测越精确。</p><h4 id="2高阶评估指标"><a class="markdownIt-Anchor" href="#2高阶评估指标"></a> （2）高阶评估指标</h4><h5 id="1-p-r曲线p-精确率precisionr-召回率recall"><a class="markdownIt-Anchor" href="#1-p-r曲线p-精确率precisionr-召回率recall"></a> ① P-R曲线：P: 精确率Precision，R: 召回率Recall。</h5><p>为了综合评价一个推荐模型的好坏，不仅要看模型在一个 Top n 值下的精确率和召回率，还要看到模型在不同 N 取值下的表现，甚至最好能绘制出一条 n 从 1 到 N，准确率和召回率变化的曲线，这条曲线就是 P-R 曲线。其中<strong>纵轴</strong>是精确率(注意看公式2的分母)，<strong>横轴</strong>是召回率(注意看公式3的分母)。</p><p>AUC(Area Under Curve)，曲线下面积。计算 AUC 值只需要沿着曲线横轴做积分。AUC 越大，就证明推荐模型的综合性能越好。其中可以是P-R曲线，也可以是接下来要介绍的ROC曲线。</p><h5 id="2-roc曲线the-receiver-operating-characteristic-曲线受试者工作特征曲线"><a class="markdownIt-Anchor" href="#2-roc曲线the-receiver-operating-characteristic-曲线受试者工作特征曲线"></a> ② ROC曲线：the Receiver Operating Characteristic 曲线（受试者工作特征曲线）。</h5><p><strong>纵轴</strong>是真阳性率<strong>TPR</strong>（True Positive Rate）:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">北</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac><mo>=</mo><msub><mi>R</mi><mrow><mi mathvariant="normal">召</mi><mi mathvariant="normal">回</mi><mi mathvariant="normal">率</mi></mrow></msub></mrow><annotation encoding="application/x-tex">TPR=\frac{TP_{分类正确的正样本(圆形图中左上角)}}{(TP + FN)_{真实的正样本(圆形图中北半球)}} = R_{召回率}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4697299999999998em;vertical-align:-1.0412em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4285299999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">北</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7451999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0412em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.15em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">召</span><span class="mord cjk_fallback mtight">回</span><span class="mord cjk_fallback mtight">率</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><strong>横轴</strong>是假阳性率<strong>FPR</strong>（False Positive Rate）:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>F</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">错</mi><mi mathvariant="normal">误</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">负</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">下</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">负</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">南</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">FPR=\frac{FP_{分类错误的负样本(圆形图中左下角)}}{(FP+TN)_{真实的负样本(圆形图中南半球)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4697299999999998em;vertical-align:-1.0412em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4285299999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">负</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">南</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7451999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">错</span><span class="mord cjk_fallback mtight">误</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">负</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">下</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0412em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>绘制过程：</p><ul><li>第一步，根据样本标签统计出正负样本的数量，假设正样本数量为P(圆形图中北半球)，负样本数量为N(圆形图中南半球)。</li><li>第二步，把纵轴的刻度间隔设置为1/P，横轴的刻度间隔设置为1/N。</li><li>第三步，再根据模型输出的预测概率对样本进行从高到低的排序。</li><li>第四步，依次遍历样本。从零点开始绘制 ROC 曲线，每遇到一个正样本就沿纵轴方向绘制一个刻度间隔的曲线，每遇到一个负样本就沿横轴方向绘制一个刻度间隔的曲线，直到遍历完所有样本，曲线最终停在 (1,1) 这个点，整个 ROC 曲线就绘制完成了。</li><li>第五步：在绘制完 ROC 曲线后，我们也可以像 P-R 曲线一样，计算出 ROC 曲线的 AUC，AUC 越高，推荐模型的综合性能就越好。</li></ul><h5 id="3-平均精度均值mapmean-average-precision"><a class="markdownIt-Anchor" href="#3-平均精度均值mapmean-average-precision"></a> ③ 平均精度均值：mAP（mean average precision）</h5><p>mAP是对平均精度（AP，average precision）的再次平均。那么如何计算AP呢？假设推荐系统对某一用户测试集的排序结果如下（就是给这用户推荐了N个物品，用户实际点击的统计）：</p><table><thead><tr><th>推荐序列</th><th>N=1</th><th>N=2</th><th>N=3</th><th>N=4</th><th>N=5</th><th>N=6</th></tr></thead><tbody><tr><td>真实标签</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>其中1表示正样本，0表示负样本（也就是说系统给这名用户推荐了N=6个物品，他/她分别点击了第1、4、5、6共计4个物品）。则每个位置上的Precision@N分别是多少呢？结果如下：</p><table><thead><tr><th>推荐序列</th><th>N=1</th><th>N=2</th><th>N=3</th><th>N=4</th><th>N=5</th><th>N=6</th></tr></thead><tbody><tr><td>真实标签</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>1</td></tr><tr><td>Precision@N</td><td>1/1</td><td>1/2</td><td>1/3</td><td>2/4</td><td>3/5</td><td>4/6</td></tr></tbody></table><p>计算时候，只取正样本处的 Precision 进行平均，所以<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>A</mi><mi>P</mi><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>1</mn><mo>+</mo><mn>2</mn><mi mathvariant="normal">/</mi><mn>4</mn><mo>+</mo><mn>3</mn><mi mathvariant="normal">/</mi><mn>5</mn><mo>+</mo><mn>4</mn><mi mathvariant="normal">/</mi><mn>6</mn><mo stretchy="false">)</mo></mrow><mn>4</mn></mfrac><mo>=</mo><mn>0.6917</mn></mrow><annotation encoding="application/x-tex">AP = \frac {(1/1 + 2/4 + 3/5 + 4/6)} {4} = 0.6917</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mord mtight">/</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight">2</span><span class="mord mtight">/</span><span class="mord mtight">4</span><span class="mbin mtight">+</span><span class="mord mtight">3</span><span class="mord mtight">/</span><span class="mord mtight">5</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mord mtight">/</span><span class="mord mtight">6</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">6</span><span class="mord">9</span><span class="mord">1</span><span class="mord">7</span></span></span></span>。</p><p>mAP又是什么呢？对测试集中的每个用户都进行样本排序，那么每个用户都会计算出一个 AP 值，再对所有用户的 AP 值进行平均，就得到了 mAP。<strong>因为 mAP 需要对每个用户的样本进行分用户排序，而 P-R 曲线和 ROC 曲线均是对全量测试样本进行排序。</strong></p><h4 id="3问答经典"><a class="markdownIt-Anchor" href="#3问答经典"></a> （3）问答经典</h4><h5 id="1-在正负样本不平衡的场景下p-r和roc哪个稳定"><a class="markdownIt-Anchor" href="#1-在正负样本不平衡的场景下p-r和roc哪个稳定"></a> ① 在正负样本不平衡的场景下，P-R和ROC哪个稳定？</h5><p>当我们将负样本复制10倍时：</p><ul><li>ROC曲线（<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">北</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">TPR=\frac{TP_{分类正确的正样本(圆形图中左上角)}}{(TP + FN)_{真实的正样本(圆形图中北半球)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.650611em;vertical-align:-0.60364em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.046971em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">北</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5686400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.60364em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>P</mi><mi>R</mi><mo>=</mo><mfrac><mrow><mi>F</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">错</mi><mi mathvariant="normal">误</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">负</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">下</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>F</mi><mi>P</mi><mo>+</mo><mi>T</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">负</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">南</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">FPR=\frac{FP_{分类错误的负样本(圆形图中左下角)}}{(FP+TN)_{真实的负样本(圆形图中南半球)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.650611em;vertical-align:-0.60364em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.046971em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">负</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">南</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5686400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">错</span><span class="mord cjk_fallback mtight">误</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">负</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">下</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.60364em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>）中，TPR显然不会变，FPR是负样本中被预测为正样本的比例，这其实也是不变的，那整个ROC曲线也就没有变。</li><li>PR曲线(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">精</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>P</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">纵</mi><mi mathvariant="normal">轴</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">精确率 = \frac{TP_{分类结果正确的正样本(圆形图中左上角)}}{(TP + FP)_{分类为正的样本(圆形图中的左半球，纵轴方向)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">精</span><span class="mord cjk_fallback">确</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.650611em;vertical-align:-0.60364em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.046971em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">为</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mord cjk_fallback mtight">，</span><span class="mord cjk_fallback mtight">纵</span><span class="mord cjk_fallback mtight">轴</span><span class="mord cjk_fallback mtight">方</span><span class="mord cjk_fallback mtight">向</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5686400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">结</span><span class="mord cjk_fallback mtight">果</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.60364em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">召</mi><mi mathvariant="normal">回</mi><mi mathvariant="normal">率</mi><mo>=</mo><mfrac><mrow><mi>T</mi><msub><mi>P</mi><mrow><mi mathvariant="normal">分</mi><mi mathvariant="normal">类</mi><mi mathvariant="normal">结</mi><mi mathvariant="normal">果</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">确</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">左</mi><mi mathvariant="normal">上</mi><mi mathvariant="normal">角</mi><mo stretchy="false">)</mo></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>T</mi><mi>P</mi><mo>+</mo><mi>F</mi><mi>N</mi><msub><mo stretchy="false">)</mo><mrow><mi mathvariant="normal">真</mi><mi mathvariant="normal">实</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">正</mi><mi mathvariant="normal">样</mi><mi mathvariant="normal">本</mi><mo stretchy="false">(</mo><mi mathvariant="normal">圆</mi><mi mathvariant="normal">形</mi><mi mathvariant="normal">图</mi><mi mathvariant="normal">中</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">北</mi><mi mathvariant="normal">半</mi><mi mathvariant="normal">球</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">横</mi><mi mathvariant="normal">轴</mi><mi mathvariant="normal">方</mi><mi mathvariant="normal">向</mi><mo stretchy="false">)</mo></mrow></msub></mrow></mfrac></mrow><annotation encoding="application/x-tex">召回率=\frac{TP_{分类结果正确的正样本(圆形图中左上角)}}{(TP + FN)_{真实的正样本(圆形图中的北半球，横轴方向)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mord cjk_fallback">召</span><span class="mord cjk_fallback">回</span><span class="mord cjk_fallback">率</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.650611em;vertical-align:-0.60364em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.046971em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">真</span><span class="mord cjk_fallback mtight">实</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">北</span><span class="mord cjk_fallback mtight">半</span><span class="mord cjk_fallback mtight">球</span><span class="mord cjk_fallback mtight">，</span><span class="mord cjk_fallback mtight">横</span><span class="mord cjk_fallback mtight">轴</span><span class="mord cjk_fallback mtight">方</span><span class="mord cjk_fallback mtight">向</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5686400000000003em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.13889em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5357142857142856em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord cjk_fallback mtight">分</span><span class="mord cjk_fallback mtight">类</span><span class="mord cjk_fallback mtight">结</span><span class="mord cjk_fallback mtight">果</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">确</span><span class="mord cjk_fallback mtight">的</span><span class="mord cjk_fallback mtight">正</span><span class="mord cjk_fallback mtight">样</span><span class="mord cjk_fallback mtight">本</span><span class="mopen mtight">(</span><span class="mord cjk_fallback mtight">圆</span><span class="mord cjk_fallback mtight">形</span><span class="mord cjk_fallback mtight">图</span><span class="mord cjk_fallback mtight">中</span><span class="mord cjk_fallback mtight">左</span><span class="mord cjk_fallback mtight">上</span><span class="mord cjk_fallback mtight">角</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3694857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.60364em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>），TP不变，FP增大，而召回率R没有变，显然ROC曲线更稳定一些。</li></ul><h5 id="2-动图显示表现优秀-表现一般-表现很差的三种分类器对应的pr曲线和roc曲线"><a class="markdownIt-Anchor" href="#2-动图显示表现优秀-表现一般-表现很差的三种分类器对应的pr曲线和roc曲线"></a> ② 动图显示表现优秀、表现一般、表现很差的三种分类器对应的PR曲线和ROC曲线。</h5><p>以下动图参考自：《<a href="https://zhuanlan.zhihu.com/p/92218196">P-R曲线和ROC曲线理解</a>》，正样本对应下图中的红色曲线(病人分布)，负样本对应下图中的蓝色曲线(健康人群分布)</p><ul><li><p>表现优秀的分类器，其中正负样本分布基本不重合，因此分类器可以很好地判定，此时PR和ROC曲线下的面积都很大。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/recsys12-good.gif" alt="表现优秀的分类器" /></p></li><li><p>表现很差的分类器，其中正负样本分布全部重合，因此分类器无法正确判定，此时PR和ROC曲线下面积都很小。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/recsys12-bad.gif" alt="表现很差的分类器" /></p></li><li><p>表现一般的分类器，其中正负样本重合一小部分，因此分类器在非重合场景下能够正确判定，重合场景下错误率较高。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/recsys12-common.gif" alt="表现一般的分类器" /></p></li></ul><h3 id="3-在线ab测试"><a class="markdownIt-Anchor" href="#3-在线ab测试"></a> 3. 在线A/B测试</h3><h4 id="1ab测试原理"><a class="markdownIt-Anchor" href="#1ab测试原理"></a> （1）A/B测试原理</h4><p>A/B 测试又被称为“分流测试”或“分桶测试”，它通过把被测对象随机分成 A、B 两组，分别对它们进行对照测试的方法得出实验结论。具体到推荐模型测试的场景下，它的流程是这样的：</p><p>先将用户随机分成实验组和对照组，然后给实验组的用户施以新模型，给对照组的用户施以旧模型，再经过一定时间的测试后，计算出实验组和对照组各项线上评估指标，来比较新旧模型的效果差异，最后挑选出效果更好的推荐模型。</p><h4 id="2选择ab测试的原因"><a class="markdownIt-Anchor" href="#2选择ab测试的原因"></a> （2）选择A/B测试的原因</h4><p>① <strong>离线评估无法完全还原线上的工程环境</strong>。一般来讲，离线评估往往不考虑线上环境的延迟、数据丢失、标签数据缺失等情况，或者说很难还原线上环境的这些细节。因此，离线评估环境只能说是理想状态下的工程环境，得出的评估结果存在一定的失真现象。</p><p>② <strong>线上系统的某些商业指标在离线评估中无法计算</strong>。 离线评估一般是针对模型本身进行评估的，无法直接获得与模型相关的其他指标，特别是商业指标。像我们上节课讲的，离线评估关注的往往是ROC曲线、PR曲线的改进，而线上评估却可以全面了解推荐模型带来的用户点击率、留存时长、PV访问量这些指标的变化。</p><p>③ <strong>离线评估无法完全消除数据有偏（Data Bias）现象的影响</strong>。 什么叫“数据有偏”呢？因为离线数据都是系统利用当前算法生成的数据，因此这些数据本身就不是完全客观中立的，它是用户在当前模型下的反馈。所以说，用户本身有可能已经被当前的模型“带跑偏了”，你再用这些有偏的数据来衡量你的新模型，得到的结果就可能不客观。</p><h4 id="3ab测试核心原则"><a class="markdownIt-Anchor" href="#3ab测试核心原则"></a> （3）A/B测试核心原则</h4><p>① 怎样才能对用户进行一个公平公正的分桶呢？如果有多组实验在同时做 A/B 测试，怎样做才能让它们互不干扰？</p><ul><li>分桶：我们需要注意的是<strong>样本的独立性和分桶过程的无偏性</strong>。这里的“独立性”指的是同一个用户在测试的全程只能被分到同一个桶中。“无偏性”指的是在分桶过程中用户被分到哪个实验桶中应该是一个纯随机的过程。</li><li>分层：<strong>层与层之间的流量“正交”，同层之间的流量“互斥”</strong>。</li></ul><p>② 层与层之间的流量“正交”：**层与层之间的独立实验的流量是正交的，一批实验用的流量穿越每层实验时，都会再次随机打散，然后再用于下一层的实验。**看下示意图：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/e0da06ee473e3f551ac2cyy987957d7b.jpeg" style="zoom:33%;" /><p>假设，在一个 X 层的实验中，流量被随机平均分为 X1（蓝色）和 X2（白色）两部分。当它们穿越到 Y 层的实验之后，X1 和 X2 的流量会被随机且均匀地分配给 Y 层的两个桶 Y1 和 Y2。</p><p>如果 Y1 和 Y2 的 X 层流量分配不均匀，那么 Y 层的样本就是有偏的，Y 层的实验结果就会被 X 层的实验影响，也就无法客观地反映 Y 层实验组和对照组变量的影响。</p><p>③ 同层之间的流量“互斥”：</p><ul><li>如果同层之间进行多组 A/B 测试，不同测试之间的流量不可以重叠，这是第一个“互斥”；</li><li>一组 A/B 测试中实验组和对照组的流量是不重叠的，这是第二个“互斥”。</li></ul><p>不同测试之间以及A/B测试的实验组和对照组之间的用户是不重叠的。特别是对推荐系统来说，用户体验的一致性是非常重要的。也就是说我们不可以让同一个用户在不同的实验组之间来回“跳跃”，这样会严重损害用户的实际体验，也会让不同组的实验结果相互影响。因此在 A/B 测试中，保证同一用户始终分配到同一个组是非常有必要的。</p><h4 id="4ab测试评估指标"><a class="markdownIt-Anchor" href="#4ab测试评估指标"></a> （4）A/B测试评估指标</h4><p><strong>A/B 测试的指标应该与线上业务的核心指标保持一致。</strong></p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117191553437.png" style="zoom:50%;" /><h3 id="4-推荐系统评估体系"><a class="markdownIt-Anchor" href="#4-推荐系统评估体系"></a> 4. 推荐系统评估体系</h3><h4 id="1什么是推荐系统评估体系"><a class="markdownIt-Anchor" href="#1什么是推荐系统评估体系"></a> （1）什么是推荐系统评估体系</h4><p>由多种不同的评估方式组成的、兼顾效率和正确性的，一套用于评估推荐系统的解决方案。典型评估体系示意图如下：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117192433919.png" style="zoom:50%;" /><p>处于最底层的是传统的离线评估方法，比如 Holdout 检验、交叉检验等，往上是离线 Replay 评估方法，再往上是一种叫 Interleaving 的线上测试方法，最后是线上 A/B 测试。</p><p>越是底层的方法就会承担越多筛选掉改进思路的任务，这时候“评估效率”就成了更关键的考虑因素；</p><p>随着候选模型被一层层筛选出来，越接近正式上线的阶段，评估方法对评估“正确性”的要求就越严格。</p><h4 id="2实例讲解模型筛选过程"><a class="markdownIt-Anchor" href="#2实例讲解模型筛选过程"></a> （2）实例讲解模型筛选过程</h4><p>假设，现在有 30 个待筛选的模型，如果所有模型都直接进入线上 A/B 测试的阶段进行测试，所需的测试样本是海量的，由于线上流量有限，测试的时间会非常长。但如果我们把测试分成两个阶段，第一个阶段先进行初筛，把 30 个模型筛选出可能胜出的 5 个，再只对这 5 个模型做线上 A/B 测试，所需的测试流量规模和测试时间长度都会大大减少。这里的初筛方法，就是我们在评估体系中提到的<strong>离线评估</strong>、<strong>离线 Replay</strong> 和<strong>在线 Interleaving</strong> 等方法。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/da57fcb9287b31ec436a4dce87f11c1b.jpg" style="zoom:50%;" /><h4 id="3netflix-的-replay-评估方法实践"><a class="markdownIt-Anchor" href="#3netflix-的-replay-评估方法实践"></a> （3）Netflix 的 Replay 评估方法实践</h4><p>Netflix 为了进行离线 Replay 的实验，建立了一整套从<strong>数据生成</strong>到<strong>数据处理</strong>再到<strong>数据存储</strong>的数据处理架构，并给它起了一个很漂亮的名字，叫做时光机（Time Machine）。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/3e41699be3fa13709c7e898c4f07bf64.jpg" style="zoom:50%;" /><p>上图是时光机的架构，图中最主要的就是 <strong>Snapshot Jobs（数据快照）<strong>模块。它是一个每天执行的 Spark 程序，它做的主要任务就是</strong>把当天的各类日志、特征、数据整合起来</strong>，形成当天的、供模型训练和评估使用的样本数据。它还会以日期为目录名称，将样本快照数据保存在分布式文件系统 S3 中（Snapshots），再对外统一提供 API（Batch APIs），供其他模型在训练和评估的时候按照时间范围方便地获取。</p><p>Snapshot Jobs 主任务的源数据是它上方的 <strong>Context Set 模块</strong>和左边的 <strong>Prana 模块</strong>。</p><p><strong>Context Set 模块</strong>负责保存<strong>所有的历史当天的环境信息</strong>。 环境信息主要包括两类：一类是存储在 Hive 中的场景信息，比如用户的资料、设备信息、物品信息等数据；另一类是每天都会发生改变的一些统计类信息，包括物品的曝光量、点击量、播放时长等信息。</p><p><strong>Prana 模块</strong>负责处理<strong>每天的系统日志流</strong>。 系统日志流指的是系统实时产生的日志，它包括用户的观看历史（Viewing History）、用户的推荐列表（My List）和用户的评价（Ratings）等。这些日志从各自的服务（Service）中产生，由 Netflix 的统一数据接口 Prana 对外提供服务。</p><p>Snapshot Jobs 这个核心模块每天的任务就是，通过 Context Set 获取场景信息，通过 Prana 获取日志信息，再经过整合处理、生成特征之后，保存当天的数据快照到 S3。</p><p>在生成每天的数据快照后，使用 Replay 方法进行离线评估就不再是一件困难的事情了，因为我们没有必要在 Replay 过程中进行烦琐的特征计算，直接使用当天的数据快照就可以了。</p><h4 id="4interleaving-评估方法"><a class="markdownIt-Anchor" href="#4interleaving-评估方法"></a> （4）Interleaving 评估方法</h4><p>① <strong>意义</strong>：首先，它是和 A/B 测试一样的在线评估方法，能够得到在线评估指标；其次，它提出的目的是为了比传统的 A/B 测试用更少的资源，更快的速度得到在线评估的结果。</p><p>② <strong>传统A/B过程</strong>：把用户随机分成两组。一组接受当前的推荐模型 A 的推荐结果，这一组被称为对照组 。另一组接受新的推荐模型 B 的推荐结果，这组被成为实验组。</p><p>③ <strong>Interleaving过程</strong>：<strong>只需要一组用户</strong>，这些用户会收到模型 A 和模型 B 的混合结果。也就是说，用户会在一个推荐列表里同时看到模型 A 和模型 B 的推荐结果。在评估的过程中，Interleaving 方法通过分别累加模型 A 和模型 B 推荐物品的效果，来得到模型 A 和 B 最终的评估结果。</p><p>④ <strong>两者形象化的比较：</strong></p><img src="https://gitee.com/acdance/img/raw/master/blogs/e2257304c4e450138f81ea9460ddef29.jpg"  style="zoom:50%;" /><p>⑤ 以相等的概率让模型 A 和模型 B 产生的物品交替领先。这就像在野球场打球的时候，两个队长会先通过扔硬币的方式决定谁先选人，再交替来选择队员。</p><p>⑥ 最后，我们要清楚推荐列表中的物品到底是由模型 A 生成的，还是由模型 B 生成的，然后统计出所有模型 A 物品的综合效果，以及模型 B 物品的综合效果，然后进行对比。这样，模型评估过程就完成了。</p><p>⑦ 在测试一些用户级别而不是模型级别的在线指标时，我们就不能用 Interleaving 方法。比如用户的留存率，用户从试用到付费的转化率等，由于 Interleaving 方法同时使用了对照模型和实验模型的结果，我们就不清楚到底是哪个模型对这些结果产生了贡献。但是在测试 CTR、播放量、播放时长这些指标时，Interleaving 就可以通过累加物品效果得到它们。这个时候，它就能很好地替代传统的 A/B 测试了。</p><h4 id="5interleaving方法的优点与缺点"><a class="markdownIt-Anchor" href="#5interleaving方法的优点与缺点"></a> （5）Interleaving方法的优点与缺点</h4><p>优点：</p><p>① Interleaving方法的<strong>灵敏度高</strong>于A/B测试。Netflix的实验表明，Interleaving方法利用<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">10^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>个样本就能判定算法A是否好于算法B，但是A/B测试则需要<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>个样本。</p><p>② Netflix的实验同时表明Interleaving方法的指标与A/B测试指标之间的<strong>相关性是非常强的</strong>，也就意味着在Interleaving方法中胜出的算法也极有可能在A/B测试中胜出。</p><p>缺点：</p><p>① Interleaving的<strong>工程实现框架比A/B测试复杂</strong>，因为Interleaving方法的实验逻辑和业务逻辑耦合在一起，还需要将大量辅助性数据标识添加到整个数据流中。</p><p>② Interleaving方法只是对“用户对算法推荐结果偏好程度”的相对测量，<strong>不能得出一个算法真实的表现</strong>。比如要想知道算法A能够将用户整体的观看时长提高多少？留存率提高多少？这些都是无法用Interleaving方法得到的。<strong>因此通常用的方法就是Interleaving+A/B测试两阶段实验结构</strong>。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><p>《<a href="https://zhuanlan.zhihu.com/p/92218196">P-R曲线和ROC曲线理解</a>》  – 知乎</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/9f710c67.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-离线评估&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-离线评估&quot;&gt;&lt;/a&gt; 1. 离线评估&lt;/h3&gt;
&lt;h4 id=&quot;1介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1介绍&quot;&gt;&lt;/a&gt; （1）</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="模型评估" scheme="https://www.notlate.net/tags/%E6%A8%A1%E5%9E%8B%E8%AF%84%E4%BC%B0/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记11：推荐模型融会贯通</title>
    <link href="https://www.notlate.net/posts/e1a19c9f.html"/>
    <id>https://www.notlate.net/posts/e1a19c9f.html</id>
    <published>2021-01-05T14:24:40.000Z</published>
    <updated>2021-03-18T15:04:38.578Z</updated>
    
    <content type="html"><![CDATA[<img src="9364b714305ba0b26791db2805d5983c.jpg" style="zoom:50%;" />]]></content>
    
    
      
      
    <summary type="html">&lt;img src=&quot;9364b714305ba0b26791db2805d5983c.jpg&quot; style=&quot;zoom:50%;&quot; /&gt;
</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记10：经典的深度学习推荐模型</title>
    <link href="https://www.notlate.net/posts/e066db0.html"/>
    <id>https://www.notlate.net/posts/e066db0.html</id>
    <published>2021-01-05T13:44:40.000Z</published>
    <updated>2021-03-18T15:04:38.578Z</updated>
    
    <content type="html"><![CDATA[<p>特征组合和特征交叉问题非常常见，特征的种类非常多，特征交叉的复杂程度也要大得多。解决这类问题的关键，就是<strong>模型对于特征组合和特征交叉的学习能力</strong>，因为它决定了模型对于未知特征组合样本的预测能力，而这对于复杂的推荐问题来说，是决定其推荐效果的关键点之一。</p><p>那特征交叉与深度学习模型的拟合能力有什么关系呢？以MLP为例：</p><p>① MLP具有拟合任意函数的能力，是建立在MLP有任意多层网络，以及任意多个神经元的前提下的。</p><p>② 在训练资源有限，调参时间有限的现实情况下，MLP对于特征交叉的处理其实还比较低效。因为MLP是通过 concatenate层把所有特征连接在一起成为一个特征向量的，这里面没有特征交叉，两两特征之间没有发生任何关系。</p><p>③ 在我们有先验知识的情况下，人为地加入一些负责特征交叉的模型结构，其实对提升模型效果会非常有帮助。这就是深度学习模型要加强特征交叉能力的原因。</p><p>接下来介绍下经典深度学习推荐模型的发展历程。</p><h3 id="1-autorec-基础结构"><a class="markdownIt-Anchor" href="#1-autorec-基础结构"></a> 1. AutoRec - 基础结构</h3><h4 id="1介绍"><a class="markdownIt-Anchor" href="#1介绍"></a> （1）介绍</h4><p>2015年，澳大利亚国立大学提出的AutoRec，将自编码器（AutoEncoder）的思想与协同过滤结合，提出了一种单隐层神经网络推荐模型，结构简单明了，清晰易懂。</p><p>利用协同过滤（CF）中的共现矩阵，完成物品向量或者用户向量的自编码，再利用自编码的结果到用户对物品的预估评分，进行推荐排序。</p><p>自编码器的本质是起到降维作用，把稀疏的高维转成稠密的低维。</p><h4 id="2模型结构"><a class="markdownIt-Anchor" href="#2模型结构"></a> （2）模型结构</h4><p><img src="https://gitee.com/acdance/img/raw/master/blogs/v2-ad0a881a7fc9683baf4f60e436ea7518_1440w.jpg" alt="AutoRec结构图" /></p><p>结构非常简单，就是一个单隐层的自编码器，也就是输入等于输出的结构。</p><p>① 输入：共现矩阵中物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msup><mi>r</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{r^{(i)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.097em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.383em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>表示物品向量维数。</p><p>② 隐层：蓝色圆圈表示<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo stretchy="false">(</mo><mi>k</mi><mo>&lt;</mo><mo>&lt;</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">k(k &lt;&lt; m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mclose">)</span></span></span></span>维隐层神经元，向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">V</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{V}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span></span></span></span>表示输入到隐层的权重参数矩阵。</p><p>③ 输出：与输入相等，其中向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">W</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{W}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span></span></span></span>表示隐层到输出的权重参数矩阵。</p><p>用数学形式表示如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>r</mi><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">W</mi><mo>⋅</mo><mi>g</mi><mo stretchy="false">(</mo><mi mathvariant="bold-italic">V</mi><mover accent="true"><mi>r</mi><mo>⃗</mo></mover><mo>+</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(r; \theta) = f(\boldsymbol{W} \cdot g(\boldsymbol{V} \vec{r} + \mu) + b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">b</span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mi mathvariant="normal">，</mi><mi>g</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\cdot)，g(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>分别是输入层神经元和隐层神经元的激活函数。</p><h4 id="3目标函数"><a class="markdownIt-Anchor" href="#3目标函数"></a> （3）目标函数</h4><p>目标函数形式如下，后边一项是L2正则化项，目的是为了防止过拟合：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi></mo><mi>θ</mi></munder><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><msup><mi>r</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>⃗</mo></mover><mo>−</mo><mi>h</mi><mo stretchy="false">(</mo><mover accent="true"><msup><mi>r</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>⃗</mo></mover><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>ο</mi><mn>2</mn></msubsup><mo>+</mo><mfrac><mi>λ</mi><mn>2</mn></mfrac><mo>⋅</mo><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold-italic">W</mi><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>F</mi><mn>2</mn></msubsup><mo>+</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi mathvariant="bold-italic">V</mi><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>F</mi><mn>2</mn></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\underset{\theta}{min} \sum^{n}_{i=1} || \vec{r^{(i)}} - h(\vec{r^{(i)}}; \theta) ||^{2}_{\omicron} + \frac{\lambda}{2} \cdot (||\boldsymbol{W}||^{2}_{F} + ||\boldsymbol{V}||^{2}_{F})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathdefault">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.097em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.383em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.347em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.097em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.383em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">ο</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">λ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">W</span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.25555em;">V</span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>F</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">||\cdot||^{2}_{F}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.089439em;vertical-align:-0.275331em;"></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">F</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span>表示是L2范数，训练方法用梯度反向传播即可。</p><h4 id="4推荐过程"><a class="markdownIt-Anchor" href="#4推荐过程"></a> （4）推荐过程</h4><p>① 当输入物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msup><mi>r</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{r^{(i)}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.097em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.097em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.383em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span>时，模型的输出向量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mover accent="true"><msup><mi>r</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>⃗</mo></mover><mo separator="true">;</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(\vec{r^{(i)}}; \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.347em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.097em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.383em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>就是所有用户对物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的评分。<!-- 没懂 --></p><p>② 第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>维就是用户<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>对物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>的评分。</p><p>③ 遍历输入物品向量，就可以得到用户<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>对所有物品的评分列表。</p><p>④ 把评分列表排序得到推荐列表。</p><h4 id="5特点"><a class="markdownIt-Anchor" href="#5特点"></a> （5）特点</h4><p>① 优点：使用了单隐层神经元，具有一定的泛化性。</p><p>② 缺点：因为结构比较简单，所以表达能力不足。</p><p>③ 意义：拉开了使用深度学习的思想解决推荐问题的序幕，为复杂的深度学习网络构建提供了思路。</p><h3 id="2-deep-crossing-经典结构"><a class="markdownIt-Anchor" href="#2-deep-crossing-经典结构"></a> 2. Deep Crossing - 经典结构</h3><h4 id="1介绍-2"><a class="markdownIt-Anchor" href="#1介绍-2"></a> （1）介绍</h4><p>2016年，微软提出了<a href="https://www.kdd.org/kdd2016/papers/files/adf0975-shanA.pdf">Deep Crossing</a>，是一次深度学习架构在推荐系统中的完整应用。相比AutoRec模型过于简单的网络结构，Deep Crossing模型完整的解决了从特征工程、稀疏向量稠密化、深层神经网络目标优化等一系列问题。微软的应用场景是搜索引擎Bing中的搜索广告推荐场景。目标是在返回的搜索结果中带有相关广告，尽可能增加广告的点击率，准确地预测其点击率，并以此作为广告排序的指标之一。</p><h4 id="2模型结构-2"><a class="markdownIt-Anchor" href="#2模型结构-2"></a> （2）模型结构</h4><p>端到端训练需要解决的问题如下：</p><p>① 解决离散类特征编码后过于稀疏问题</p><p>② 解决特征自动交叉组合问题</p><p>③ 解决在输出层中完成优化目标的问题。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210312141846107.png" alt="Deep Crossing结构图" /></p><p>模型主要由4层组成：</p><p>① Embedding层：作用是将稀疏的类别型特征转成稠密向量，结构上主要以全连接层（FC）为主。就Embedding技术本身而言，已经衍生除了Word2vec、Graph Embedding等多种不同的Embedding方法，请参考《<a href="https://notlate.net/posts/ba149af9.html">深度学习推荐系统-笔记05：Embedding技术</a>》。数值型特征不需要编码，直接进入Stacking层。</p><p>② Stacking层：作用比较简单，把不同的Embedding特征和数值型特征拼接在一起，形成完整的特征向量。结构上通常是concat。</p><p>③ Multiple Residual Units层：作用是对特征向量各个维度进行充分交叉组合，是模型能够挖掘到更多的非线性特征和组合特征的信息，提高模型的表达能力。结构上主要是引入了著名的残差结构（详细可以阅读《<a href="https://zhuanlan.zhihu.com/p/42706477">详解残差网络-知乎</a>》）的多层感知机。</p><p>④ Scoring层：输出层，作用是拟合优化目标，对于CTR预估这种二分类问题，结构往往使用LR结构；对于类似图像分类等多分类问题，结构往往采用Softmax结构。</p><h4 id="3损失函数"><a class="markdownIt-Anchor" href="#3损失函数"></a> （3）损失函数</h4><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>o</mi><mi>g</mi><mi>l</mi><mi>o</mi><mi>s</mi><mi>s</mi><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>p</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">logloss=-\frac{1}{N}\sum_{i=1}^{N}(y_ilog(p_i)+(1-y_i)log(1-p_i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault">s</span><span class="mord mathdefault">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p>这个是损失函数是针对二分类的任务，实际任务中可以灵活替换。</p><h4 id="4特点"><a class="markdownIt-Anchor" href="#4特点"></a> （4）特点</h4><p>①  基于Embedding+MLP架构设计</p><p>② 特征交叉层复杂度较高</p><h3 id="3-neuralcf-cf与深度学习结合"><a class="markdownIt-Anchor" href="#3-neuralcf-cf与深度学习结合"></a> 3. NeuralCF - CF与深度学习结合</h3><h4 id="1介绍-3"><a class="markdownIt-Anchor" href="#1介绍-3"></a> （1）介绍</h4><p>CF（协同过滤）发展出了矩阵分解技术，就是把共现矩阵分解为用户向量矩阵和物品向量矩阵。在预测时，计算用户隐向量和物品隐向量的内积，作为用户对物品的评分预测。2017年，新加坡国立大学研究员提出了基于深度学习的协同过滤模型NeuralCF（[Neural Collaborative Filtering](<a href="http://184pc128.csie.ntnu.edu.tw/presentation/19-10-18/Neural">http://184pc128.csie.ntnu.edu.tw/presentation/19-10-18/Neural</a> Collaborative Filtering.pdf)）。</p><h4 id="2模型结构-3"><a class="markdownIt-Anchor" href="#2模型结构-3"></a> （2）模型结构</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/7063d223da013845534d3c84b7ab9409-20210116205913169.jpg" alt="NeuralCF模型结构图" style="zoom:33%;" /><p>左图是矩阵分解技术的网络化表示，右图是NeuralCF结构，很显然区别就是用神经网络代替了矩阵分解中的内积操作（那么原来的内积操作是什么作用？上边已经介绍过了，就是用于计算用户对所有物品的评分列表，然后排序生成推荐列表）。</p><p>替换掉内积的好处是什么呢？① 让用户向量和物品向量做更充分的交叉，得到更多的有用价值的特征组合信息。② 引入更多的非线性特征，让模型的表达能力更强。</p><p>按照这种思路，用户和物品向量的互操作可以被替换成任意的互操作，这就是“广义矩阵分解”模型。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/webp" alt="NeuralCF混合模型" /></p><p>进一步分析，还可以把多种互操作得到的特征向量拼接起来，再送到输出层进行目标拟合。如上图，用户和物品向量分别经过GMF层和MLP层的互操作之后拼接起来，再送入输出层NeuralCF结构进行目标拟合。这样让模型具有了更强的特征组合和非线性能力。</p><h4 id="3目标函数-2"><a class="markdownIt-Anchor" href="#3目标函数-2"></a> （3）目标函数</h4><p>输出层使用softmax激活函数输出多分类的概率分布，在分类问题中，softmax往往和交叉熵损失函数一起使用，因为交叉熵刻画了预测分类与真实结果之间的相似度。先定义似然函数（含义是表示物品<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>和用户<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">u</span></span></span></span>的相似性）如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><mi mathvariant="script">Y</mi><mo separator="true">,</mo><msup><mi mathvariant="script">Y</mi><mo>−</mo></msup><mo>∣</mo><mi mathvariant="bold-italic">P</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">Q</mi><mo separator="true">,</mo><msub><mi mathvariant="normal">Θ</mi><mi>f</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo>^</mo></mover><munder><mo>∏</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∈</mo><msup><mi mathvariant="script">Y</mi><mo>−</mo></msup></mrow></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>j</mi></mrow></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p( \mathcal{Y}, \mathcal{Y^-} \mid \boldsymbol{P},\boldsymbol{Q},\Theta_f)=\prod_{(u,i)\in \mathcal{Y}} \hat{y_{ui}} \prod_{(u,i)\in \mathcal{Y^-}}(1- \hat{y_{uj}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.071331em;vertical-align:-0.25em;"></span><span class="mord mathdefault">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.821331em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">Q</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="script">Y</mi><mo separator="true">,</mo><msup><mi mathvariant="script">Y</mi><mo>−</mo></msup></mrow><annotation encoding="application/x-tex">\mathcal{Y}, \mathcal{Y^-}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9657709999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span></span>分别表示观测样本集和负样本（未观测到的样本）集合； <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">P</mi><mo separator="true">,</mo><mi mathvariant="bold-italic">Q</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{P},\boldsymbol{Q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol" style="margin-right:0.15972em;">P</span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">Q</span></span></span></span></span></span>分别表示用户和物品隐向量矩阵； <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi mathvariant="normal">Θ</mi><mi>f</mi></msub></mrow><annotation encoding="application/x-tex">\Theta_f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord">Θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示交互操作函数的模型参数 ； <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y_{ui}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>表示预测输出，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub></mrow><annotation encoding="application/x-tex">y_{ui}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是标签值。</p><p>因此目标函数就是对上式相似性（概率值）进行等价变换，最小化其负对数，即最小化负对数似然函数，形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="script">Y</mi></mrow></munder><mi>l</mi><mi>o</mi><mi>g</mi><mtext> </mtext><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo>^</mo></mover><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>∈</mo><msup><mi mathvariant="script">Y</mi><mo>−</mo></msup></mrow></munder><mi>l</mi><mi>o</mi><mi>g</mi><mtext> </mtext><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>j</mi></mrow></msub><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>∈</mo><mi mathvariant="script">Y</mi><mtext> </mtext><mo>∪</mo><msup><mi mathvariant="script">Y</mi><mo>−</mo></msup></mrow></munder><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mtext> </mtext><mi>l</mi><mi>o</mi><mi>g</mi><mtext> </mtext><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo>^</mo></mover><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo stretchy="false">)</mo><mtext> </mtext><mi>l</mi><mi>o</mi><mi>g</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mrow><mi>u</mi><mi>i</mi></mrow></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = -\sum_{(u,i)\in \mathcal{Y}}log \: \hat{y_{ui}}-\sum_{(u,j)\in \mathcal{Y^-}}log\:(1 - \hat{y_{uj}})=-\sum_{(u,i)\in \mathcal{Y}\,\cup \mathcal{Y^-}} y_{ui}\,log\, \hat{y_{ui}}+(1-y_{ui})\, log(1-\hat{y_{ui}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.5660100000000003em;vertical-align:-1.516005em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.808995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathdefault mtight">u</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span></span><span class="mspace mtight" style="margin-right:0.19516666666666668em;"></span><span class="mbin mtight">∪</span><span class="mord mtight"><span class="mord mtight"><span class="mord mathcal mtight" style="margin-right:0.08222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7026642857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">−</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.516005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">u</span><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;">^</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><h4 id="4特点-2"><a class="markdownIt-Anchor" href="#4特点-2"></a> （4）特点</h4><p>① NeuralCF实际提出了一种模型框架，基于用户和物品向量这个Embedding层，利用不同的互操作进行特征的交叉组合。</p><p>② 实践中并不是模型结构越复杂、特征越多越好。因为过于复杂之后容易出现过拟合和难收敛的问题。</p><p>③ 局限性：NeuralCF基于CF的思想，因此也没有引入更多其他类型的特征，比如用户和物品的属性信息等。</p><h4 id="5泛化双塔模型"><a class="markdownIt-Anchor" href="#5泛化双塔模型"></a> （5）泛化（双塔模型）</h4><p>NeuralCF 的模型结构之中，蕴含了一个非常有价值的思想，就是我们可以把模型分成用户侧模型和物品侧模型两部分，然后用互操作层把这两部分联合起来，产生最后的预测得分。</p><p>这里的用户侧模型结构和物品侧模型结构，可以是简单的 Embedding 层，也可以是复杂的神经网络结构，最后的互操作层可以是简单的点积操作，也可以是比较复杂的 MLP 结构。</p><p>但只要是这种用户侧模型 + 物品侧模型 + 互操作层的模型结构，我们把它统称为“双塔模型”结构。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/66606828b2c80a5f4ea28d60762e82cf.jpg" alt="双塔模型结构" style="zoom:33%;" /><p>2019年，YouTube发表了论文《<a href="https://storage.googleapis.com/pub-tools-public-publication-data/pdf/6c8a86c981a62b0126a11896b7f6ae0dae4c3566.pdf">Sampling-Bias-Corrected Neural Modeling for Large Corpus Item Recommendations</a>》，展示了其在构建用于召回层的双塔模型时，分别在用户侧和物品侧输入了多种不同的特征，结构图如下：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/e2603a22ec91a9f00be4b73feyy1f987.jpg" style="zoom:33%;" alt="YouTube召回双塔模型结构"/><p>① 用户侧特征：包括了用户正在观看的视频 ID、频道 ID（图中的 seed features）、该视频的观看数、被喜欢的次数，以及用户历史观看过的视频 ID 等等</p><p>② 物品侧特征：包括了候选视频的 ID、频道 ID、被观看次数、被喜欢次数等等。</p><p>③ 输出：经过了多层 ReLU 神经网络的学习之后，双塔模型最终通过 softmax 输出层连接两部分，输出最终预测分数。</p><p>④ 优点：易上线、易服务。物品塔和用户塔最顶端的那层神经元，那层神经元的输出其实就是一个全新的物品 Embedding 和用户 Embedding。不用把整个模型都部署上线，只需要预存物品塔和用户塔的输出，以及在线上实现互操作层即可。</p><h4 id="6总结"><a class="markdownIt-Anchor" href="#6总结"></a> （6）总结</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117112017943.png" style="zoom:50%;" alt="NeuralCF架构总结"/><p>① 能否在用户塔和物品塔中加入context信息？<strong>不建议</strong>。把context特征放进user塔或者item塔，那么离线生成user embedding或者item embedding的数量就要翻好多倍。</p><p>② 把context信息单独成塔？<strong>有点得不偿失</strong>，因为线上的context特征，比如时间，地点变化会非常快。所以理想的方式就是做实时inference。</p><h3 id="4-pnn"><a class="markdownIt-Anchor" href="#4-pnn"></a> 4. PNN</h3><h4 id="1介绍-4"><a class="markdownIt-Anchor" href="#1介绍-4"></a> （1）介绍</h4><p>NeuralCF模型的局限性就是只能使用用户和物品向量，如果加入更多组特征向量呢？如何设计特征交互方法？2016年，上海交通大学的研究人员提出的PNN（<a href="https://ieeexplore.ieee.org/abstract/document/7837964">Product-based Neural Networks</a>）模型，给出了几种设计特征交互方式的思路。</p><h4 id="2模型结构-4"><a class="markdownIt-Anchor" href="#2模型结构-4"></a> （2）模型结构</h4><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210312195035963.png" alt="PNN网络结构图" /></p><p>相比Deep Crossing模型，PNN模型在在整体结构上没有区别，唯一的不同是PNN模型用乘积层（Product Layer）替代了Deep Crossing的Stacking层。就是Deep Crossing的用最简单的concat拼接Embedding特征和数值型特征，而PNN的思路则是使用Product操作进行两两交互，更有针对性的获取特征之间的交叉信息。</p><p>另外，PNN模型的输入不仅包括用户和物品信息，还可以有更多不同形式、不同类别的特征，通过Embedding层统一编码成长度一致的稠密特征向量。</p><h4 id="3损失函数-2"><a class="markdownIt-Anchor" href="#3损失函数-2"></a> （3）损失函数</h4><p>同样是二分类的逻辑回归函数。</p><h4 id="4特征交叉方式"><a class="markdownIt-Anchor" href="#4特征交叉方式"></a> （4）特征交叉方式</h4><p>如PNN结构图中Product层分为两部分：</p><p>① z部分是直接把Embedding结果线性拼接起来；</p><p>② p部分是对各特征向量进行两两的内积操作或者外积操作，因为是两两操作，所以p部分总共有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mfrac><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>N</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\frac{N(N-1)}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>个圆圈（神经元）。</p><h5 id="假如p部分是内积操作称为ipnn模型"><a class="markdownIt-Anchor" href="#假如p部分是内积操作称为ipnn模型"></a> 假如p部分是内积操作（称为IPNN模型）</h5><p>每个圆圈（神经元）是一个标量，和z部分特征向量直接拼接起来输入下一层即可。</p><h5 id="假如p部分是外积操作称为opnn模型"><a class="markdownIt-Anchor" href="#假如p部分是外积操作称为opnn模型"></a> 假如p部分是外积操作（称为OPNN模型）</h5><p>每个圆圈（神经元）是一个方阵，因此每个神经元需要搭配一个可学习的参数方阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span>，两个方阵对应元素相乘之后，再把整个方阵累加成一个标量，剩下的就和内积操作一样了。</p><p>但是这样的话，问题的复杂度提升巨大，于是论文介绍了一种降维方法，把所有Embedding向量叠加，然后叠加后的特征向量通过外积互操作得到矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="bold-italic">p</mi></mrow><annotation encoding="application/x-tex">\boldsymbol{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.63888em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">p</span></span></span></span></span></span>。然后再和L1层的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个权重方阵对应元素相乘再累加成标量，就得到了一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>D</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">D_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>维的输出向量。</p><p><strong>但是，并不建议上述降维方法，因为把不同特征向量对应维度累加，容易丢失或模糊很多有价值的信息，比如“年龄”和“地域”两个特征向量不在同一个向量空间中，显然不具备任何可比性，因为不应该直接操作。</strong></p><h4 id="5特点-2"><a class="markdownIt-Anchor" href="#5特点-2"></a> （5）特点</h4><p>① 强调了特征之间的交叉方式是多样化的，有效的交叉方式会更有利于捕获特征的交叉信息。</p><p>② 局限性：外积操作为了简化操作，对特征进行了无差别的交叉、累加，忽略了原始特征中包含的高价值信息。</p><h3 id="5-widedeep-广泛应用的结构记忆能力和泛化能力"><a class="markdownIt-Anchor" href="#5-widedeep-广泛应用的结构记忆能力和泛化能力"></a> 5. Wide&amp;Deep - 广泛应用的结构（记忆能力和泛化能力）</h3><h4 id="1介绍-5"><a class="markdownIt-Anchor" href="#1介绍-5"></a> （1）介绍</h4><p>2016年，谷歌提出了<a href="https://doi.org/10.1145/2988450.2988454">Wide&amp;Deep模型</a>，由单层的Wide部分和多层的Deep部分组成的混合模型。其影响力一直延续至今，并且衍生出了大量的同结构的混合模型。</p><h4 id="2模型结构-5"><a class="markdownIt-Anchor" href="#2模型结构-5"></a> （2）模型结构</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/fb17112c951ebb2a515f12dace262de0.jpg" alt="Wide&Deep结构图" style="zoom:50%;" /><p>① Wide部分位于左侧，结构简单，就是把输入层直接连接到输出层，中间没有做任何处理。作用是：让模型具有较强的“记忆能力”（Memorization）。</p><p>② Deep部分位于右侧，结构稍复杂，它就是 Embedding+MLP 的模型结构，作用是：让模型具有“泛化能力”（Generalization）。</p><p>正是这样的结构特点，使模型兼具逻辑回归和深度神经网络的优点：能够快速处理并记忆大量历史行为特征，同时具有强大的表示能力。</p><h4 id="3记忆能力"><a class="markdownIt-Anchor" href="#3记忆能力"></a> （3）记忆能力</h4><p>① 概念：模型直接学习历史数据中物品或者特征的“共现频率”，并且把它们直接作为推荐依据的能力。</p><p>② 举例：在电影推荐中可以发现一系列的规则，比如，看了 A 电影的用户经常喜欢看电影 B，这种“因为 A 所以 B”式的规则，非常直接也非常有价值。</p><p>③ 特点：1）数量非常多，一个“记性不好”的推荐模型很难把它们都记住；2）没办法推而广之，因为这类规则非常具体，没办法或者说也没必要跟其他特征做进一步的组合。</p><p>④ 作用：让模型记住大量的直接且重要的规则，这正是单层的线性模型所擅长的。</p><h4 id="4泛化能力"><a class="markdownIt-Anchor" href="#4泛化能力"></a> （4）泛化能力</h4><p>① 概念：模型对于新鲜样本、以及从未出现过的特征组合的预测能力。</p><p>② 举例1：假设我们知道 25 岁的男性用户喜欢看电影 A，35 岁的女性用户也喜欢看电影 A。问：“35 岁的男性喜不喜欢看电影 A”，那么：</p><ul><li>只有记忆能力的模型回答：不知道，没有学过这个知识。</li><li>具有泛化能力的模型回答：从第1条可以学习到男性喜欢电影A，第2条可以学习到35岁喜欢电影A，那综合就是35岁男性喜欢电影A。</li></ul><p>③ 举例2：矩阵分解算法，就是为了解决协同过滤“泛化能力”不强而诞生的。协同过滤只会“死板”地使用用户的原始行为特征，而矩阵分解因为生成了用户和物品的隐向量，所以就可以计算任意两个用户和物品之间的相似度了。</p><h4 id="5应用场景"><a class="markdownIt-Anchor" href="#5应用场景"></a> （5）应用场景</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/4b2f89d82768ba851e3f7392b17df2be.jpg" alt="Google Play Wide&Deep模型结构图" style="zoom:33%;" /><p>① 右侧Wide部分：这部分很简单，只利用了两个特征的交叉，这两个特征是“已安装应用”和“当前曝光应用”。这样一来，Wide 部分想学到的知识就非常直观啦，就是希望记忆好“如果 A 所以 B”这样的简单规则。在 Google Play 的场景下，就是希望记住“如果用户已经安装了应用 A，是否会安装 B”这样的规则。</p><p>② 左侧Deep部分：是一个非常典型的 Embedding+MLP 结构。其中的输入特征很多，有用户年龄、属性特征、设备类型，还有已安装应用的 Embedding 等等，把这些特征一股脑地放进多层神经网络里面去学习之后，它们互相之间会发生多重的交叉组合，这最终会让模型具备很强的泛化能力。</p><h4 id="6特点"><a class="markdownIt-Anchor" href="#6特点"></a> （6）特点</h4><p>Wide&amp;Deep成功的关键在于：</p><p>① 抓住了业务问题的本质特点，融合了传统模型记忆能力和深度学习模型泛化能力的优势。</p><p>② 模型结构不复杂，易于工程实现、训练和线上服务，这加速了在业界的推广应用。</p><h4 id="7问答经典"><a class="markdownIt-Anchor" href="#7问答经典"></a> （7）问答经典</h4><p><strong>① 如果把数值型特征放到wide部分，是否需要做normalization？</strong></p><p>做不做normalization还是看你自己的实践。作者一般推荐在实际工作中做normalization或者bucketize。会有助于模型收敛。</p><p><strong>② deep的输出是128，wide是10000，两个不在一个量纲，感觉直接这么concate，会不会削弱deep的效果，模型退化成LR？</strong></p><p>作者认为不会，因为wide部分一般来说都是非常稀疏的特征，虽然总的维度很大，但是在实际inference的过程中，wide部分往往只有几个维度是有值的，而deep部分一般都是稠密的特征向量，所以理论上两个部分对结果的影响不存在太大的bias</p><h3 id="6-fm与深度学习结合"><a class="markdownIt-Anchor" href="#6-fm与深度学习结合"></a> 6. FM与深度学习结合</h3><h4 id="1介绍-6"><a class="markdownIt-Anchor" href="#1介绍-6"></a> （1）介绍</h4><p>2017年，由哈尔滨工业大学和华为公司联合提出的DeepFM，是将FM结构与Wide&amp;Deep模型进行了整合。用FM替换了原来的Wide部分，加强了浅层网络部分特征组合的能力。</p><p>同年，新加坡国立大学研究人员提出了NFM模型，就是把FM结构和深度神经网络结合起来的一种尝试。</p><h4 id="2deepfm模型结构"><a class="markdownIt-Anchor" href="#2deepfm模型结构"></a> （2）DeepFM模型结构</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/d0df6ed3958byyd9529efceebba64419-20210117114605406.png" alt="DeepFM结构图" style="zoom:50%;" /><p>DeepFM 利用了 Wide&amp;Deep 组合模型的思想，用 FM 替换了 Wide&amp;Deep 左边的 Wide 部分，加强了浅层网络部分特征组合的能力，而右边的部分跟 Wide&amp;Deep 的 Deep 部分一样，主要利用多层神经网络进行所有特征的深层处理，最后的输出层是把 FM 部分的输出和 Deep 部分的输出综合起来，产生最后的预估结果。这就是 DeepFM 的结构。</p><h4 id="3nfm模型结构"><a class="markdownIt-Anchor" href="#3nfm模型结构"></a> （3）NFM模型结构</h4><p>① 特征交叉新方法：元素积操作</p><img src="https://gitee.com/acdance/img/raw/master/blogs/a2c0f6751f64f50e3c628bf86cd9b00c.jpg" alt="NFM结构图" style="zoom:50%;" /><p>Bi-Interaction Pooling Layer 翻译成中文就是“两两特征交叉池化层”。具体操作为：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117115238461.png" style="zoom:50%;" /><p>其中 ⊙ 运算代表两个向量的元素积（Element-wise Product）操作，即两个长度相同的向量对应维相乘得到元素积向量。在进行两两特征 Embedding 向量的元素积操作后，再求取所有交叉特征向量之和，我们就得到了池化层的输出向量。接着，我们再把该向量输入上层的多层全连接神经网络，就能得出最后的预测得分。</p><p>② 特点：1）NFM 并没有使用内积操作来进行特征 Embedding 向量的交叉，而是使用元素积的操作。2）在得到交叉特征向量之后，也没有使用 concatenate 操作把它们连接起来，而是采用了求和的池化操作，把它们叠加起来。</p><h4 id="4问答经典"><a class="markdownIt-Anchor" href="#4问答经典"></a> （4）问答经典</h4><p><strong>① 数值型特征是否可以用于特征交叉？</strong></p><ul><li>按照DeepFM原论文，数值型特征是不参与特征交叉的，因为特征交叉的操作是在两个embedding向量间进行的。</li><li>如果可以把通过分桶操作把连续型特征处理成离散型特征，然后再加Embedding层，就可以让数值型特征也参与特征交叉。这是一个可行的方案。</li></ul><p><strong>② FM与DeepFM交叉权重区别？</strong></p><ul><li>原FM中内积作为权重，然后还要乘以特征本身的值。但在DeepFM中，所有的参与交叉的特征都先转换成了embedding，而且由于是one-hot，所以特征的值就是1，参不参与交叉都无所谓。所以直接使用embedding的内积作为交叉后的值就可以了</li></ul><p><strong>③ FM与MF的区别：</strong></p><ul><li>结构上来说，因子分解机会引入除了user id和item id的其他特征，而且FM是有一阶部分的，不只是做特征交叉。</li><li>MF就是一个只利用user id和item Id的双塔模型。</li><li>MF有多种的求解方式，比如奇异值分解（SVD）、特征值分解（ED）、梯度下降法。</li></ul><h3 id="7-注意力机制与深度学习结合"><a class="markdownIt-Anchor" href="#7-注意力机制与深度学习结合"></a> 7. 注意力机制与深度学习结合</h3><h4 id="1介绍-7"><a class="markdownIt-Anchor" href="#1介绍-7"></a> （1）介绍</h4><p><strong>“注意力机制”来源于人类天生的“选择性注意”的习惯</strong>。最典型的例子是用户在浏览网页时，会有选择性地注意页面的特定区域，而忽视其他区域。</p><p>近年来，注意力机制广泛应用在深度学习的各个领域，无论是自然语言处理、语音识别还是计算机视觉领域，注意力模型都取得了巨大的成功。从2017年开始，推荐领域也开始尝试把注意力机制引入推荐模型。</p><p>2017年，阿里巴巴提出了深度兴趣网络（<a href="https://dl.acm.org/doi/abs/10.1145/3219819.3219823">Deep Interest Network，DIN</a>）。</p><p>2019年，提出了其演进版本深度兴趣进化网络（<a href="https://ojs.aaai.org/index.php/AAAI/article/view/4545">Deep Interest Evolution Network，DIEN</a>）。</p><p>这两个网络都是CTR预估网络。</p><h4 id="2注意力机制在din上的应用"><a class="markdownIt-Anchor" href="#2注意力机制在din上的应用"></a> （2）注意力机制在DIN上的应用</h4><p><strong>DIN的基础模型结构</strong>：是一个典型的 Embedding MLP 的结构。它的输入特征有用户属性特征（User Proflie Features）、用户行为特征（User Behaviors）、候选广告特征（Candidate Ad）和场景特征（Context Features）。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/c1dbcc00dd17166ec53ca9e46b04006e.jpg" alt="DIN基础模型结构图" style="zoom:50%;" /><p>① 用户行为特征是由一系列用户购买过的商品组成的，也就是图上的 Goods 1 到 Goods N，而每个商品又包含了三个子特征，也就是图中的三个彩色点，其中红色代表商品 ID，蓝色是商铺 ID，粉色是商品类别 ID。同时，候选广告特征也包含了这三个 ID 型的子特征，因为这里的候选广告也是一个阿里平台上的商品。</p><p>② 把三个 ID 转换成了对应的 Embedding，然后把这些 Embedding 连接起来组成了当前商品的 Embedding。</p><p>③ 用户的行为序列是一组商品的序列，这个序列可长可短，但是神经网络的输入向量的维度必须是固定的。SUM Pooling 层的结构直接把这些商品的 Embedding 叠加起来，然后再把叠加后的 Embedding 跟其他所有特征的连接结果输入 MLP。</p><p>④ <strong>问题来了</strong>：SUM Pooling 的 Embedding 叠加操作其实是把所有历史行为一视同仁，没有任何重点地加起来，这其实并不符合我们购物的习惯。</p><p>⑤ <strong>DIN模型结构图</strong></p><img src="https://gitee.com/acdance/img/raw/master/blogs/edd028f815ef3577553ffe045f042330.jpg" alt="DIN模型结构图" style="zoom:50%;" /><p>与 Base Model 相比，DIN 为每个用户的历史购买商品加上了一个激活单元（Activation Unit），这个激活单元生成了一个权重，这个权重就是用户对这个历史商品的注意力得分，权重的大小对应用户注意力的高低。</p><p>⑥ 激活单元：它的输入是当前这个历史行为商品的 Embedding，以及候选广告商品的 Embedding。我们把这两个输入 Embedding，与它们的外积结果连接起来形成一个向量，再输入给激活单元的 MLP 层，最终会生成一个注意力权重，这就是激活单元的结构。简单来说，激活单元就相当于一个小的深度学习模型，它利用两个商品的 Embedding，生成了代表它们关联程度的注意力权重。</p><h4 id="3兴趣进化序列模型"><a class="markdownIt-Anchor" href="#3兴趣进化序列模型"></a> （3）兴趣进化序列模型</h4><p>① 无论是电商购买行为，还是视频网站的观看行为，或是新闻应用的阅读行为，特定用户的历史行为都是一个随时间排序的序列。既然是和时间相关的序列，就一定存在前后行为的依赖关系，这样的序列信息对于推荐过程是非常有价值的</p><p>② 深度兴趣进化网络 DIEN（Deep Interest Evolution Network）模型正好弥补了 DIN 模型没有对行为序列进行建模的缺陷，它围绕兴趣进化这个点进一步对 DIN 模型做了改进。</p><p>③ DIEN架构：整体上仍然是一个 Embedding MLP 的模型结构。与 DIN 不同的是，DIEN 用“兴趣进化网络”，也就是图中的彩色部分，替换掉了原来带有激活单元的用户历史行为部分。这部分虽然复杂，但它的输出只是一个 h’(T) 的 Embedding 向量，它代表了用户当前的兴趣向量。有了这个兴趣向量之后，再把它与其他特征连接在一起，DIEN 就能通过 MLP 作出最后的预测了</p><img src="https://gitee.com/acdance/img/raw/master/blogs/56c93e11aa3503852c37cd18db740da0.jpg" alt="DIEN模型结构图" style="zoom:33%;" /><p>④ <strong>兴趣进化网络</strong></p><ul><li>最下面一层是<strong>行为序列层（Behavior Layer，灰绿色部分）</strong>。它的主要作用和一个普通的 Embedding 层是一样的，负责把原始的 ID 类行为序列转换成 Embedding 行为序列。</li><li>再上一层是<strong>兴趣抽取层（Interest Extractor Layer，浅黄色部分）</strong>。它的主要作用是利用 GRU 组成的序列模型，来模拟用户兴趣迁移过程，抽取出每个商品节点对应的用户兴趣。</li><li>最上面一层是<strong>兴趣进化层（Interest Evolving Layer，浅红色部分）</strong>。它的主要作用是利用 AUGRU(GRU with Attention Update Gate) 组成的序列模型，在兴趣抽取层基础上加入注意力机制，模拟与当前目标广告（Target Ad）相关的兴趣进化过程，兴趣进化层的最后一个状态的输出就是用户当前的兴趣向量 h’(T)。</li></ul><p>⑤ 序列模型结构</p><p>兴趣抽取层和兴趣进化层都用到了序列模型的结构（如下图是RNN模型的典型结构）。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/f69c0f565b5fa31023b727192d3b1d37.jpg" style="zoom:50%;" alt="序列模型结构图"/><p>根据<strong>序列模型神经元结构</strong>的不同，最经典的有<a href="https://arxiv.org/pdf/1406.1078.pdf">RNN</a>、<a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.676.4320&amp;rep=rep1&amp;type=pdf">LSTM</a>、<a href="https://arxiv.org/pdf/1412.3555.pdf">GRU</a>这 3 种，各神经元结构图如下：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/bed695e253a49e6f08a6627782ec9202.jpg" style="zoom:33%;" /><p>⑥ 在 DIEN 模型中，神经元的输入就是商品 ID 或者前一层序列模型的 Embedding 向量，而输出就是商品的 Embedding 或者兴趣 Embedding，除此之外，每个神经元还会与后续神经元进行连接，用于预测下一个状态，放到 DIEN 里就是为了预测用户的下一个兴趣。这就是序列模型的结构和作用。</p><h4 id="4总结"><a class="markdownIt-Anchor" href="#4总结"></a> （4）总结</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210117145053119.png" style="zoom:50%;" /><h4 id="5问答经典"><a class="markdownIt-Anchor" href="#5问答经典"></a> （5）问答经典</h4><p><strong>① 有没有更实用的注意力权重计算方式？</strong></p><ul><li>可以借鉴FM及DeepFM中特征交叉的计算方式，对两个向量直接计算内积</li><li>先通过Embedding层转换成维度相等的Embedding再求内积</li><li>可以像双塔结构一样，设计一个历史行为物品塔和广告物品塔，在塔的最后通过求内积或者拼接后用全连接层输出权重</li></ul><p><strong>② DIN激活单元用到了外积，有什么意图？</strong></p><ul><li>本质上<strong>内积</strong>和<strong>外积</strong>都是做特征交叉，计算相似性的方式，一般来说，外积因为输出是一个向量，所以表达能力更强一些</li></ul><p><strong>③ DIN模型在工业界的排序阶段使用的多吗？</strong></p><ul><li>DIN比DIEN的使用场景要求低很多，很多团队在用，或者说很多团队在用DIN的思路来构建自己的模型。作者经验：attention机制是非常有价值的</li></ul><p><strong>④ GRU这种提取序列信息的方式肯定会被Transformer取代？</strong></p><ul><li>已经有不少的paper介绍Transformer替代GRU，最近提的比较多的是bert for rec。</li></ul><p><strong>⑤ 广告的内容和商城的内容（包含用户行为）是不一样的，这时候还可以用DIN的注意力机制了吗？</strong></p><ul><li>作者认为可以的，因为广告内容和商城内容从经验上来说也会有一定的相关性。以DeepFM的思路来说，其实可以做任意两个特征之间的交叉。对于注意力机制，当然也可以学任意两个特征间的注意力。但到底作用有多大，能不能提高效果，就看自己的实践了。</li></ul><p><strong>⑥ 推荐模型的NN隐层数量都比较少（相对cv），业界常用的MLP隐层数量和神经元数量，有没有一个大致的取值范围？</strong></p><ul><li>隐层数量大致在1到5之间吧，确实在推荐问题上再提高隐层数量效果上意义不大，inference延迟还大，得不偿失。</li><li>相比CV动辄上百的隐层数量，推荐模型是比较“浅”的了。CV的输入特征都是稠密的数值特征，相比推荐来说，特征维度就比较大，所以需要更深的网络来做特征提取。</li><li>同时，推荐模型大多数特征都是结构化的数据，因此只能用全连接来对特征进行提取，而过深的全连接层会带来大量的参数，使得模型训练效率低等问题；对于CV来说，其主要考虑的是三维数据的空间特征提取，CNN中卷积核是权重共享的，这就解决全连接层参数爆炸的问题。</li></ul><p><strong>⑦ transformer中有position encoding，而在推荐的领域中，点击的序列中同样有时间间隔的因素，例如取用户最近若干次点击，可能每次间隔时间不等。这个间隔时间应该是有信息可以揭示用户兴趣的变迁速率等信息的吧？但是如何将其引入到推荐序列中呢？是类似于transformer中 position learned encoding这样么？</strong></p><ul><li>这是一个很好的idea。但说实话我还没有见到非常成功的案例说能够很好的利用event interval然后取得很大的收益。也许是这个信号本身不够强，带来的收益有限。</li></ul><p><strong>⑧ 查阅了关于外积的资料，向量外积一般只定义在3维空间，对于高于3维空间的向量如何计算其外积呢？我在DIN作者的开源项目中发现作者自己没有使用外积运算，而是使用了元素相减和元素相乘，不知道老师在DIN或相关实践中是否会使用外积操作来进行向量的融合呢？</strong></p><ul><li>我也不喜欢用外积操作，我比较喜欢inner product和element wise操作。外积我始终没法得到更好的效果。DIN的paper中加入了外积操作，也许身体是诚实的，还是用了传统的交互操作。没必要纠结这些，自己实践中哪个好用用哪个。</li></ul><h3 id="8-强化学习与深度学习结合"><a class="markdownIt-Anchor" href="#8-强化学习与深度学习结合"></a> 8. 强化学习与深度学习结合</h3><h4 id="1背景"><a class="markdownIt-Anchor" href="#1背景"></a> （1）背景</h4><p>强化学习也被称为增强学习，它在模型实时更新、用户行为快速反馈等方向上拥有巨大的优势。自从 2018 年开始，它就被大量应用在了推荐系统中，短短几年时间内，<a href="http://www.personal.psu.edu/~gjz5038/paper/www2018_reinforceRec/www2018_reinforceRec.pdf">微软</a>、<a href="https://tech.meituan.com/2018/11/15/reinforcement-learning-in-mt-recommend-system.html">美团</a>、<a href="https://arxiv.org/abs/1803.00710">阿里</a>等多家一线公司都已经有了强化学习的成功应用案例。</p><h4 id="2基本概念"><a class="markdownIt-Anchor" href="#2基本概念"></a> （2）基本概念</h4><p>基本原理：就是一个<strong>智能体通过与环境进行交互，不断学习强化自己的智力，来指导自己的下一步行动，以取得最大化的预期利益。</strong></p><p>为了把强化学习技术落地，只清楚它的基本原理显然是不够的，我们需要清晰地定义出强化学习中的每个关键变量，形成一套通用的技术框架。对于一个通用的强化学习框架来说，有这么<strong>六个元素</strong>是必须要有的：</p><ul><li><strong>智能体（Agent）</strong>：强化学习的主体也就是作出决定的“大脑”；</li><li><strong>环境（Environment）</strong>：智能体所在的环境，智能体交互的对象；</li><li><strong>行动（Action）</strong>：由智能体做出的行动；</li><li><strong>奖励（Reward）</strong>：智能体作出行动后，该行动带来的奖励；</li><li><strong>状态（State）</strong>：智能体自身当前所处的状态；</li><li><strong>目标（Objective）</strong>：指智能体希望达成的目标。</li></ul><p>通用过程描述：一个<strong>智能体</strong>身处在不断变化的<strong>环境</strong>之中，为了达成某个<strong>目标</strong>，它需要不断作出<strong>行动</strong>，行动会带来<strong>好</strong>或者不好的奖励，智能体收集起这些<strong>奖励</strong>反馈进行自我学习，改变自己所处的<strong>状态</strong>，再进行下一步的行动，然后智能体会持续这个“<strong>行动 - 奖励 - 更新状态</strong>”的循环，不断优化自身，直到达成设定的目标。</p><h4 id="3强化学习推荐系统框架"><a class="markdownIt-Anchor" href="#3强化学习推荐系统框架"></a> （3）强化学习推荐系统框架</h4><p>① <strong>深度强化学习网络DRN（Deep Reinforcement Learning Network）</strong>，是微软在 2018 年提出的，它被应用在了新闻推荐的场景上。深度强化学习推荐系统框架图如下：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/2ff55be8dea34e992bcb09e1f3c39a27.jpg" style="zoom:50%;" alt="深度强化学习推荐系统框架图"/><p>② DRN学习过程：</p><ul><li>第一步是初始化推荐系统，主要初始化的是推荐模型，我们可以利用离线训练好的模型作为初始化模型，其他的还包括我们之前讲过的特征存储、推荐服务器等等。</li><li>接下来，推荐系统作为智能体会根据当前已收集的用户行为数据，也就是当前的状态，对新闻进行排序这样的行动，并在新闻网站或者 App 这些环境中推送给用户。</li><li>用户收到新闻推荐列表之后，可能会产生点击或者忽略推荐结果的反馈。这些反馈都会作为正向或者负向奖励再反馈给推荐系统。</li><li>推荐系统收到奖励之后，会根据它改变、更新当前的状态，并进行模型训练来更新模型。接着，就是推荐系统不断重复“排序 - 推送 - 反馈”的步骤，直到达成提高新闻的整体点击率或者用户留存等目的为止。</li></ul><p>③ 强化学习六要素与推荐系统的关系总结：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/eac0fea51d5033a35332cd81f653202b.jpeg" style="zoom:33%;" alt="强化学习六要素与推荐系统的关系总结图" /><p>④ 强化学习推荐系统的特点：始终在强调<strong>持续学习</strong>和<strong>实时训练</strong>。它不断利用新学到的知识更新自己，做出最及时的调整，这也正是将强化学习应用于推荐系统的收益所在。</p><h4 id="4深度强化学习推荐模型-drn"><a class="markdownIt-Anchor" href="#4深度强化学习推荐模型-drn"></a> （4）深度强化学习推荐模型 DRN</h4><p>① 智能体是强化学习框架的核心，作为推荐系统这一智能体来说，<strong>推荐模型</strong>就是推荐系统的“大脑”。在 DRN 框架中，扮演“大脑”角色的是 <strong>Deep Q-Network (深度 Q 网络，DQN)</strong>。其中，Q 是 Quality 的简称，指通过对行动进行质量评估，得到行动的效用得分，来进行行动决策。</p><p>② DQN模型结构：如下图所示，它就是一个典型的<strong>双塔结构</strong>。用户塔的输入特征是<strong>用户特征和环境特征</strong>，物品塔的输入向量是<strong>所有的用户、环境、用户 - 新闻交叉特征和新闻特征</strong>。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/75d38d425b1a72350ce85e8b676d928a.jpg" alt="DQN模型结构图" style="zoom:50%;" /><p>③ 在强化学习的框架下，<strong>用户塔特征向量</strong>因为代表了用户当前所处的状态，所以也可被视为<strong>状态向量</strong>。<strong>物品塔特征向量</strong>则代表了系统下一步要选择的新闻，这个选择新闻的过程就是智能体的“行动”，所以物品塔特征向量也被称为<strong>行动向量</strong>。</p><p>④ 双塔模型通过对<strong>状态向量</strong>和<strong>行动向量</strong>分别进行 <strong>MLP 处理</strong>，再用互操作层生成了最终的<strong>行动质量得分 Q(s,a)</strong>，智能体正是通过这一得分的高低，来选择到底做出哪些行动，也就是推荐哪些新闻给用户的。</p><p>⑤ <strong>DRN学习过程</strong></p><img src="https://gitee.com/acdance/img/raw/master/blogs/96509410e50e019e5077f6a2a909292a.jpg" alt="DRN学习过程图" style="zoom:33%;" /><ul><li><strong>离线部分初始化</strong>：DRN 根据历史数据训练好 DQN 模型，作为智能体的初始化模型。</li><li><strong>在线t1-&gt;t2时间段</strong>：DRN 利用初始化模型进行一段时间的推送服务，积累反馈数据</li><li><strong>t2时间点</strong>：DRN 利用 t1 到 t2 阶段积累的用户点击数据，进行模型微更新（Minor update），<strong>基于新的在线训练方法，Dueling Bandit Gradient Descent algorithm（竞争梯度下降算法）</strong></li><li><strong>t4时间点</strong>：DRN 利用 t1 到 t4 阶段的用户点击数据及用户活跃度数据，进行模型的主更新（Major update），<strong>可以理解为：利用历史数据的重新训练，用训练好的模型来替代现有模型。</strong></li><li><strong>重复t1-&gt;t4阶段的操作</strong></li></ul><p>⑥ <strong>在线学习方法：竞争梯度下降算法</strong></p><img src="https://gitee.com/acdance/img/raw/master/blogs/c94b7122f71d8b7845ffca3fd239e314.jpg" alt="DRN在线学习过程图" style="zoom:33%;" /><p>主要包括三步：</p><ul><li><p>第一步：对于已经训练好的当前网络 Q，对其模型参数 W 添加一个较小的随机扰动，得到一个新的模型参数，这里我们称对应的网络为探索网络 Q~，产生随机扰动公式如下：</p><p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">Δ</mi><mi>W</mi><mo>=</mo><mi>α</mi><mo separator="true">⋅</mo><mi>r</mi><mi>a</mi><mi>n</mi><mi>d</mi><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo><mo separator="true">⋅</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">ΔW=α·rand(-1, 1) · W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span></span></span></span></p><p>$ α$ 是一个探索因子，决定探索力度的大小。$rand(-1,1) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">产</mi><mi mathvariant="normal">生</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">个</mi></mrow><annotation encoding="application/x-tex">产生的是一个</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">产</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span></span></span></span>[-1,1]$之间的随机数。</p></li><li><p>第二步：对于当前网络 Q 和探索网络 Q~，分别生成推荐列表 L 和 L~，再将两个推荐列表用间隔穿插（Interleaving）的方式融合，组合成一个推荐列表后推送给用户。</p></li><li><p>最后一步是实时收集用户反馈。如果探索网络 Q～生成内容的效果好于当前网络 Q，我们就用探索网络代替当前网络，进入下一轮迭代。反之，我们就保留当前网络。</p></li></ul><h4 id="5drn的改进"><a class="markdownIt-Anchor" href="#5drn的改进"></a> （5）DRN的改进</h4><p>最大的改进就是把模型推断、模型更新、推荐系统工程整个一体化了，让整个模型学习的过程变得更高效，能根据用户的实时奖励学到新知识，做出最实时的反馈。</p><p>但同时，也正是因为工程和模型紧紧地耦合在一起，让强化学习在推荐系统中的落地并不容易。</p><h4 id="6问答经典"><a class="markdownIt-Anchor" href="#6问答经典"></a> （6）问答经典</h4><p><strong>① 竞争梯度下降算法的弊端是什么？</strong></p><p>每个参数的更新方向是随机的，而不是像随机下降算法一样，是沿着梯度更新的。随机更新可能导致的结果就是：1.收敛是缓慢的。2.很难收敛到全局最优值。</p><p><strong>② 如何判断竞争网络效果?</strong></p><p>在实际实现中<strong>做一小段实践的数据收集</strong>，再根据这个batch的效果进行探索网络和当前网络的选择。这部分在实际的工程中一般是在flink等流计算平台上实现的。</p><p><strong>③ 历史数据重新训练指的是从零训练吗？使用竞争梯度下降算法吗？</strong></p><p>主更新不使用竞争梯度下降算法。实际工程中可视为一次正常的模型更新，使用的是全量历史样本，当然这其中包括了最近收集到的样本。</p><p><strong>④ 增加实时性上采用FTRL进行在线学习和强化学习在最终结果上有什么区别，如何判断选择？</strong></p><p>online learning其实可以看作强化学习的一个子集，或者说是子类。所以FTRL做在线学习本质上就是强化学习的一种。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/e066db0.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;特征组合和特征交叉问题非常常见，特征的种类非常多，特征交叉的复杂程度也要大得多。解决这类问题的关键，就是&lt;strong&gt;模型对于特征组合和特征交叉的学习能力&lt;/strong&gt;，因为它决定了模型对于未知特征组合样本的预测能力，而这对于复杂的推荐问题来说，是决定其推荐效果的关键</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="推荐模型" scheme="https://www.notlate.net/tags/%E6%8E%A8%E8%8D%90%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记09：深度学习为推荐系统带来了革命性影响</title>
    <link href="https://www.notlate.net/posts/afc2d21f.html"/>
    <id>https://www.notlate.net/posts/afc2d21f.html</id>
    <published>2021-01-05T13:33:40.000Z</published>
    <updated>2021-03-18T15:04:38.578Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-深度学习模型拟合能力更强"><a class="markdownIt-Anchor" href="#1-深度学习模型拟合能力更强"></a> 1. 深度学习模型拟合能力更强</h3><p>特征交叉方式中，点积等方式过于简单，在样本数据比较复杂的情况下，容易欠拟合。而深度学习可以大大提高模型的拟合能力，比如在 NeuralCF（神经网络协同过滤）模型中，点积层被替换为多层神经网络，理论上多层神经网络具备拟合任意函数的能力，所以我们通过增加神经网络层的方式就可以解决欠拟合的问题了。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/7063d223da013845534d3c84b7ab9409-20210116205913169.jpg" alt="NeuralCF模型结构图" style="zoom:33%;" /><h3 id="2-深度学习模型结构更加灵活"><a class="markdownIt-Anchor" href="#2-深度学习模型结构更加灵活"></a> 2. 深度学习模型结构更加灵活</h3><p>（1）深度学习模型结构不尽相同，多数是可以通过堆叠不同作用的网络层，最简单的是串联结构，有的像网状结构，有的像金字塔结构等等。</p><p>（2）典型案例是阿里巴巴的 DIN（深度兴趣网络，下图左）和 DIEN（深度兴趣进化网络，下图右），通过在模型结构中引入<strong>注意力机制</strong>和<strong>模拟兴趣进化的序列模型</strong>，来更好地模拟用户行为。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/202cfa968b1aa6fa4349722bb4ab4332.jpg" alt="DIN和DIEN模型结构图" style="zoom:33%;" /><p>其中，DIN 模型在神经网络中增加了一个“激活单元“结构，是为了模仿人类的注意力机制。其改进版 DIEN 模型不仅引入了注意力机制，还用AUGRU单元模拟了用户兴趣随时间的演化过程。</p><p>这些改进都是基于实际业务洞察分析的演进，所以需要正确、全面地掌握不同深度学习模型的特点以及发展关系非常重要。</p><h3 id="3-深度学习模型发展关系图"><a class="markdownIt-Anchor" href="#3-深度学习模型发展关系图"></a> 3. 深度学习模型发展关系图</h3><img src="https://gitee.com/acdance/img/raw/master/blogs/10e8105911823d96348dc7288d4d26c5.jpg" style="zoom:33%;" /><p>（1）<strong>核心结构</strong>：多层感知机（MultiLayer Perception，MLP）。</p><p>（2）<strong>基础结构</strong>：AutoRec，一种单隐层的神经网络模型，将自编码器（AutoEncoder）的思想与协同过滤结合。</p><p>（3）<strong>经典结构</strong>：Deep Crossing，在原始特征和MLP之间加入了Embedding层，把输入的稀疏特征先转换成稠密 Embedding 向量，再输入到MLP进行训练，这就解决了MLP不善于处理稀疏特征的问题。<strong>因此Embedding+MLP结构是最经典的深度学习推荐模型结构。</strong></p><p>（4）<strong>广泛应用结构</strong>：Wide&amp;Deep，模型分为两部分：Wide部分是浅层的神经网络结构，让模型具备很好的记忆性；Deep部分是深层MLP，让模型具备良好的泛化性，最终把两者结合起来。凭借着易实现、易改造的特点，获得了业界广泛应用。同时还衍生出了诸多变种，比如通过改造 Wide 部分提出的Deep&amp;Cross和DeepFM，通过改造Deep部分提出的AFM、NFM等等。</p><p>（5）<strong>与其他机器学习子领域交叉</strong>：</p><p>① 深度学习和<strong>注意力机制</strong>结合，比如阿里的DIN，浙大和新加坡国立提出的AFM等；</p><p>② 把<strong>序列模型</strong>引入Embedding+MLP的经典结构，比如阿里的DIEN等；</p><p>③ 深度学习和<strong>强化学习</strong>结合，比如微软的DRN（深度强化学习网络），以及包括<a href="https://tech.meituan.com/2018/11/15/reinforcement-learning-in-mt-recommend-system.html">美团-猜你喜欢</a>、<a href="https://alitech-private.oss-cn-beijing.aliyuncs.com/1517812754285/reinforcement_learning.pdf?Expires=1615452000&amp;OSSAccessKeyId=LTAI4G7JAotCoNVvbmrLZNtj&amp;Signature=qwQTj4C%2FcScl1NJz%2FvknvkRgTrk%3D">阿里-强化学习在阿里的技术演进与业务创新</a>在内的非常有价值的业界应用。</p><h3 id="4-演进规律"><a class="markdownIt-Anchor" href="#4-演进规律"></a> 4. 演进规律</h3><h4 id="1改变神经网络的复杂程度"><a class="markdownIt-Anchor" href="#1改变神经网络的复杂程度"></a> （1）改变神经网络的复杂程度</h4><p>从最简单的单层神经网络模型 AutoRec，到经典的深度神经网络结构 Deep Crossing，它们主要的进化方式在于<strong>增加了深度神经网络的层数和结构复杂度</strong>。</p><h4 id="2改变特征交叉方式"><a class="markdownIt-Anchor" href="#2改变特征交叉方式"></a> （2）改变特征交叉方式</h4><p>这种演进方式的要点在于<strong>大大提高了深度学习网络中特征交叉的能力</strong>。比如改变了用户向量和物品向量互操作方式的NeuralCF，定义了多种特征向量交叉操作的 PNN 等等。</p><h4 id="3把多种模型组合应用"><a class="markdownIt-Anchor" href="#3把多种模型组合应用"></a> （3）把多种模型组合应用</h4><p>组合模型主要指的就是以 Wide&amp;Deep 模型为代表的一系列<strong>把不同结构组合在一起</strong>的改进思路。它通过组合两种甚至多种不同特点、优势互补的深度学习网络，来提升模型的综合能力。</p><h4 id="4让深度推荐模型和其他领域进行交叉"><a class="markdownIt-Anchor" href="#4让深度推荐模型和其他领域进行交叉"></a> （4）让深度推荐模型和其他领域进行交叉</h4><p>我们从 DIN、DIEN、DRN 等模型中可以看出，深度推荐模型无时无刻不在从其他研究领域汲取新的知识。从今年的推荐系统顶会 Recsys2020 中可以看到，NLP 领域的著名模型 Bert 又与推荐模型结合起来，并且产生了非常好的效果。一般来说，自然语言处理、图像处理、强化学习这些领域都是推荐系统经常汲取新知识的地方。</p><p>下一篇详细记录深度学习模型。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/afc2d21f.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-深度学习模型拟合能力更强&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-深度学习模型拟合能力更强&quot;&gt;&lt;/a&gt; 1. 深度学习模型拟合能力更强&lt;/h3&gt;
&lt;p&gt;特征交叉方式中，点积等方式过于简单，在样本数据比较复杂的情况下，容易欠</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="深度学习" scheme="https://www.notlate.net/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记08：传统推荐算法发展汇总</title>
    <link href="https://www.notlate.net/posts/d6641ee8.html"/>
    <id>https://www.notlate.net/posts/d6641ee8.html</id>
    <published>2021-01-05T13:23:00.000Z</published>
    <updated>2021-03-18T15:04:38.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-协同过滤cf"><a class="markdownIt-Anchor" href="#1-协同过滤cf"></a> 1. 协同过滤(CF)</h2><h3 id="1-里程碑"><a class="markdownIt-Anchor" href="#1-里程碑"></a> 1. 里程碑</h3><p>2003年，Amazon发表论文《<a href="https://ieeexplore.ieee.org/document/1167344">Amazon.com recommendations: item-to-item collaborative filtering</a>》，不仅让Amazon的推荐系统广为人知，更让协同过滤成为今后很长时间的研究热点和业界主流的推荐模型。</p><h3 id="2-算法过程"><a class="markdownIt-Anchor" href="#2-算法过程"></a> 2. 算法过程</h3><p>（1）一种完全依赖用户和物品之间行为关系的推荐算法，利用所有用户与所有商品的关系创建共现矩阵。</p><p>（2）计算用户相似度：在共现矩阵中，每个用户对应的行向量其实就可以当作一个用户的 Embedding 向量，可以使用余弦相似度计算。</p><p>（3）用户评分预测：<strong>利用用户相似度与相似用户评价的加权平均值，来获得目标用户的评价预测</strong></p><h3 id="3-缺点"><a class="markdownIt-Anchor" href="#3-缺点"></a> 3. 缺点</h3><p>共现矩阵往往非常稀疏</p><h2 id="2-矩阵分解"><a class="markdownIt-Anchor" href="#2-矩阵分解"></a> 2. 矩阵分解</h2><h3 id="1-里程碑-2"><a class="markdownIt-Anchor" href="#1-里程碑-2"></a> 1. 里程碑</h3><p>2006年，在Netflix Prize Challenge中，以矩阵分解为主的推荐算法大放异彩，拉开了矩阵分解在业界流行的序幕。</p><h3 id="2-协同过滤与矩阵分解区别"><a class="markdownIt-Anchor" href="#2-协同过滤与矩阵分解区别"></a> 2. 协同过滤与矩阵分解区别</h3><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128230512852.jpg" alt="协同过滤与矩阵分解对比" /></p><p>（1）协同过滤算法(图左)找到用户可能喜欢的视频的方式很直观，就是利用用户的观看历史，找到跟目标用户 Joe 看过同样视频的相似用户，然后找到这些相似用户喜欢看的其他视频，推荐给目标用户 Joe</p><p>（2）矩阵分解算法(图右)是期望为每一个用户和视频生成一个隐向量，将用户和视频定位到隐向量的表示空间上，距离相近的用户和视频表明兴趣特点接近，在推荐过程中，我们就应该把距离相近的视频推荐给目标用户</p><h3 id="3-矩阵分解过程"><a class="markdownIt-Anchor" href="#3-矩阵分解过程"></a> 3. 矩阵分解过程</h3><p>先分解协同过滤生成的共现矩阵，生成用户和物品的隐向量，再通过用户和物品隐向量间的相似性进行推荐。把一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">M * N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span>的共现矩阵，分解成一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>∗</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">M*K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span></span>的用户矩阵和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>K</mi><mo>∗</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">K*N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span></span></span></span> 的物品矩阵相乘的形式。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/604b312899bff7922528df4836c10cfb.jpeg" alt="矩阵分解过程" style="zoom:25%;" /><h3 id="4-分解方法"><a class="markdownIt-Anchor" href="#4-分解方法"></a> 4. 分解方法</h3><p>（1）特征值分解（ED）：只能作用于方针，不适用于分解用户-物品矩阵</p><p>（2）奇异值分解（SVD）：要求原始的共现矩阵是稠密的，而且计算复杂度达到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(mn^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，因此不满足实时性要求</p><p>（3）梯度下降法（GD）：主要方法，为了减少过拟合现象，通常加入正则化项。</p><h3 id="5-矩阵分解优点"><a class="markdownIt-Anchor" href="#5-矩阵分解优点"></a> 5. 矩阵分解优点：</h3><p>（1）泛化能力强，在一定程度上解决了数据稀疏的问题</p><p>（2）空间复杂度低，不需要存储大量的用户和物品相似性矩阵，只需要存储用户和物品隐向量即可。</p><p>（3）更好的扩展性和灵活性：矩阵分解结果是用户和物品隐向量，与Embedding思想不谋而合，因此其结果易于与其他特征交叉组合，也能够与深度学习网络无缝结合。</p><h3 id="6-矩阵分解局限性"><a class="markdownIt-Anchor" href="#6-矩阵分解局限性"></a> 6. 矩阵分解局限性</h3><p>不方便加入用户、物品和上下文相关的特征，丧失了利用很多有效信息的机会。同时在缺乏用户历史行为时无法进行有效推荐。</p><h3 id="7-问答经典"><a class="markdownIt-Anchor" href="#7-问答经典"></a> 7. 问答经典</h3><ol><li><p>评分标准不一致，有人喜欢打高分，有人喜欢打低分，如何处理？</p><p>（1）在生成共现矩阵的时候对用户的评分进行用户级别的校正或者归一化，用当前得分减去用户平均得分作为共现矩阵里面的值</p><p>（2）可以尝试余弦相似度消除影响。</p></li><li><p>正负样本不平衡问题怎么处理？</p><p>（1）负样本欠采样，和正样本过采样，或者增大正样本学习的权重。</p><p>（2）SMOTE，大致意思是通过合成的方式过采样正样本，可以尝试但有一定风险。</p></li></ol><h2 id="3-逻辑回归lr"><a class="markdownIt-Anchor" href="#3-逻辑回归lr"></a> 3. 逻辑回归（LR）</h2><h3 id="1-简介"><a class="markdownIt-Anchor" href="#1-简介"></a> 1. 简介</h3><p>LR模型可以综合利用用户、物品、上下文等多种不同的特征。另外LR的另外一种表现形式“感知机”是神经网络中最基础的单一神经元结构，是深度学习的基础结构。LR把推荐问题看作分类问题，通过预测正样本的概率对物品进行排序，因此转化成了点击率（CTR）预估问题。</p><h3 id="2-推荐流程"><a class="markdownIt-Anchor" href="#2-推荐流程"></a> 2. 推荐流程</h3><p>（1）将用户属性信息、物品属性信息、上下文属性信息等特征展开并转换成数值型特征向量。</p><p>（2）确定LR模型的优化目标，利用已有样本数据对LR模型进行训练。</p><p>（3）模型服务阶段，将特征向量输入LR模型，推断得到目标概率。</p><p>（4）利用概率对所有候选物品进行排序，得到推荐列表。</p><h3 id="3-具体lr模型数学表达及训练方法请参考"><a class="markdownIt-Anchor" href="#3-具体lr模型数学表达及训练方法请参考"></a> 3. 具体LR模型数学表达及训练方法，请参考：</h3><p><a href="https://blog.csdn.net/niuwei22007/article/details/47705081">深度学习(DL)与卷积神经网络(CNN)学习笔记随笔-03-基于Python的LeNet之LR</a></p><h3 id="4-lr模型的优势"><a class="markdownIt-Anchor" href="#4-lr模型的优势"></a> 4. LR模型的优势</h3><p>（1）可解释性强。LR模型数学形式是各特征的加权和，在经过Sigmoid函数计算出0~1之间的概率，符合人类对预估过程的直觉人知。</p><p>（2）工程化需要。在互联网公司每天数据量是TB级别，模型的训练和在线推断效率非常重要。在尚未流行GPU训练（2012年）之前，LR模型凭借易于并行化、模型简单、训练开销小等优势占据着工程领域的主流。</p><h3 id="5-lr模型局限性"><a class="markdownIt-Anchor" href="#5-lr模型局限性"></a> 5. LR模型局限性</h3><p>表达能力不强，无法进行多特征交叉、特征筛选等复杂操作；</p><h2 id="4-因子分解机fm"><a class="markdownIt-Anchor" href="#4-因子分解机fm"></a> 4. 因子分解机(FM)</h2><h3 id="1-为什么需要多特征交叉"><a class="markdownIt-Anchor" href="#1-为什么需要多特征交叉"></a> 1. 为什么需要多特征交叉？</h3><p><a href="https://baike.baidu.com/item/%E8%BE%9B%E6%99%AE%E6%A3%AE%E6%82%96%E8%AE%BA/4475862?fr=aladdin">辛普森悖论</a> – 交叉与不交叉的结论完全相悖</p><h3 id="2-特征交叉发展里程碑"><a class="markdownIt-Anchor" href="#2-特征交叉发展里程碑"></a> 2. 特征交叉发展里程碑</h3><p>POLY2–&gt;FM–&gt;FFM</p><h3 id="3-poly2模型"><a class="markdownIt-Anchor" href="#3-poly2模型"></a> 3. POLY2模型</h3><p>原始的特征交叉方法是人工组合特征，再通过各种分析手段筛选有效的组合特征。因此首先发展出了POLY2（Degree-2 Polynomial Margin，<a href="https://www.jmlr.org/papers/volume11/chang10a/chang10a.pdf">论文链接</a>）模型进行特征的“暴力”组合。数学形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>P</mi><mi>O</mi><mi>L</mi><mi>Y</mi><mn>2</mn><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>2</mn></msub><mo>=</mo><msub><mi>j</mi><mn>1</mn></msub><mo>+</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mrow><mi>h</mi><mo stretchy="false">(</mo><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>j</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></msub><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">POLY2(w, x) = w_0 + \sum^{n}_{i=1} w_i x_i + \sum^{n}_{j_1 = 1} \sum^{n}_{j_2 = j_1 + 1} w_{h(j_1, j_2)} x_{j_1} x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault">L</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>表示特征数量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示one-hot编码中第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathdefault">i</span></span></span></span>个特征的值，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span></span></span></span>等是模型参数。</p><p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>两者都非零时，交叉特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1} x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>才有效。上式对特征进行了两两交叉（特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>），并对所有的交叉特征赋予权重<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>h</mi><mo stretchy="false">(</mo><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>j</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">w_{h(j_1, j_2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>。</p><p>在一定程度上解决了特征交叉的问题，但本质上还是线性模型，其训练方法与LR无区别。同时存在2个较大缺陷：</p><p>（1）one-hot编码处理类别型数据导致特征向量稀疏，POLY2进行无选择的特征交叉会导致特征向量更加稀疏。</p><p>（2）权重参数数量由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>上升到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，极大的增加了训练复杂度。</p><h3 id="4-fm模型"><a class="markdownIt-Anchor" href="#4-fm模型"></a> 4. FM模型</h3><p>2010年，Rendle提出了FM模型（<a href="https://ieeexplore.ieee.org/document/5694074">Factorization Machines</a>），FM为每个特征学习一个隐权重向量，在特征交叉的时候，使用两个特征隐向量的内积作为交叉特征的权重，而不是PLOY2中为每个交叉特征设置一个权重参数，数学形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>M</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>2</mn></msub><mo>=</mo><msub><mi>j</mi><mn>1</mn></msub><mo>+</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mover accent="true"><msub><mi>w</mi><msub><mi>j</mi><mn>1</mn></msub></msub><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><msub><mi>w</mi><msub><mi>j</mi><mn>2</mn></msub></msub><mo>⃗</mo></mover><mo stretchy="false">)</mo><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">FM(w, x) = w_0 + \sum^{n}_{i=1} w_i x_i + \sum^{n}_{j_1 = 1} \sum^{n}_{j_2 = j_1 + 1} (\vec{w_{j_1}} \cdot \vec{w_{j_2}}) x_{j_1} x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>与POLY2的主要区别是：用两个向量的内积<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mover accent="true"><msub><mi>w</mi><msub><mi>j</mi><mn>1</mn></msub></msub><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><msub><mi>w</mi><msub><mi>j</mi><mn>2</mn></msub></msub><mo>⃗</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\vec{w_{j_1}} \cdot \vec{w_{j_2}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span>取代了单一的权重系数<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>h</mi><mo stretchy="false">(</mo><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>j</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow></msub></mrow><annotation encoding="application/x-tex">w_{h(j_1, j_2)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span></span></span></span>。FM引入隐向量的思路与矩阵分解出用户隐向量和物品隐向量思路一致，但是做了进一步的拓展，即从单纯的用户、物品两特征拓展到了所有的特征。</p><p>优点：</p><p>（1）把POLY2的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>级别参数量降低到了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>k</mi><mo stretchy="false">(</mo><mi>k</mi><mi mathvariant="normal">是</mi><mi mathvariant="normal">隐</mi><mi mathvariant="normal">向</mi><mi mathvariant="normal">量</mi><mi mathvariant="normal">维</mi><mi mathvariant="normal">度</mi><mi mathvariant="normal">，</mi><mi>n</mi><mo>&gt;</mo><mo>&gt;</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">nk(k是隐向量维度，n&gt;&gt;k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">n</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">隐</span><span class="mord cjk_fallback">向</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">维</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">，</span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>级别，大大降低了训练开销。</p><p>（2）引入隐向量，可以更好的解决稀疏数据问题。可以把两种特征的向量内积作为交叉特征的权重，而不需要样本中必须含有这种交叉特征。</p><p>（3）一定程度上丢失了某些具体交叉特征的精确记忆表示能力，但是大大提高了泛化能力。</p><p>由于FM同样可以用梯度下降方法进行训练，其二阶表达式经过化简之后，预测复杂度可从<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(kn^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>优化到<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(kn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，即可以在线性时间内完成线上预测。同时计算完梯度后的表达式复杂度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(kn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">n</span><span class="mclose">)</span></span></span></span>，因此其训练也非常高效。所以凭借着易于训练和预测，所以在2012~2014年前后成为业界主流的推荐模型之一。</p><h3 id="5-ffm"><a class="markdownIt-Anchor" href="#5-ffm"></a> 5. FFM</h3><p>2015年，基于FM提出的FFM（<a href="https://dl.acm.org/doi/10.1145/2959100.2959134">Field-aware Factorization Machines for CTR Prediction</a>）在多项CTR预估大赛中夺冠，并被Criteo、美团等公司深度应用在推荐系统、CTR预估等领域。<strong>FFM引入了特征域概念，使模型的表达能力更强</strong>。那怎么理解特征域呢？</p><p>《深度学习推荐系统》中的示例：</p><blockquote><p>用户的性别分为男、女、未知三类，那么对一个女性用户来说，采用one-hot方式编码的特征向量为[0, 1, 0]，这个三维的特征向量就是一个“性别”特征域。</p></blockquote><p>《<a href="https://tech.meituan.com/2016/03/03/deep-understanding-of-ffm-principles-and-practices.html">深入FFM原理与实践</a>》中的解释：</p><blockquote><p>以上面的广告分类为例，“Day=26/11/15”、“Day=1/7/14”、“Day=19/2/15”这三个特征都是代表日期的，可以放到同一个field中。同理，商品的末级品类编码生成了550个特征，这550个特征都是说明商品所属的品类，因此它们也可以放到同一个field中。简单来说，同一个categorical特征经过One-Hot编码生成的数值特征都可以放到同一个field，包括用户性别、职业、品类偏好等。</p></blockquote><p>我的个人理解是：<em>经过one-hot编码的某类特征的特征值的集合称为特征域</em>。</p><p>FFM的数学形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>F</mi><mi>F</mi><mi>M</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><munderover><mo>∑</mo><mrow><msub><mi>j</mi><mn>2</mn></msub><mo>=</mo><msub><mi>j</mi><mn>1</mn></msub><mo>+</mo><mn>1</mn></mrow><mi>n</mi></munderover><mo stretchy="false">(</mo><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow></msub><mo>⃗</mo></mover><mo>⋅</mo><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow></msub><mo>⃗</mo></mover><mo stretchy="false">)</mo><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">FFM(w, x) = w_0 + \sum^{n}_{i=1} w_i x_i + \sum^{n}_{j_1 = 1} \sum^{n}_{j_2 = j_1 + 1} (\vec{w_{j_1, f_{j_2}}} \cdot \vec{w_{j_2, f_{j_1}}}) x_{j_1} x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.14992em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中：</p><p>（1）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">f_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>表示第<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>j</mi></mrow><annotation encoding="application/x-tex">j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span></span></span></span>个特征所属的特征域；</p><p>（2）<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_1, f_{j_2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11392em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span>表示特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>与特征域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">f_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>对应的隐向量，同理<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_2, f_{j_1}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11392em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span>表示特征<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>与特征域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">f_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>对应的隐向量。</p><p>因此FFM与FM的区别是隐特征向量由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><msub><mi>j</mi><mn>1</mn></msub></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.000108em;vertical-align:-0.286108em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span>变成了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_1, f_{j_2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11392em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span>，意味着每种特征都会针对其他特征域学习一个隐向量。当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>两种特征进行交叉时，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>挑出与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>所属特征域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">f_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的<strong>隐向量</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_1, f_{j_2}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11392em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">2</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><strong>与</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>2</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>挑出与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>x</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">x_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>所属特征域<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow><annotation encoding="application/x-tex">f_{j_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的<strong>隐向量</strong><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mover accent="true"><msub><mi>w</mi><mrow><msub><mi>j</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><msub><mi>j</mi><mn>1</mn></msub></msub></mrow></msub><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\vec{w_{j_2, f_{j_1}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.11392em;vertical-align:-0.39992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.05724em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.3569999999999998em;margin-left:-0.10764em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3447999999999998em;margin-left:-0.05724em;margin-right:0.1em;"><span class="pstrut" style="height:2.64444em;"></span><span class="mord mtight">1</span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29964em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3570285714285715em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2355em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39992em;"><span></span></span></span></span></span></span></span></span><strong>进行交叉计算</strong>。</p><p>FFM模型在训练时，需要学习<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span>个特征在<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span></span></span></span>个域上的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>维隐向量，则二阶参数量有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mo>⋅</mo><mi>f</mi><mo>⋅</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">n \cdot f \cdot k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>个，且由于隐向量和域相关，FFM的二阶部分不能化简，所以预测复杂度是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(kn^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathdefault">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。</p><p>FFM实际特征交叉举例：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210311101800384.png" alt="" /></p><h2 id="5-gbdtlr"><a class="markdownIt-Anchor" href="#5-gbdtlr"></a> 5. GBDT+LR</h2><h3 id="1-简介-2"><a class="markdownIt-Anchor" href="#1-简介-2"></a> 1. 简介</h3><p>FFM模型增加了特征交叉能力，但是只能做二阶特征交叉，若提高特征交叉的维度，则会产生组合爆炸和计算复杂度过高的问题。2014年，Facebook提出了基于<a href="http://dl.acm.org/citation.cfm?doid=2648584.2648589">GBDT+LR组合模型</a>的解决方案，其中用GBDT自动进行特征筛选和组合，再把特征向量输入LR模型，这两步是独立训练的，所以不需要把LR的梯度回传到GBDT。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210310205731306.png" alt="GBDT+LR的模型结构图" /></p><h3 id="2-gbdt是什么"><a class="markdownIt-Anchor" href="#2-gbdt是什么"></a> 2. GBDT是什么</h3><blockquote><p>基本结构：决策树组成的树林，通过逐一生成决策子树生成整个树林。</p><p>生成新子树过程：利用样本标签值与当前树林预测值之间的残差。</p><p>学习方式：梯度提升。</p><p>预测方式：把所有子树结果加起来。</p></blockquote><p>理论上，若可以无限生成决策树，则GBDT可以无限逼近目标拟合函数，从而达到减小预测误差的目的。</p><h3 id="3-gbdt的特征转换过程"><a class="markdownIt-Anchor" href="#3-gbdt的特征转换过程"></a> 3. GBDT的特征转换过程</h3><p>GBDT模型训练好之后，输入一个样本，根据每个节点的规则最终落入某一叶子节点，则该节点置为1，其他叶子节点置为0。所有叶子节点组成的向量即形成了该棵树的特征向量。把GBDT所有子树的特征向量连接起来，即形成了该样本的离散型特征向量。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/v2-50d3c5bd27ee9e10f1e1606f3adc6401_1440w.jpg" alt="GBDT生成特征向量的过程" /></p><p>以上图为例，若输入一个样本，分别落在了三颗子树的3，1，4叶节点，则最终的样本特征向量是：[0,0,1,0, 1,0,0,0, 0,0,0,1]。</p><h3 id="4-特点总结"><a class="markdownIt-Anchor" href="#4-特点总结"></a> 4. 特点总结</h3><p>（1）决策树的深度决定了特征交叉的阶数，比FM具有更强的特征交叉能力。</p><p>（2）GBDT容易产生过拟合，且容易丢失特征的数值信息。</p><p>（3）<strong>因此特征交叉能力强不意味着效果就一定会好。</strong></p><p>（4）组合模型的提出意味着特征工程可以完全交由一个独立的模型来完成，模型的输入是原始的特征向量，不需要投入过多人工筛选和模型设计的精力，真正的实现端到端训练。</p><h2 id="6-大规模分段线性模型ls-plm"><a class="markdownIt-Anchor" href="#6-大规模分段线性模型ls-plm"></a> 6. 大规模分段线性模型(LS-PLM）</h2><h3 id="1-简介-3"><a class="markdownIt-Anchor" href="#1-简介-3"></a> 1. 简介</h3><p>LS-PLM（<a href="https://arxiv.org/abs/1704.05194">Large Scale Piece-wise Linear Model</a>），早在2012年就成为了阿里巴巴主流的推荐模型，主要应用于各类广告推荐场景，在2017年公之于众。</p><h3 id="2-模型结构"><a class="markdownIt-Anchor" href="#2-模型结构"></a> 2. 模型结构</h3><p>LS-PLM，结构与三层神经网络相似，在LR的基础上采用分而治之的思想，先对样本进行聚类分类，再对分类的样本使用LR进行CTR预估。因此本质上可以看成是对LR的推广，所以又被称为MLR（Mixed Logistic Regression，混合逻辑回归）模型。比如女装广告的CTR预估不希望把男性用户点击数码类产品的样本数据纳入训练集。</p><h3 id="3-原理"><a class="markdownIt-Anchor" href="#3-原理"></a> 3. 原理</h3><p>LS-PLM的数学形式如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msub><mi>π</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>η</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mrow><mfrac><msup><mi>e</mi><mrow><msub><mi>μ</mi><mi>i</mi></msub><mo>⋅</mo><mi>x</mi></mrow></msup><mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><msup><mi>e</mi><mrow><msub><mi>μ</mi><mi>j</mi></msub><mo>⋅</mo><mi>x</mi></mrow></msup></mrow></mfrac><mo>⋅</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><msub><mi>w</mi><mi>j</mi></msub><mo>⋅</mo><mi>x</mi></mrow></msup></mrow></mfrac></mrow></mrow><annotation encoding="application/x-tex">f(x) = \sum^{m}_{i=1} \pi_{i}(x) \cdot \eta_{i}(x) = \sum^{m}_{i=1}{\frac{e^{\mu_i \cdot x}}{\sum^{m}_{j=1} e^{\mu_j \cdot x}} \cdot \frac{1}{1 + e^{-w_j \cdot x}}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.351115em;"><span style="top:-2.305708em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.43581800000000004em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.616185em;"><span style="top:-3.0050700000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6741149999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301100000000002em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.713401em;"><span style="top:-3.0050700000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.02691em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span><span class="mbin mtight">⋅</span><span class="mord mathdefault mtight">x</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span></span></span></span>为聚类函数，采用了<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>s</mi><mi>o</mi><mi>f</mi><mi>t</mi><mi>m</mi><mi>a</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">softmax</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">s</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mord mathdefault">t</span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span></span></span></span>函数对样本进行多分类。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>为超参数，表示分类数，可以较好的平衡模型的拟合与推广能力。当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，LS-PLM退化为LR。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">m</span></span></span></span>越大，表示能力越精确，拟合能力越强，但是参数量越大。</p><p>在每个分类内部构件LR模型，将每个样本的各个分类概率与LR的得分进行加权平均，得到最终的预估值。</p><h3 id="4-模型优点"><a class="markdownIt-Anchor" href="#4-模型优点"></a> 4. 模型优点</h3><p>（1）端到端的非线性学习能力。LS-PLM的分类能力使得模型可以提取样本中的非线性特征，省去了大量的人工样本处理和特征工程的过程，可以完成端到端的训练。</p><p>（2）模型的稀疏性强。LS-PLM建模时引入了L1和L2范数，使得最终训练完的模型具有较高的稀疏性，因此部署时更加轻量级。</p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><p>《深度学习推荐系统》 – 王喆</p><p><a href="https://tech.meituan.com/2016/03/03/deep-understanding-of-ffm-principles-and-practices.html">深入FFM原理与实践 – 美团技术团队</a></p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/d6641ee8.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-协同过滤cf&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-协同过滤cf&quot;&gt;&lt;/a&gt; 1. 协同过滤(CF)&lt;/h2&gt;
&lt;h3 id=&quot;1-里程碑&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-里</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="传统算法" scheme="https://www.notlate.net/tags/%E4%BC%A0%E7%BB%9F%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记07：推荐架构、特征提取、线上服务融会贯通</title>
    <link href="https://www.notlate.net/posts/4fddc052.html"/>
    <id>https://www.notlate.net/posts/4fddc052.html</id>
    <published>2021-01-05T13:13:40.000Z</published>
    <updated>2021-03-18T15:04:38.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="基础架构-特征工程-线上服务融会贯通"><a class="markdownIt-Anchor" href="#基础架构-特征工程-线上服务融会贯通"></a> 基础架构、特征工程、线上服务融会贯通</h3><p><img src="dcbb6cf20283ee362235255841b00c9f.jpg" alt="" /></p><p>一张脑图比较大，加载比较慢。</p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/4fddc052.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;基础架构-特征工程-线上服务融会贯通&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基础架构-特征工程-线上服务融会贯通&quot;&gt;&lt;/a&gt; 基础架构、特征工程、线上服务融会贯通&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;dcbb6cf20283ee</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记06：推荐系统线上服务相关</title>
    <link href="https://www.notlate.net/posts/9eb245b5.html"/>
    <id>https://www.notlate.net/posts/9eb245b5.html</id>
    <published>2021-01-05T13:12:40.000Z</published>
    <updated>2021-03-18T15:04:38.506Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-高并发线上服务"><a class="markdownIt-Anchor" href="#1-高并发线上服务"></a> 1. 高并发线上服务</h2><h3 id="1-工业级推荐服务器功能"><a class="markdownIt-Anchor" href="#1-工业级推荐服务器功能"></a> 1. 工业级推荐服务器功能</h3><img src="https://gitee.com/acdance/img/raw/master/blogs/c16ef5cbebc41008647425083b7b38ed.jpeg" alt="工业级推荐模型部分" style="zoom:33%;" /><ol><li>需要跟离线训练好的模型打交道，把离线模型进行上线，在线进行模型服务（Model Serving），</li><li>需要跟数据库打交道，把候选物品和离线处理好的特征载入到服务器</li><li>召回层、排序层、业务逻辑(结果多样性、流行度)</li><li>AB 测试</li></ol><h3 id="2-高并发推荐服务整体架构"><a class="markdownIt-Anchor" href="#2-高并发推荐服务整体架构"></a> 2. 高并发推荐服务整体架构</h3><ol><li><h4 id="负载均衡nginx或专门的硬件级负载均衡设备"><a class="markdownIt-Anchor" href="#负载均衡nginx或专门的硬件级负载均衡设备"></a> 负载均衡：nginx或专门的硬件级负载均衡设备</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/a2daf129556bc3b9fd7dcde4230db8e1.jpeg" alt="负载均衡示意图" style="zoom:33%;" /><p>负载均衡策略：</p><ul><li>如果硬件配置基本一样且部署服务一样，就采用轮询或者随机的负载均衡策略</li><li>如果硬件配置不同，可以根据硬件的计算能力做加权的负载均衡策略</li><li>同样也可以利用源地址hash做策略</li><li>关于扩容和缩容：可以根据系统负载情况做动态调整</li></ul></li><li><h4 id="缓存"><a class="markdownIt-Anchor" href="#缓存"></a> 缓存</h4><p>(1) 预先缓存好几类新用户的推荐列表</p><p>(2) 利用新用户有限的信息，比如ip，注册信息等做一个简单的聚类，为每个人群聚类产生合适的推荐列表提前缓存</p><p>(3) 缓存有TTL过期时间</p></li><li><h4 id="推荐服务降级机制"><a class="markdownIt-Anchor" href="#推荐服务降级机制"></a> 推荐服务降级机制</h4><p>(1) 抛弃原本的复杂逻辑，采用最保险、最简单、最不消耗资源的降级服务来渡过特殊时期</p><p>(2) 要有成熟的监控系统</p></li></ol><h2 id="2-推荐特征存储"><a class="markdownIt-Anchor" href="#2-推荐特征存储"></a> 2. 推荐特征存储</h2><ol><li><h4 id="存储模块设计原则分级存储把越频繁访问的数据放到越快的数据库甚至缓存中把海量的全量数据放到廉价但是查询速度较慢的数据库中"><a class="markdownIt-Anchor" href="#存储模块设计原则分级存储把越频繁访问的数据放到越快的数据库甚至缓存中把海量的全量数据放到廉价但是查询速度较慢的数据库中"></a> 存储模块设计原则：分级存储，把越频繁访问的数据放到越快的数据库甚至缓存中，把海量的全量数据放到廉价但是查询速度较慢的数据库中。</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/0310b59276fde9eeec5d9cd946fef078.jpeg" alt="存储模块设计原则" style="zoom:33%;" /></li><li><h4 id="存储示例"><a class="markdownIt-Anchor" href="#存储示例"></a> 存储示例：</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/5f76090e7742593928eaf118d72d2b08-20210116175226637.jpeg" alt="总结" style="zoom:25%;" /></li><li><h4 id="redis使用经验"><a class="markdownIt-Anchor" href="#redis使用经验"></a> Redis使用经验：</h4><p>（1）redis keys命令不能用在生产环境中，如果数量过大效率十分低，导致redis长时间堵塞在keys上。生产环境我们一般选择提前载入一些warm up物品id的方式载入物品embedding</p><p>（2）Redis value 可以用protobuf格式存储, 存储上节省空间. 解析起来相比string, cpu的效率也应该会更高</p><p>（3）把item embedding提前加载到内存里</p><p>（4）关于user embedding，指定一个内存区域的大小，用FIFO的方案来缓存，这样内存用完了，就自动把早进来的用户pop出去</p><p>（5）如果有条件可以判断活跃用户，可以尽量选择活跃用户进行缓存</p></li></ol><h2 id="3-召回层"><a class="markdownIt-Anchor" href="#3-召回层"></a> 3. 召回层</h2><h3 id="1-作用"><a class="markdownIt-Anchor" href="#1-作用"></a> 1. 作用</h3><p>快速又准确地筛选掉不相关物品，从而节约排序时所消耗的计算资源。</p><h3 id="2-与排序层的比较"><a class="markdownIt-Anchor" href="#2-与排序层的比较"></a> 2. 与排序层的比较</h3><img src="https://gitee.com/acdance/img/raw/master/blogs/5535a3d83534byy54ab201e865ec4a7e.jpeg" alt="召回层与排序层比较" style="zoom:50%;" /><h3 id="3-指标"><a class="markdownIt-Anchor" href="#3-指标"></a> 3. 指标</h3><ol><li>计算速度</li><li>召回率</li></ol><h3 id="4-技术"><a class="markdownIt-Anchor" href="#4-技术"></a> 4. 技术</h3><ol><li><h4 id="单策略召回"><a class="markdownIt-Anchor" href="#单策略召回"></a> 单策略召回</h4><p>（1）概念：通过制定一条规则或者利用一个简单模型来快速地召回可能的相关物品。规则其实就是用户可能感兴趣的物品的特点。</p><p>（2）优点：简单直观，计算速度非常快</p><p>（3）缺点：局限性很大</p></li><li><h4 id="多路召回"><a class="markdownIt-Anchor" href="#多路召回"></a> 多路召回</h4><p>（1）概念：采用不同的策略、特征或简单模型，分别召回一部分候选集，然后把候选集混合在一起供后续排序模型使用的策略</p><p>（2）优点：平衡计算速度与召回率</p><p>（3）缺点：在确定每一路的召回物品数量时，往往需要大量的人工参与和调整，具体的数值需要经过大量线上 AB 测试来决定。同时，策略之间的信息和数据是割裂的，所以我们很难综合考虑不同策略对一个物品的影响</p></li><li><h4 id="基于embedding的召回"><a class="markdownIt-Anchor" href="#基于embedding的召回"></a> 基于Embedding的召回</h4><p>（1）概念：利用物品和用户 Embedding 相似性来构建召回层</p><p>（2）优点：</p><ul><li><p>多路召回中使用的“兴趣标签”“热门度”“流行趋势”“物品属性”等信息都可以作为 Embedding 方法中的附加信息（Side Information），融合进最终的 Embedding 向量中，相当于考虑到了多路召回的多种策略。</p></li><li><p>Embedding 召回的评分具有连续性，可以把 相似度作为唯一的判断标准，因此它可以随意限定召回的候选集大小。</p></li><li><p>在线上服务的过程中，Embedding 相似性的计算也相对简单和直接。通过简单的点积或余弦相似度的运算就能够得到相似度得分，便于线上的快速召回。</p></li></ul></li><li><h4 id="横向比较三种技术"><a class="markdownIt-Anchor" href="#横向比较三种技术"></a> 横向比较三种技术</h4><img src="https://gitee.com/acdance/img/raw/master/blogs/2fc1eyyefd964f7b65715de6f896c480.jpeg" alt="三种召回横向比较" style="zoom:33%;" /></li></ol><h3 id="5-召回层经典问答"><a class="markdownIt-Anchor" href="#5-召回层经典问答"></a> 5. 召回层经典问答</h3><ol><li><h4 id="电商领域商品维度非常大eges训练过慢怎么办"><a class="markdownIt-Anchor" href="#电商领域商品维度非常大eges训练过慢怎么办"></a> 电商领域商品维度非常大，EGES训练过慢，怎么办？</h4><p><code>EGES 指的是阿里提出的一种 Graph Embedidng 方法，全称是 Enhanced Graph Embedding with Side Information，补充信息增强图 Embedding。它是一种融合了经典的 Deep Walk Graph Embedding 结果和其他特征的 Embedding 方法</code>，具体步骤如下：</p><p>（1）把商品embedding进行预训练，再跟其他side information特征一起输入EGES。</p><p>（2）hash方法</p><p>（3）商品的聚类后输入，比如非常类似的商品，可以用一个商品id替代，当作一个商品来处理。这个方法airbnb embedding的论文讲的非常好。</p></li><li><h4 id="用户embedding怎么计算的"><a class="markdownIt-Anchor" href="#用户embedding怎么计算的"></a> 用户Embedding怎么计算的？</h4><p>最简单的user embedding生成方法。之前我们说过embedding之间是可以进行运算的。所以用用户喜欢的物品的embedding平均去代表这个用户是非常直观且实用</p></li><li><h4 id="多路召回中topk除了根据经验值确定业界通用的是怎么确定k得大小呢"><a class="markdownIt-Anchor" href="#多路召回中topk除了根据经验值确定业界通用的是怎么确定k得大小呢"></a> 多路召回中，topk除了根据经验值确定，业界通用的是怎么确定k得大小呢？</h4><p>在系统延迟允许的情况下，其实k取的越大越好。一般来说，如果最后的推荐结果需要n条，k取5-10n是比较合适的。</p></li><li><h4 id="如果基于兴趣标签做召回同一个物品有多个标签用户也计算出了多个兴趣标签如何做用户的多兴趣标签与物品的最优匹配呢若物品标签有多层怎么利用上一层的标签呢"><a class="markdownIt-Anchor" href="#如果基于兴趣标签做召回同一个物品有多个标签用户也计算出了多个兴趣标签如何做用户的多兴趣标签与物品的最优匹配呢若物品标签有多层怎么利用上一层的标签呢"></a> 如果基于兴趣标签做召回，同一个物品有多个标签，用户也计算出了多个兴趣标签，如何做用户的多兴趣标签与物品的最优匹配呢？若物品标签有多层，怎么利用上一层的标签呢？</h4><p>（1）简单做法：把兴趣标签转成MultiHot向量，然后计算用户和物品的相似度。</p><p>（2）复杂一点：计算每个兴趣标签的TF-IDF，为标签分配权重后，再转成MultiHot向量。</p><p>（3）若标签有多层，不妨把多层标签全部放到MultiHot向量中，高层标签的权重可以适当降低。</p></li></ol><h2 id="4-局部敏感哈希lsh"><a class="markdownIt-Anchor" href="#4-局部敏感哈希lsh"></a> 4. 局部敏感哈希(LSH)</h2><h3 id="1-思想"><a class="markdownIt-Anchor" href="#1-思想"></a> 1. 思想</h3><p>召回与用户向量最相似的物品 Embedding 向量这一问题，其实就是在向量空间内搜索最近邻的过程。</p><h3 id="2-如何搜索最近邻"><a class="markdownIt-Anchor" href="#2-如何搜索最近邻"></a> 2. 如何搜索最近邻？</h3><ol><li><h4 id="聚类"><a class="markdownIt-Anchor" href="#聚类"></a> 聚类</h4><p>（1）常见方法：K-means等</p><p>（2）存在的问题：</p><ul><li><p>聚类边缘的点的最近邻往往会包括相邻聚类的点，如果我们只在类别内搜索，就会遗漏这些近似点</p></li><li><p>中心点的数量 k 也不那么好确定，k 选得太大，离线迭代的过程就会非常慢，k 选得太小，在线搜索的范围还是很大，并没有减少太多搜索时间</p></li></ul></li><li><h4 id="索引"><a class="markdownIt-Anchor" href="#索引"></a> 索引</h4><p>（1）实现方法：向量空间索引方法 Kd-tree（K-dimension tree）</p><img src="https://gitee.com/acdance/img/raw/master/blogs/dfb2c271d9eaa3a29054d2aea24b5e3f.jpeg" alt="向量空间索引方法" style="zoom:33%;" /><p>先用红色的线把点云一分为二，再用深蓝色的线把各自片区的点云一分为二，以此类推，直到每个片区只剩下一个点，这就完成了空间索引的构建。</p><p>（2）存在的问题：</p><ul><li>会遗漏掉最近邻点，它只能保证快速搜索到近似的最近邻点集合</li><li>Kd-tree 索引的结构并不简单，离线和在线维护的过程也相对复杂，这些都是它的弊端</li></ul></li><li><h4 id="局部敏感哈希和多桶"><a class="markdownIt-Anchor" href="#局部敏感哈希和多桶"></a> 局部敏感哈希和多桶</h4><p>（1）基本思想：希望让相邻的点落入同一个“桶”，这样在进行最近邻搜索时，我们仅需要在一个桶内，或相邻几个桶内的元素中进行搜索即可</p><p>（2）定性结论：<strong>欧式空间中，将高维空间的点映射到低维空间，原本接近的点在低维空间中肯定依然接近，但原本远离的点则有一定概率变成接近的点</strong></p><p>（3）构建单桶：</p><ul><li>假设<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>是高维空间中的<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span>维 Embedding 向量，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>是随机生成的 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span> 维映射向量。那我们*利用内积操作可以将$ v $映射到一维空间，得到数值 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>v</mi><mo>⋅</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">h(v)=v⋅x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>。</li><li>使用哈希函数$ h(v) <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">进</mi><mi mathvariant="normal">行</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">桶</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">公</mi><mi mathvariant="normal">式</mi><mi mathvariant="normal">为</mi><mi mathvariant="normal">：</mi></mrow><annotation encoding="application/x-tex">进行分桶，公式为：</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">进</span><span class="mord cjk_fallback">行</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">桶</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">公</span><span class="mord cjk_fallback">式</span><span class="mord cjk_fallback">为</span><span class="mord cjk_fallback">：</span></span></span></span>h^{x,b}(v)=⌊\frac{x⋅v+b}{w}⌋<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">，</mi></mrow><annotation encoding="application/x-tex">，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span></span></span></span>w$ 是分桶宽度，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span></span></span></span>是$ 0 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">到</mi></mrow><annotation encoding="application/x-tex">到</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">到</span></span></span></span> w <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">间</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">一</mi><mi mathvariant="normal">个</mi><mi mathvariant="normal">均</mi><mi mathvariant="normal">匀</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">布</mi><mi mathvariant="normal">随</mi><mi mathvariant="normal">机</mi><mi mathvariant="normal">变</mi><mi mathvariant="normal">量</mi><mi mathvariant="normal">，</mi><mi mathvariant="normal">避</mi><mi mathvariant="normal">免</mi><mi mathvariant="normal">分</mi><mi mathvariant="normal">桶</mi><mi mathvariant="normal">边</mi><mi mathvariant="normal">界</mi><mi mathvariant="normal">固</mi><mi mathvariant="normal">化</mi><mi mathvariant="normal">。</mi></mrow><annotation encoding="application/x-tex">间的一个均匀分布随机变量，避免分桶边界固化。</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">间</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">均</span><span class="mord cjk_fallback">匀</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">布</span><span class="mord cjk_fallback">随</span><span class="mord cjk_fallback">机</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">避</span><span class="mord cjk_fallback">免</span><span class="mord cjk_fallback">分</span><span class="mord cjk_fallback">桶</span><span class="mord cjk_fallback">边</span><span class="mord cjk_fallback">界</span><span class="mord cjk_fallback">固</span><span class="mord cjk_fallback">化</span><span class="mord cjk_fallback">。</span></span></span></span>x<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">和</mi></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span>b<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi mathvariant="normal">的</mi><mi mathvariant="normal">改</mi><mi mathvariant="normal">变</mi><mi mathvariant="normal">会</mi><mi mathvariant="normal">生</mi><mi mathvariant="normal">成</mi><mi mathvariant="normal">不</mi><mi mathvariant="normal">同</mi><mi mathvariant="normal">的</mi><mi mathvariant="normal">哈</mi><mi mathvariant="normal">希</mi><mi mathvariant="normal">函</mi><mi mathvariant="normal">数</mi></mrow><annotation encoding="application/x-tex">的改变会生成不同的哈希函数</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">改</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">会</span><span class="mord cjk_fallback">生</span><span class="mord cjk_fallback">成</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">同</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">哈</span><span class="mord cjk_fallback">希</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span></span></span></span> h(v) $。</li><li>随机调整b，生成多个hash函数，并且采用或的方式组合，就可以一定程度避免这些边界点的问题</li></ul><p>（4）构建多桶：采用 m 个哈希函数同时进行分桶，如果两个点同时掉进了 m 个桶，那它们是相似点的概率将大大增加。</p><p>（5）如何处理多桶关系：</p><ul><li>且(And)操作：最大程度地减少候选点数量，也增大了漏掉最近邻点的概率。</li><li>或(Or)操作：减少了漏掉最近邻点的可能性，也增大了后续计算的开销。</li></ul><p>（6）多桶策略实际建议：</p><ul><li>点数越多，我们越应该增加每个分桶函数中桶的个数；相反，点数越少，我们越应该减少桶的个数；</li><li>Embedding 向量的维度越大，我们越应该增加哈希函数的数量，尽量采用且的方式作为多桶策略；相反，Embedding 向量维度越小，我们越应该减少哈希函数的数量，多采用或的方式作为分桶策略。</li></ul></li><li><h4 id="向量最近邻搜索库-faiss可以替代lsh"><a class="markdownIt-Anchor" href="#向量最近邻搜索库-faiss可以替代lsh"></a> 向量最近邻搜索库 FAISS，可以替代LSH</h4><p><a href="https://github.com/facebookresearch/faiss">Facebook 的开源向量最近邻搜索库 FAISS</a></p></li></ol><h2 id="5-模型服务"><a class="markdownIt-Anchor" href="#5-模型服务"></a> 5. 模型服务</h2><h3 id="1-业界主流模型服务方法"><a class="markdownIt-Anchor" href="#1-业界主流模型服务方法"></a> 1. 业界主流模型服务方法</h3><ol><li><h4 id="预存推荐结果或-embedding-结果"><a class="markdownIt-Anchor" href="#预存推荐结果或-embedding-结果"></a> 预存推荐结果或 Embedding 结果</h4><p>（1）原理：在离线环境下生成对每个用户的推荐结果，然后将结果预存到以 Redis 为代表的线上数据库中。这样，我们在线上环境直接取出预存数据推荐给用户即可。</p><p>（2）优缺点：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210116194602083.png" alt="预存Embedding优缺点" style="zoom:50%;" /><p>（3）适用场景：用户规模较小，或者一些冷启动、热门榜单等特殊的应用场景中。</p></li><li><h4 id="预训练-embedding轻量级线上模型"><a class="markdownIt-Anchor" href="#预训练-embedding轻量级线上模型"></a> 预训练 Embedding+轻量级线上模型</h4><p>（1）原理：用复杂深度学习网络离线训练生成 Embedding，存入内存数据库，再在线上实现逻辑回归或浅层神经网络等轻量级模型来拟合优化目标</p><p>（2）案例：阿里的MIMN（Multi-channel user Interest Memory Network，多通道用户兴趣记忆网络）</p><img src="https://gitee.com/acdance/img/raw/master/blogs/1e0c2a6c404786b709c5177f7d337553.jpg" alt="MIMN结构图" style="zoom:33%;" /><ul><li>左边的部分不管多复杂，它们其实是在线下训练生成的，而右边的部分是一个经典的多层神经网络，它才是真正在线上服务的部分。</li><li>S(1)-S(m) 和 M(1)-M(m)是在离线生成的 Embedding 向量，在 MIMN 模型中，它们被称为“多通道用户兴趣向量”，这些 Embedding 向量就是连接离线模型和线上模型部分的接口。</li><li>线上部分从 Redis 之类的模型数据库中拿到这些离线生成 Embedding 向量，然后跟其他特征的 Embedding 向量组合在一起，扔给一个标准的多层神经网络进行预估。</li></ul><p>（3）优缺点：</p><ul><li>优点：隔离了离线模型的复杂性和线上推断的效率要求。</li><li>缺点：割裂了模型，不是端到端训练+部署的完美方案</li></ul></li><li><h4 id="pmml-模型"><a class="markdownIt-Anchor" href="#pmml-模型"></a> PMML 模型</h4><p>（1）介绍：全称是“预测模型标记语言”(Predictive Model Markup Language, PMML)，它是一种通用的以 XML 的形式表示不同模型结构参数的标记语言。在模型上线的过程中，PMML 经常作为中间媒介连接离线训练平台和线上预测平台。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/835f47b8c7eac3e18711c8c6e22dbd8b.jpeg" alt="PMML示意图" style="zoom:33%;" /><p>（2）优缺点：</p><ul><li>优点：PMML 在 Java Server 部分只进行推断，不考虑模型训练、分布式部署等一系列问题，因此 library 比较轻，能够高效地完成推断过程。</li><li>缺点：对于具有复杂结构的深度学习模型来说，PMML 语言的表示能力还是比较有限的，还不足以支持复杂的深度学习模型结构。</li></ul></li><li><h4 id="tensorflow-serving"><a class="markdownIt-Anchor" href="#tensorflow-serving"></a> TensorFlow Serving</h4><p>原理：模型存储、模型载入还原以及提供服务</p></li></ol><h3 id="2-几种方法横向比较"><a class="markdownIt-Anchor" href="#2-几种方法横向比较"></a> 2. 几种方法横向比较</h3><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210203203327254.png" alt="模型Serving方法比较" /></p><h3 id="3-embedding经验"><a class="markdownIt-Anchor" href="#3-embedding经验"></a> 3. Embedding经验</h3><ol><li><h4 id="embedding层k值的选择"><a class="markdownIt-Anchor" href="#embedding层k值的选择"></a> Embedding层K值的选择</h4><p>经验公式：K = Embedding维数开4次方，x初始的维度数，后续K的调参按照2的倍数进行调整。</p></li></ol><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/9eb245b5.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-高并发线上服务&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-高并发线上服务&quot;&gt;&lt;/a&gt; 1. 高并发线上服务&lt;/h2&gt;
&lt;h3 id=&quot;1-工业级推荐服务器功能&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="线上服务" scheme="https://www.notlate.net/tags/%E7%BA%BF%E4%B8%8A%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记05：Embedding技术</title>
    <link href="https://www.notlate.net/posts/ba149af9.html"/>
    <id>https://www.notlate.net/posts/ba149af9.html</id>
    <published>2021-01-05T13:02:30.000Z</published>
    <updated>2021-03-18T15:04:38.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-embedding是什么"><a class="markdownIt-Anchor" href="#1-embedding是什么"></a> 1. Embedding是什么</h3><p>Embedding 就是用一个数值向量“表示”一个对象（Object）的方法</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221242798.png" alt="Embedding示意图" style="zoom:50%;" /><p>解读1：左边例子，从 king 到 queen 的向量和从 man 到 woman 的向量，无论从方向还是尺度来说它们都非常接近。</p><p>解读2：右边例子也很典型，从 walking 到 walked 和从 swimming 到 swam 的向量基本一致，这说明词向量揭示了词之间的时态关系</p><h3 id="2-embedding技术的重要性"><a class="markdownIt-Anchor" href="#2-embedding技术的重要性"></a> 2. Embedding技术的重要性</h3><h4 id="1处理稀疏特征的利器"><a class="markdownIt-Anchor" href="#1处理稀疏特征的利器"></a> （1）处理稀疏特征的利器</h4><p>1）大量使用 One-hot 编码会导致样本特征向量极度稀疏</p><p>2）深度学习的结构特点又不利于稀疏特征向量的处理，原因如下：</p><p>​① 特征过于稀疏会导致整个网络的收敛非常慢，因为每一个样本的学习只有极少数的权重会得到更新，这在样本数量有限的情况下会导致模型不收敛。</p><p>​② One-hot 类稀疏特征的维度往往非常地大，可能会达到千万甚至亿的级别，如果直接连接进入深度学习网络，那整个模型的参数数量会非常庞大，这对于一般公司的算力开销来说都是吃不消的。</p><p>3） 因此由 Embedding 层负责将稀疏高维特征向量转换成稠密低维特征向量。</p><h4 id="2可以融合大量有价值信息本身就是极其重要的特征向量"><a class="markdownIt-Anchor" href="#2可以融合大量有价值信息本身就是极其重要的特征向量"></a> （2）可以融合大量有价值信息，本身就是极其重要的特征向量</h4><p>1）相比由原始信息直接处理得来的特征向量，Embedding 的表达能力更强</p><p>2）Graph Embedding 技术被提出后，Embedding 几乎可以引入任何信息进行编码，使其本身就包含大量有价值的信息</p><h3 id="3-embedding的实现技术"><a class="markdownIt-Anchor" href="#3-embedding的实现技术"></a> 3. Embedding的实现技术</h3><h4 id="1word2vec首次成功应用"><a class="markdownIt-Anchor" href="#1word2vec首次成功应用"></a> （1）Word2Vec：首次成功应用</h4><p>1）Word2Vec，2013年由谷歌提出。模型分为两种形式：CBOW(连续词袋模型：由相邻词预测中间词)和Skip-gram(跳词模型：由当前词预测前后相邻词)。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221254567.png" alt="Word2Vec的两种训练方式" style="zoom:50%;" /><p>2）训练方法：</p><p>​① 准备语料</p><p>​② 分词，去掉停用词等无实际含义词</p><p>​③ 生成词序列</p><p>​④ 选取滑动窗口N，通过截取词组的方式生成训练样本</p><p>​⑤ 模型训练（可以基于开源项目）</p><p>3）模型结构：本质是一个三层神经网络</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221303479.png" alt="Word2Vec模型结构" style="zoom:50%;" /><p>​① 隐层激活函数：没有或者说输入即输出的恒等函数</p><p>​② 输出激活函数： softmax</p><p>4）词向量：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221312355.png" alt="词向量训练结果" style="zoom:50%;" /><p>​① 输入层到隐层的权重矩阵<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>W</mi><mrow><mi>V</mi><mo>∗</mo><mi>N</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{V*N}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.22222em;">V</span><span class="mbin mtight">∗</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（输入向量矩阵） 的每一个行向量对应的就是我们要找的“词向量”。同理输出向量矩阵也可以表示，但是通常习惯使用输入向量矩阵表示“词向量”。</p><p>​② 把输入向量矩阵转换成词向量查找表（Lookup table）</p><p>5）延伸：Word2vec还有非常多的知识点值得细细挖掘，比如：模型结构、目标函数、负采样方法、负采样中的目标函数等。建议看一下《动手学深度学习》的相关内容：<a href="http://zh.gluon.ai/chapter_natural-language-processing/word2vec.html">10.1词嵌入</a>和<a href="http://zh.gluon.ai/chapter_natural-language-processing/approx-training.html">10.2近似计算</a>。</p><h4 id="2item2vec万物皆embedding"><a class="markdownIt-Anchor" href="#2item2vec万物皆embedding"></a> （2）Item2Vec：万物皆Embedding</h4><p>1）Item2Vec，2015年由微软提出，它是对 Word2vec 方法的推广，使 Embedding 方法适用于几乎所有的<strong>序列数据</strong>。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221321966.png" alt="Item2Vec与Word2Vec对比" style="zoom:50%;" /><p>2）Item2Vec 模型的技术细节几乎和 Word2vec 完全一致，只要能够用序列数据的形式把要表达的对象表示出来，再把序列数据“喂”给 Word2vec 模型，就能够得到任意物品的 Embedding了。</p><h4 id="3graph-embedding"><a class="markdownIt-Anchor" href="#3graph-embedding"></a> （3）Graph Embedding</h4><p>1）互联网的数据可不仅仅是序列数据那么简单，越来越多的数据被我们以图的形式展现出来。典型的图结构数据示意图：</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221333959.png" alt="图结构数据" style="zoom:50%;" /><p>​① <strong>社交关系</strong>：从社交网络中，我们可以发现意见领袖，可以发现社区，再根据这些“社交”特性进行社交化的推荐。<strong>如果我们可以对社交网络中的节点进行 Embedding 编码，社交化推荐的过程将会非常方便</strong>。</p><p>​② 知识图谱：知识图谱中包含了不同类型的知识主体（如人物、地点等），附着在知识主体上的属性（如人物描述，物品特点），以及主体和主体之间、主体和属性之间的关系。<strong>如果我们能够对知识图谱中的主体进行 Embedding 化，就可以发现主体之间的潜在关系，这对于基于内容和知识的推荐系统是非常有帮助的</strong>。</p><p>​③ <strong>行为关系</strong>：由用户和物品组成的“二部图”，借助这样的关系图，我们自然能够<strong>利用 Embedding 技术发掘出物品和物品之间、用户和用户之间，以及用户和物品之间的关系</strong>，从而应用于推荐系统的进一步推荐。</p><h4 id="2deep-walk基于随机游走的-graph-embedding-方法"><a class="markdownIt-Anchor" href="#2deep-walk基于随机游走的-graph-embedding-方法"></a> 2）Deep Walk：基于随机游走的 Graph Embedding 方法</h4><p>​① Deep Walk，2014年由美国石溪大学的研究者提出。</p><p>​② 主要思想：由物品组成的图结构上进行随机游走，产生大量物品序列，然后将这些物品序列作为训练样本输入 Word2vec 进行训练，最终得到物品的 Embedding。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221342914.png" alt="图结构数据转成序列数据的方法" /></p><p>​③ 跳转概率：就是遍历 vi 的邻接点 vj 的概率。</p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221348626.png" alt="跳转概率" style="zoom:50%;" /><p>&lt;1&gt; 有向有权图：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mo>+</mo></msub><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N_+(v_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所有的出边集合，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">M_{ij}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>到节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">v_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>的边的权重，即跳转概率是跳转边的权重占所有相关出边权重之和的比例</p><p>&lt;2&gt; 无向无权图：是上述公式的特例，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>M</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">M_{ij}=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>N</mi><mo>+</mo></msub><mo stretchy="false">(</mo><msub><mi>v</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N_+(v_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.25833100000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>是节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>v</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">v_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>所有的边集合。<!--没看懂--></p><h4 id="3-node2vec在同质性和结构性间权衡的方法"><a class="markdownIt-Anchor" href="#3-node2vec在同质性和结构性间权衡的方法"></a> 3） Node2Vec：在同质性和结构性间权衡的方法</h4><p>① Node2Vec，2016年由斯坦福大学的研究者提出。</p><p>② 主要思想：基于Deep Walk，Node2vec 通过调整随机游走跳转概率的方法，让 Graph Embedding 的结果在网络的**同质性（Homophily）<strong>和</strong>结构性（Structural Equivalence）**中进行权衡，可以进一步把不同的 Embedding 输入推荐模型，让推荐系统学习到不同的网络结构特点。</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221355654.png" alt="Node2Vec结构示意图" /></p><p>③ 同质性：距离相近节点的 Embedding 应该尽量近似，<strong>让游走的过程更倾向于 DFS</strong>。示例：节点 u 与其相连的节点 s1、s2、s3、s4的 Embedding 表达应该是接近的。</p><p>④ 结构性：结构上相似的节点的 Embedding 应该尽量接近，<strong>让随机游走要更倾向于 BFS</strong>。示例：节点 u 和节点 s6都是各自局域网络的中心节点，它们在结构上相似，所以它们的 Embedding 表达也应该近似。</p><p>⑤ 跳转概率：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>π</mi><mrow><mi>v</mi><mi>x</mi></mrow></msub><mo>=</mo><msub><mi>α</mi><mrow><mi>p</mi><mi>q</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">⋅</mo><msub><mi>w</mi><mrow><mi>v</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\pi_{vx}=\alpha_{pq}(t,x)·w_{vx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221404937.png" alt="跳转概率" style="zoom:50%;" /><p>&lt;1&gt; <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>w</mi><mrow><mi>v</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">w_{vx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">v</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">vx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span><span class="mord mathdefault">x</span></span></span></span>的原始权重，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>α</mi><mrow><mi>p</mi><mi>q</mi></mrow></msub><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha_{pq}(t,x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">p</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>如上图所示，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>d</mi><mrow><mi>t</mi><mi>x</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d_{tx}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">t</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>表示节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathdefault">t</span></span></span></span>和距离节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>(节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>的下一个节点)的距离。</p><p>&lt;2&gt; 参数 p 被称为返回参数（Return Parameter），p 越小，随机游走回节点 t 的可能性越大，Node2vec 就更注重表达网络的结构性</p><p>&lt;3&gt; 参数 q 被称为进出参数（In-out Parameter），q 越小，随机游走到远方节点的可能性越大，Node2vec 更注重表达网络的同质性。</p><p>&lt;4&gt; <strong>计算出的概率需要做归一化，使节点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">v</span></span></span></span>到所有下一个节点的概率和为1。</strong></p><h3 id="4-embedding的应用方法"><a class="markdownIt-Anchor" href="#4-embedding的应用方法"></a> 4. Embedding的应用方法</h3><h4 id="1直接应用"><a class="markdownIt-Anchor" href="#1直接应用"></a> 1）直接应用</h4><p>① 利用物品 Embedding 间的相似性实现相似物品推荐</p><p>② 利用物品 Embedding 和用户 Embedding 的相似性实现“猜你喜欢”等经典推荐功能</p><p>③ 利用物品 Embedding 实现推荐系统中的召回层</p><h4 id="2预训练应用"><a class="markdownIt-Anchor" href="#2预训练应用"></a> 2）预训练应用</h4><p>把这些 Embedding 向量作为特征向量的一部分，跟其余的特征向量拼接起来，作为推荐模型的输入参与训练</p><h4 id="3end2end应用端到端训练"><a class="markdownIt-Anchor" href="#3end2end应用端到端训练"></a> 3）End2End应用：端到端训练</h4><p>① 概念：不预先训练 Embedding，而是把 Embedding 的训练与深度学习推荐模型结合起来，采用统一的、端到端的方式一起训练，直接得到包含 Embedding 层的推荐模型</p><p>② 案例：微软的<code>Deep Crossing</code>，UCL 提出的 <code>FNN</code> 和 Google 的 <code>Wide&amp;Deep</code></p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128221412660.png" alt="端到端训练" style="zoom:59%;" /><h4 id="4常用的向量相似度计算法方法"><a class="markdownIt-Anchor" href="#4常用的向量相似度计算法方法"></a> 4）常用的向量相似度计算法方法</h4><p>请参考<a href="https://cloud.tencent.com/developer/article/1668762">《计算向量间相似度的常用方法》</a>。</p><h3 id="5-经典问答"><a class="markdownIt-Anchor" href="#5-经典问答"></a> 5. 经典问答</h3><h4 id="1-比较-预训练与端到端训练区别"><a class="markdownIt-Anchor" href="#1-比较-预训练与端到端训练区别"></a> 1. 比较： 预训练与端到端训练区别</h4><p>Embedding预训练的优点：</p><p>① 更快。因为对于End2End的方式，Embedding层的优化还受推荐算法的影响，这会增加计算量。</p><p>② 难收敛。推荐算法是以Embedding为前提的，在端到端的方式中，训练初期由于Embedding层的结果没有意义，所以推荐模块的优化也可能不太有意义，可能无法有效收敛。</p><p>Embedding端到端的优点：</p><p>① 能够找到Embedding层在这个模型结构下的最优解。因为端到端将Embedding训练和推荐算法连接起来训练，那么Embedding层可以学习到最有利于推荐目标的Embedding结果。</p><h4 id="2-deep-walk的优点和特点"><a class="markdownIt-Anchor" href="#2-deep-walk的优点和特点"></a> 2. Deep walk的优点和特点</h4><p>① 去掉多余噪音信息，关注主要矛盾，所以一般要生成比原样本更少的样本量</p><p>② deep walk的抽样过程保留了转移矩阵的“主要框架”，但同时当抽样次数不太高的时候，item embedding的覆盖率反而没有item2vec好</p><h4 id="3-autoencoder和word2vec的关系是什么"><a class="markdownIt-Anchor" href="#3-autoencoder和word2vec的关系是什么"></a> 3. AutoEncoder和Word2vec的关系是什么？</h4><p>没找到特别好的材料，欢迎留言，参考 <a href="https://spaces.ac.cn/archives/4233">SVD分解(三)：连Word2Vec都只不过是个SVD？</a>中的说法：</p><blockquote><p>结构上：Word2vec与AutoEncoder和SVD是一样的；</p><p>实现上：Word2Vec最后接的是softmax来预测概率，也就是说实现了一个非线性变换，而自编码器或者SVD并没有。</p></blockquote><h3 id="6-扩展阅读"><a class="markdownIt-Anchor" href="#6-扩展阅读"></a> 6. 扩展阅读</h3><p>强烈建议大家阅读下王喆推荐的<a href="https://zhuanlan.zhihu.com/p/58805184">Embedding从入门到专家必读的十篇论文</a>。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/ba149af9.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-embedding是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-embedding是什么&quot;&gt;&lt;/a&gt; 1. Embedding是什么&lt;/h3&gt;
&lt;p&gt;Embedding 就是用一个数值向量“表示”一个对象（Object）</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="Embedding" scheme="https://www.notlate.net/tags/Embedding/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记04：特征工程介绍</title>
    <link href="https://www.notlate.net/posts/75f170bd.html"/>
    <id>https://www.notlate.net/posts/75f170bd.html</id>
    <published>2021-01-05T12:54:29.000Z</published>
    <updated>2021-03-18T15:04:38.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-特征与工程"><a class="markdownIt-Anchor" href="#1-特征与工程"></a> 1. 特征与工程</h3><h4 id="1特征就是对具体行为的抽象但是抽象过程会造成信息的损失"><a class="markdownIt-Anchor" href="#1特征就是对具体行为的抽象但是抽象过程会造成信息的损失"></a> （1）特征就是对具体行为的抽象，但是抽象过程会造成信息的损失</h4><p>① 因为具体的推荐行为和场景中包含大量原始的场景、图片和状态信息，保存所有信息的存储空间过大，我们根本无法实现。</p><p>② 因为具体的推荐场景中包含大量冗余的、无用的信息，把它们都考虑进来甚至会损害模型的泛化能力。</p><h4 id="2特征工程原则"><a class="markdownIt-Anchor" href="#2特征工程原则"></a> （2）特征工程原则</h4><p>① <strong>尽可能地让特征工程抽取出的一组特征，能够保留推荐环境及用户行为过程中的所有“有用“信息，并且尽量摒弃冗余信息</strong></p><p>② <strong>在已有的、可获得的数据基础上，“尽量”保留有用信息是现实中构建特征工程的原则</strong></p><h3 id="3特征处理没有标准答案"><a class="markdownIt-Anchor" href="#3特征处理没有标准答案"></a> （3）特征处理：没有标准答案</h3><h4 id="类别-id类"><a class="markdownIt-Anchor" href="#类别-id类"></a> 类别、ID类</h4><p>① one-hot</p><p>② multi-hot</p><h4 id="数值类"><a class="markdownIt-Anchor" href="#数值类"></a> 数值类</h4><p>① 归一化：解决特征取值范围不统一的问题，但无法改变特征值的分布</p><p>② 分桶：解决特征值分布极不均匀的问题。将样本按照某特征的值从高到低排序，然后按照桶的数量找到分位数，将样本分到各自的桶中，再用桶 ID 作为特征值。</p><p>③ 特征交叉：参考YouTube深度推荐模型中的平方、开方等等改变特征分布。</p><p>④ Spark MLlib：分别提供了两个转换器 MinMaxScaler 和 QuantileDiscretizer，来进行归一化和分桶的特征处理</p><h3 id="3常用特征"><a class="markdownIt-Anchor" href="#3常用特征"></a> （3）常用特征</h3><h4 id="用户行为数据"><a class="markdownIt-Anchor" href="#用户行为数据"></a> 用户行为数据。</h4><p>又分为<strong>显性反馈行为</strong>和<strong>隐性反馈行为</strong>。在当前的推荐系统特征工程中，隐性反馈行为越来越重要，主要原因是显性反馈行为的收集难度过大，数据量小。</p><h4 id="用户关系数据分为强关系和弱关系"><a class="markdownIt-Anchor" href="#用户关系数据分为强关系和弱关系"></a> 用户关系数据，分为“强关系”和“弱关系”。</h4><p>用途：</p><p>① 作为召回层的一种物品召回方式</p><p>② 建立关系图，使用 Graph Embedding 的方法生成用户和物品的 Embedding</p><p>③ 直接利用关系数据，通过“好友”的特征为用户添加新的属性特征</p><p>④ 直接建立社会化推荐系统</p><h4 id="属性-标签类数据"><a class="markdownIt-Anchor" href="#属性-标签类数据"></a> 属性、标签类数据。</h4><p>特征处理方法：</p><p><img src="https://gitee.com/acdance/img/raw/master/blogs/image-20210128222322499.png" alt="特征处理方法" /></p><p>① 通过 Multi-hot 编码的方式将其转换成特征向量</p><p>② 重要的属性标签类特征也可以先转换成 Embedding，比如业界最新的做法是将标签属性类数据与其描述主体一起构建成知识图谱（Knowledge Graph），在其上施以 Graph Embedding 或者 GNN（Graph Neural Network，图神经网络）生成各节点的 Embedding</p><h4 id="内容类数据可以看作属性标签型特征的延伸"><a class="markdownIt-Anchor" href="#内容类数据可以看作属性标签型特征的延伸"></a> 内容类数据，可以看作属性标签型特征的延伸。</h4><p>① 形式：往往是大段的描述型文字、图片，甚至视频。</p><p>② 使用：通过自然语言处理、计算机视觉等技术手段提取关键内容特征转成标签类数据。</p><h4 id="场景信息上下文信息"><a class="markdownIt-Anchor" href="#场景信息上下文信息"></a> 场景信息（上下文信息）。</h4><p>① 形式：时间、地点、当前页面信息、季节、月份、节假日、天气、社会大事件等等</p><p>② 任何影响用户决定的因素都可以当作是场景特征的一部分，但实际中更多利用易获取的场景特征</p><h3 id="4经典问答"><a class="markdownIt-Anchor" href="#4经典问答"></a> （4）经典问答</h3><h4 id="1-问以音乐app为例用户挑选歌曲时的关键信息有哪些"><a class="markdownIt-Anchor" href="#1-问以音乐app为例用户挑选歌曲时的关键信息有哪些"></a> 1. 问：以音乐APP为例，用户挑选歌曲时的关键信息有哪些？</h4><p>① 听歌的目的。比如是为了放松，冥想，学习还是运动。目的决定了歌曲是安静还是激昂，舒缓还是节奏感强烈。</p><p>② 歌曲或歌单是否受欢迎。定下基调后，我一般会选择收藏或播放量较多的歌曲。这样一般不容易采坑。</p><p>③ 歌曲的旋律与当下状态的匹配度。当下的状态可能是心情，情绪或身体的疲劳程度，而旋律与状态的匹配也很重要。</p><h4 id="2-问音乐app工程师应该提取哪些关键信息作为特征"><a class="markdownIt-Anchor" href="#2-问音乐app工程师应该提取哪些关键信息作为特征"></a> 2. 问：音乐APP工程师应该提取哪些关键信息作为特征？</h4><p>① 用户听歌的目的很难准确预测，但是可以通过“隐性”数据去推测，比如搜索关键词等。</p><p>② 歌曲或歌单是否受欢迎，则可以通过歌曲或歌单的播放量、收藏量去建立特征，而具体到人和歌曲的关系时，还可以进一步具体到单曲循环的次数等来细化特定用户对特定歌曲的喜好程度。</p><p>③ 当下的状态也很难显性的获得，则可以根据历史听歌记录去推测用户的生理节律，例如夜晚会愿意听舒缓的歌曲，运动会愿意听节奏感强烈的歌曲等等。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/75f170bd.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-特征与工程&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-特征与工程&quot;&gt;&lt;/a&gt; 1. 特征与工程&lt;/h3&gt;
&lt;h4 id=&quot;1特征就是对具体行为的抽象但是抽象过程会造成信息的损失&quot;&gt;&lt;a class=&quot;markdownIt-A</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="特征工程" scheme="https://www.notlate.net/tags/%E7%89%B9%E5%BE%81%E5%B7%A5%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>深度学习推荐系统-笔记01：推荐系统基础</title>
    <link href="https://www.notlate.net/posts/ffff5cb7.html"/>
    <id>https://www.notlate.net/posts/ffff5cb7.html</id>
    <published>2021-01-05T12:15:34.000Z</published>
    <updated>2021-03-18T15:04:38.506Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-深度学习推荐系统基础概念"><a class="markdownIt-Anchor" href="#1-深度学习推荐系统基础概念"></a> 1. 深度学习推荐系统基础概念</h3><p><img src="https://gitee.com/acdance/img/raw/master/blogs/01.%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F.png" alt="推荐系统" /></p><h3 id="2-从0到1搭建深度学习推荐系统-开源项目sparrow-recsys实操以mac为例"><a class="markdownIt-Anchor" href="#2-从0到1搭建深度学习推荐系统-开源项目sparrow-recsys实操以mac为例"></a> 2. 从0到1搭建深度学习推荐系统  – 开源项目Sparrow RecSys实操（以Mac为例）</h3><h4 id="1安装scala-211务必是211大版本否则与开源项目设置的版本号不匹配会有执行失败的问题"><a class="markdownIt-Anchor" href="#1安装scala-211务必是211大版本否则与开源项目设置的版本号不匹配会有执行失败的问题"></a> （1）安装Scala 2.11（务必是2.11大版本，否则与开源项目设置的版本号不匹配，会有执行失败的问题）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew install scala@2.11</span><br></pre></td></tr></table></figure><h4 id="2下载开源项目sparrow-recsys"><a class="markdownIt-Anchor" href="#2下载开源项目sparrow-recsys"></a> （2）下载开源项目Sparrow RecSys</h4><p><code>git clone https://github.com/wzhe06/SparrowRecSys.git</code></p><p>项目地址：<a href="https://github.com/wzhe06/SparrowRecSys">https://github.com/wzhe06/SparrowRecSys</a></p><h4 id="3安装idea和jdk"><a class="markdownIt-Anchor" href="#3安装idea和jdk"></a> （3）安装IDEA和JDK</h4><p>① 下载IDEA（<a href="https://www.jetbrains.com/idea/download/#section=mac%EF%BC%89">https://www.jetbrains.com/idea/download/#section=mac）</a></p><p>② 下载JDK（<a href="https://www.oracle.com/java/technologies/javase-jdk15-downloads.html%EF%BC%89">https://www.oracle.com/java/technologies/javase-jdk15-downloads.html）</a></p><p>③ 安装IDEA和JDK（JDK的路径~/Library/Java/JavaVirtualMachines/openjdk-15.0.1-1）</p><h4 id="4导入工程运行"><a class="markdownIt-Anchor" href="#4导入工程运行"></a> （4）导入工程&amp;运行</h4><p>① 打开IDEA，打开File-&gt;Project Strucure-&gt;Project-&gt;Project JDK(我的好像会自动识别)。若没有识别（显示jdk15.1）,点击三角号，自己添加，步骤Add SDK-&gt;JDK-&gt;选择上面提到的JDK路径选择。</p><p>② 在pom.xml点击右键，设置为maven project-&gt;‘Reload project’。耐心等待，这个很费时间。</p><p>③ 然后找到SparrowRecSys/src/main/java/com/SparrowRecSys/online/RecSysServer,右击选择&quot;Run ‘RecSysServer.main()’&quot;,程序就执行起来了.</p><p>④ 浏览器中输入http://localhost:6010/即可打开首页</p><h4 id="5sparrowrecsys涵盖的技术"><a class="markdownIt-Anchor" href="#5sparrowrecsys涵盖的技术"></a> （5）SparrowRecsys涵盖的技术</h4><p><img src="https://gitee.com/acdance/img/raw/master/blogs/8cee6a7eeebda9745bfbe1b6yy18c59e.jpg" alt="" /></p><h3 id="3-推荐系统相关知识扩充"><a class="markdownIt-Anchor" href="#3-推荐系统相关知识扩充"></a> 3. 推荐系统相关知识扩充</h3><h4 id="1书籍推荐"><a class="markdownIt-Anchor" href="#1书籍推荐"></a> （1）书籍推荐</h4><p>① 深度学习推荐系统</p><p>② 西瓜书</p><p>③ 蒲公英书</p><p>④ 百面机器学习</p><p>⑤ 数学之美（吴军）</p><h4 id="2实践工具相关"><a class="markdownIt-Anchor" href="#2实践工具相关"></a> （2）实践工具相关</h4><h4 id="spark"><a class="markdownIt-Anchor" href="#spark"></a> Spark</h4><p>① <a href="https://www.zhihu.com/question/27974418">形象理解Hadoop、Hive、Spark</a></p><p>② <a href="https://spark.apache.org/docs/2.4.3/quick-start.html">根据官网写一个Spark Hello World 程序</a></p><p>③ <a href="https://spark.apache.org/docs/2.4.3/ml-guide.html">初步了解Spark MLlib</a></p><h4 id="tensorflow"><a class="markdownIt-Anchor" href="#tensorflow"></a> Tensorflow</h4><p>① <a href="https://blog.csdn.net/li528405176/article/details/83857286">介绍 TensorFlow 和 Keras 的基本概念的文章</a></p><p>② <a href="https://www.tensorflow.org/tutorials/quickstart/beginner">Keras 写一个 Hello World</a></p><p>③ <a href="https://www.tensorflow.org/tutorials">官方教程</a></p><h4 id="redis"><a class="markdownIt-Anchor" href="#redis"></a> Redis</h4><p>① <a href="http://www.redis.cn/">Redis基本介绍</a></p><p>② <a href="http://www.redis.cn/download.html">Redis基本操作</a></p><h4 id="经典问答"><a class="markdownIt-Anchor" href="#经典问答"></a> 经典问答</h4><h4 id="1-问对于电影推荐系统来讲哪些数据对生成用户个性化推荐结果最有帮助"><a class="markdownIt-Anchor" href="#1-问对于电影推荐系统来讲哪些数据对生成用户个性化推荐结果最有帮助"></a> 1. 问：对于电影推荐系统来讲，哪些数据对生成用户个性化推荐结果最有帮助？</h4><p>答：（1）内容相关特征：电影种类，演员，电影内容，电影质量等；（2）用户行为特征：用户历史浏览记录、观看记录等；</p><h4 id="2-问召回层单独优化新增特征在排序层没有如何处理"><a class="markdownIt-Anchor" href="#2-问召回层单独优化新增特征在排序层没有如何处理"></a> 2. 问：召回层单独优化新增特征，在排序层没有，如何处理？</h4><p>答：在设计召回层和排序层的时候一般要联合设计，召回层要特别关注召回率指标。如果新增特征对结果影响比较大，排序层模型训练的时候同步引入这两个特征。</p><h3 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h3><p>《深度学习推荐系统实战》 – 极客时间，王喆</p><blockquote><p>本文首发于个人小站：<a href="https://notlate.net/posts/ffff5cb7.html">NotLate.net</a>，欢迎关注。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;1-深度学习推荐系统基础概念&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-深度学习推荐系统基础概念&quot;&gt;&lt;/a&gt; 1. 深度学习推荐系统基础概念&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://gitee.com/acdance</summary>
      
    
    
    
    <category term="深度学习推荐系统" scheme="https://www.notlate.net/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
    
    <category term="推荐系统" scheme="https://www.notlate.net/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>Python操作MongoDB</title>
    <link href="https://www.notlate.net/posts/fcb39fd4.html"/>
    <id>https://www.notlate.net/posts/fcb39fd4.html</id>
    <published>2020-12-26T16:55:51.000Z</published>
    <updated>2021-03-18T15:04:38.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-python基础操作"><a class="markdownIt-Anchor" href="#1-python基础操作"></a> 1. python基础操作</h2><ol><li><p><code>pip install pymongo</code></p></li><li><p>连接数据库，ip：localhost  端口号：27017</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymongo</span><br><span class="line">myclient = pymongo.MongoClient(<span class="string">&quot;mongodb://localhost:27017/&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>创建或切换到名为<code>notlate</code>的数据库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mydb = myclient[<span class="string">&quot;notlate&quot;</span>]</span><br></pre></td></tr></table></figure></li><li><p>数据库是否已经存在：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dblist = myclient.list_database_names()</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;notlate&quot;</span> <span class="keyword">in</span> dblist:</span><br><span class="line">    print(<span class="string">&quot;数据库已存在！&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>删除名为notlate的数据库：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">myclient.drop_database(mydb)</span><br></pre></td></tr></table></figure></li><li><p>创建或切换名为<code>notlate2</code>的集合Collection：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_collection = mydb[<span class="string">&#x27;notlate2&#x27;</span>]</span><br></pre></td></tr></table></figure></li><li><p>删除集合：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_collection.drop()</span><br></pre></td></tr></table></figure></li><li><p>更新文档，若不存在，则创建：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_collection.update_one(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;not&#x27;</span>&#125;, &#123;<span class="string">&#x27;$set&#x27;</span>: &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;not&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="number">15</span>&#125;&#125;, upsert=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure></li><li><p>查找所有文档：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> doc <span class="keyword">in</span> my_collection.find():</span><br><span class="line">    print(doc)</span><br></pre></td></tr></table></figure></li><li><p>查找指定条件的文档：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> doc <span class="keyword">in</span> my_collection.find(&#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;not&#x27;</span>&#125;):</span><br><span class="line">    print(doc)</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-python基础操作&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-python基础操作&quot;&gt;&lt;/a&gt; 1. python基础操作&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;pip install pymongo&lt;/code</summary>
      
    
    
    
    <category term="分布式" scheme="https://www.notlate.net/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="mongodb" scheme="https://www.notlate.net/tags/mongodb/"/>
    
    <category term="数据库" scheme="https://www.notlate.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Mongodb增删改查</title>
    <link href="https://www.notlate.net/posts/c2f4b902.html"/>
    <id>https://www.notlate.net/posts/c2f4b902.html</id>
    <published>2020-12-25T16:55:51.000Z</published>
    <updated>2021-03-18T15:04:38.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建数据库"><a class="markdownIt-Anchor" href="#1-创建数据库"></a> 1. 创建数据库</h2><ol><li>显示所有数据库：<code>show dbs</code></li><li>切换/创建数据：<code>use NotLate</code></li><li>再次<code>show dbs</code>发现新创建的<code>NotLate</code>数据库并不在列表中，因为数据库是空的</li><li>插入一条数据：<code>db.NotLate.insert(&#123;&quot;name&quot;: &quot;not too late yet&quot;&#125;)</code></li><li>再次<code>show dbs</code>发现列表中有<code>NotLate</code>了</li></ol><h2 id="2-删除数据库"><a class="markdownIt-Anchor" href="#2-删除数据库"></a> 2. 删除数据库</h2><ol><li>切换到要删除的数据库：<code>use NotLate</code></li><li>删除：<code>db.dropDatabase()</code></li><li>查看所在数据库：<code>db</code>，依然会显示所在数据库是：<code>NotLate</code></li><li>使用<code>show dbs</code>查看列表：发现列表中已经没有<code>NotLate</code>了</li></ol><h2 id="3-创建集合"><a class="markdownIt-Anchor" href="#3-创建集合"></a> 3. 创建集合</h2><ol><li><p>切换数据库：<code>use NotLate</code></p></li><li><p>创建集合语法格式：<code>db.createCollection(name, options)</code>，例如：<code>db.createCollection(&quot;notlate&quot;)</code>，其中<code>options</code>为可选参数：</p><table><thead><tr><th style="text-align:left">字段</th><th style="text-align:left">类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">capped</td><td style="text-align:left">布尔</td><td style="text-align:left">（可选）如果为 true，则创建固定集合。固定集合是指有着固定大小的集合，当达到最大值时，它会自动覆盖最早的文档。 <strong>当该值为 true 时，必须指定 size 参数。</strong></td></tr><tr><td style="text-align:left">autoIndexId</td><td style="text-align:left">布尔</td><td style="text-align:left">3.2 之后不再支持该参数。（可选）如为 true，自动在 _id 字段创建索引。默认为 false。</td></tr><tr><td style="text-align:left">size</td><td style="text-align:left">数值</td><td style="text-align:left">（可选）为固定集合指定一个最大值，即字节数。 <strong>如果 capped 为 true，也需要指定该字段。</strong></td></tr><tr><td style="text-align:left">max</td><td style="text-align:left">数值</td><td style="text-align:left">（可选）指定固定集合中包含文档的最大数量。</td></tr></tbody></table></li><li><p>查看集合列表：<code>show tables</code> 或者 <code>show collections</code></p></li><li><p>创建固定集合 <code>notlatetest</code>，整个集合空间大小 <code>1024 KB</code>, 文档最大个数为 <code>10</code> 个：</p></li></ol><p><code>db.createCollection(&quot;notlatetest&quot;, &#123; capped : true, autoIndexId : true, size : 1024, max : 10 &#125; )</code></p><ol start="5"><li>如果没有集合，可以在插入文档时，自动创建集合：<code>db.not1.insert(&#123;&quot;name&quot;: &quot;not1&quot;&#125;)</code></li></ol><h2 id="4-删除集合"><a class="markdownIt-Anchor" href="#4-删除集合"></a> 4. 删除集合</h2><ol><li>语法格式：<code>db.collection.drop()</code></li><li>切换到NotLate数据库：<code>use NotLate</code></li><li>查看集合列表：<code>show collections</code></li><li>删除集合not1：<code>db.not1.drop()</code></li><li>再次查看集合列表：<code>show collections</code></li></ol><h2 id="5-插入文档"><a class="markdownIt-Anchor" href="#5-插入文档"></a> 5. 插入文档</h2><ol><li>语法格式：<code>db.collection_name.insert(document)</code>，若_id主键不存在，则插入；否则抛出异常</li><li>3.2之后新增<code>db.collection_name.insertOne(doc)</code>和<code>db.collection_name.insertMany([doc1, doc2, ...])</code></li><li>插入一份文档：<code>db.not1.insert(&#123;&quot;name&quot;: &quot;not1&quot;&#125;)</code></li><li>查看文档列表：<code>db.not1.find()</code></li><li>插入多份文档：<code>db.not1.insertMany(&#123;&quot;name&quot;: &quot;not2&quot;&#125;, &#123;&quot;name&quot;: &quot;not3&quot;&#125;)</code></li><li>查看文档列表：<code>db.not1.find()</code></li></ol><h2 id="6-更新文档"><a class="markdownIt-Anchor" href="#6-更新文档"></a> 6. 更新文档</h2><ol><li>语法格式：</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">db.collection.update(</span><br><span class="line">   &lt;query&gt;,</span><br><span class="line">   &lt;update&gt;,</span><br><span class="line">   &#123;</span><br><span class="line">     upsert: &lt;boolean&gt;,</span><br><span class="line">     multi: &lt;boolean&gt;,</span><br><span class="line">     writeConcern: &lt;document&gt;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ol start="2"><li><p>参数含义：</p><p>① <strong>query</strong> : update的查询条件，类似sql update查询内where后面的。</p><p>② <strong>update</strong> : update的对象和一些更新的操作符（如<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.3em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span></span></span></span>inc…）等，也可以理解为sql update查询内set后面的</p><p>③ <strong>upsert</strong> : 可选，这个参数的意思是，如果不存在update的记录，是否插入objNew,true为插入，默认是false，不插入。</p><p>④ <strong>multi</strong> : 可选，mongodb 默认是false,只更新找到的第一条记录，如果这个参数为true,就把按条件查出来多条记录全部更新。</p><p>⑤ <strong>writeConcern</strong> :可选，抛出异常的级别。</p></li><li><p>把<code>name=not1</code> 更新为<code>name=not111</code> : <code>db.not1.update(&#123;&quot;name&quot;: &quot;not1&quot;&#125;, &#123;\$set: &#123;&quot;name&quot;: &quot;not111&quot;&#125;&#125;, &#123;multi: true&#125;)</code> , 其中，<code>&#123;multi:true&#125;</code>表示把所有<code>name=not1</code>的文档都修改成<code>name=not111</code></p></li><li><p>查看文档列表：<code>db.not1.find()</code></p></li><li><p>其他操作，比如inc等后续补充完善。</p></li></ol><h2 id="7-删除文档"><a class="markdownIt-Anchor" href="#7-删除文档"></a> 7. 删除文档</h2><ol><li>deleteOne()和deleteMany()</li><li>删除name=not111的文档: <code>db.not1.deleteOne(&#123;&quot;name&quot;: &quot;not111&quot;&#125;)</code></li><li>查看文档列表：<code>db.not1.find()</code></li><li>删除name=not2的全部文档：<code>db.not1.deleteMany(&#123;&quot;name&quot;: &quot;not2&quot;&#125;)</code></li><li>查看文档列表：<code>db.not1.find()</code></li><li>删除全部文档：db.not1.deleteMany({})</li></ol><h3 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h3><ol><li><a href="#https://www.runoob.com/mongodb/mongodb-tutorial.html">菜鸟-MongoDB 教程</a></li><li><a href="#https://docs.mongodb.com/manual/reference/method/js-collection/">MongoDB官方文档</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-创建数据库&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-创建数据库&quot;&gt;&lt;/a&gt; 1. 创建数据库&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;显示所有数据库：&lt;code&gt;show dbs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;切换/创建数据：&lt;co</summary>
      
    
    
    
    <category term="分布式" scheme="https://www.notlate.net/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="mongodb" scheme="https://www.notlate.net/tags/mongodb/"/>
    
    <category term="数据库" scheme="https://www.notlate.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB基础</title>
    <link href="https://www.notlate.net/posts/f20a5c88.html"/>
    <id>https://www.notlate.net/posts/f20a5c88.html</id>
    <published>2020-12-25T16:55:34.000Z</published>
    <updated>2021-03-18T15:04:38.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-mac-brew安装命令"><a class="markdownIt-Anchor" href="#1-mac-brew安装命令"></a> 1. Mac brew安装命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap mongodb/brew</span><br><span class="line">brew install mongodb-community@4.4</span><br></pre></td></tr></table></figure><p>4.4表示最新版本</p><h2 id="2-安装配置信息"><a class="markdownIt-Anchor" href="#2-安装配置信息"></a> 2. 安装配置信息</h2><ol><li>配置文件：<code>/usr/local/etc/mongod.conf</code></li><li>日志文件路径：<code>/usr/local/var/log/mongodb</code></li><li>数据存放路径：<code>/usr/local/var/mongodb</code></li></ol><h2 id="3-运行命令"><a class="markdownIt-Anchor" href="#3-运行命令"></a> 3. 运行命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew启动：brew services start mongodb-community</span><br><span class="line">brew停止：brew services stop mongodb-community</span><br><span class="line">mongod命令后台进程方式：mongod --config /usr/local/etc/mongod.conf --fork</span><br><span class="line">后台进程关闭方式：先进入mongo shell，然后执行db.adminCommand(&#123; &quot;shutdown&quot; : 1 &#125;)</span><br></pre></td></tr></table></figure><h2 id="4-数据库相关基础命令"><a class="markdownIt-Anchor" href="#4-数据库相关基础命令"></a> 4. 数据库相关基础命令</h2><ol><li><p>进入mongo shell：先用<code>brew命令</code>启动<code>mongod</code>服务，然后执行客户端<code>mongo</code>命令连接到服务。</p></li><li><p>显示所有数据库：<code>show dbs</code></p></li><li><p>查看当前所在数据库：<code>db</code>，默认所在数据库是：<code>test</code></p></li><li><p>切换数据库： <code>use xxx</code>，其中<code>xxx</code>是新的数据库名字，例如：<code>use local</code>，然后可以用<code>db</code>确认。</p></li><li><p>保留数据库名：</p><p>① admin：从权限的角度来看，这是&quot;root&quot;数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</p><p>② local：这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</p><p>③ config：当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</p></li></ol><h2 id="5-rdbms和mongodb数据库术语对比"><a class="markdownIt-Anchor" href="#5-rdbms和mongodb数据库术语对比"></a> 5. RDBMS和MongoDB数据库术语对比</h2><table><thead><tr><th>RDBMS</th><th>MongoDB</th></tr></thead><tbody><tr><td>数据库</td><td>数据库</td></tr><tr><td>表格</td><td>集合(Collection)</td></tr><tr><td>行</td><td>文档(document)，一组键值对(即BSON)</td></tr><tr><td>列</td><td>字段</td></tr><tr><td>表联合</td><td>嵌入文档</td></tr><tr><td>主键</td><td>主键(MongoDB 提供了 key 为 _id )</td></tr></tbody></table><h2 id="6-mongodb数据类型"><a class="markdownIt-Anchor" href="#6-mongodb数据类型"></a> 6. MongoDB数据类型</h2><table><thead><tr><th style="text-align:left">数据类型</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">String</td><td style="text-align:left">字符串。存储数据常用的数据类型。在 MongoDB 中，UTF-8 编码的字符串才是合法的。</td></tr><tr><td style="text-align:left">Integer</td><td style="text-align:left">整型数值。用于存储数值。根据你所采用的服务器，可分为 32 位或 64 位。</td></tr><tr><td style="text-align:left">Boolean</td><td style="text-align:left">布尔值。用于存储布尔值（真/假）。</td></tr><tr><td style="text-align:left">Double</td><td style="text-align:left">双精度浮点值。用于存储浮点值。</td></tr><tr><td style="text-align:left">Min/Max keys</td><td style="text-align:left">将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比。</td></tr><tr><td style="text-align:left">Array</td><td style="text-align:left">用于将数组或列表或多个值存储为一个键。</td></tr><tr><td style="text-align:left">Timestamp</td><td style="text-align:left">时间戳。记录文档修改或添加的具体时间。</td></tr><tr><td style="text-align:left">Object</td><td style="text-align:left">用于内嵌文档。</td></tr><tr><td style="text-align:left">Null</td><td style="text-align:left">用于创建空值。</td></tr><tr><td style="text-align:left">Symbol</td><td style="text-align:left">符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td style="text-align:left">Date</td><td style="text-align:left">日期时间。用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td style="text-align:left">Object ID</td><td style="text-align:left">对象 ID。用于创建文档的 ID。</td></tr><tr><td style="text-align:left">Binary Data</td><td style="text-align:left">二进制数据。用于存储二进制数据。</td></tr><tr><td style="text-align:left">Code</td><td style="text-align:left">代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td style="text-align:left">Regular expression</td><td style="text-align:left">正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><ol><li><p>ObjectId：类似唯一主键，可以很快的去生成和排序，包含 12 bytes，含义是：</p><p>​① 前 4 个字节表示创建 <strong>unix</strong> 时间戳,格林尼治时间 <strong>UTC</strong> 时间，比北京时间晚了 8 个小时</p><p>​② 接下来的 3 个字节是机器标识码</p><p>​③ 紧接的两个字节由进程 id 组成 PID</p><p>​④ 最后三个字节是随机数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> var objId = ObjectId()</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> objId.getTimestamp()     <span class="comment"># ISODate(&quot;2021-01-07T12:57:38Z&quot;)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> objId.str    <span class="comment"># 5ff70542f9b544d4a909f49b</span></span></span><br></pre></td></tr></table></figure></li><li><p>字符串：BSON字符串都是UTF-8编码</p></li><li><p>时间戳：BSON 有一个特殊的时间戳类型用于 MongoDB 内部使用，与普通的 日期 类型不相关。 时间戳值是一个 64 位的值。其中：</p><p>​① 前32位是一个 <code>time_t</code> 值（与Unix新纪元相差的秒数）</p><p>​② 后32位是在某秒中操作的一个递增的<code>序数</code></p></li><li><p>日期：表示当前距离 Unix新纪元（1970年1月1日）的毫秒数。日期类型是有符号的, 负数表示 1970 年之前的日期。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> var date1 = new Date()  <span class="comment"># 格林尼治时间</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> date1    <span class="comment"># ISODate(&quot;2021-01-07T13:07:15.195Z&quot;)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> typeof date1  <span class="comment"># object</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> var date1Str = date1.toString()  <span class="comment"># Thu Jan 07 2021 21:07:15 GMT+0800 (CST)</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> typeof date1Str  <span class="comment"># string</span></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> Date()   <span class="comment"># Thu Jan 07 2021 21:09:44 GMT+0800 (CST)</span></span></span><br></pre></td></tr></table></figure></li></ol><h2 id="7-mongodb连接"><a class="markdownIt-Anchor" href="#7-mongodb连接"></a> 7. MongoDB连接</h2><ol><li>标准连接URI：</li></ol><p><code>mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</code></p><p>​①  <strong>mongodb://</strong> 这是固定的格式，必须要指定。</p><p>​② <strong>username:password@</strong> 可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登录这个数据库</p><p>​③ <strong>host1</strong> 必须的指定至少一个host, host1 是这个URI唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。</p><p>​④ <strong>portX</strong> 可选的指定端口，如果不填，默认为27017</p><p>​⑤ <strong>/database</strong> 如果指定username:password@，连接并验证登录指定数据库。若不指定，默认打开 test 数据库。</p><p>​⑥ <strong>?options</strong> 是连接选项。如果不使用/database，则前面需要加上/。所有连接选项都是键值对name=value，键值对之间通过&amp;或;（分号）隔开</p><ol start="2"><li><p>连接示例</p><p><code>mongodb://admin:123456@localhost/</code></p></li></ol><h3 id="参考文档"><a class="markdownIt-Anchor" href="#参考文档"></a> 参考文档</h3><ol><li><a href="#https://www.runoob.com/mongodb/mongodb-tutorial.html">菜鸟-MongoDB 教程</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-mac-brew安装命令&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-mac-brew安装命令&quot;&gt;&lt;/a&gt; 1. Mac brew安装命令&lt;/h2&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table</summary>
      
    
    
    
    <category term="分布式" scheme="https://www.notlate.net/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
    <category term="mongodb" scheme="https://www.notlate.net/tags/mongodb/"/>
    
    <category term="数据库" scheme="https://www.notlate.net/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
</feed>
